// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: singlepart.proto

package se.lth.cs.docforia.io.protobuf3;

public final class Singlepart {
  private Singlepart() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface PropertySetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:PropertySet)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>repeated uint32 keys = 1 [packed = true];</code>
     */
    java.util.List<java.lang.Integer> getKeysList();
    /**
     * <code>repeated uint32 keys = 1 [packed = true];</code>
     */
    int getKeysCount();
    /**
     * <code>repeated uint32 keys = 1 [packed = true];</code>
     */
    int getKeys(int index);
  }
  /**
   * Protobuf type {@code PropertySet}
   */
  public  static final class PropertySet extends
      com.google.protobuf.GeneratedMessageLite<
          PropertySet, PropertySet.Builder> implements
      // @@protoc_insertion_point(message_implements:PropertySet)
      PropertySetOrBuilder {
    private PropertySet() {
      keys_ = emptyIntList();
    }
    public static final int KEYS_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.IntList keys_;
    /**
     * <code>repeated uint32 keys = 1 [packed = true];</code>
     */
    public java.util.List<java.lang.Integer>
        getKeysList() {
      return keys_;
    }
    /**
     * <code>repeated uint32 keys = 1 [packed = true];</code>
     */
    public int getKeysCount() {
      return keys_.size();
    }
    /**
     * <code>repeated uint32 keys = 1 [packed = true];</code>
     */
    public int getKeys(int index) {
      return keys_.getInt(index);
    }
    private int keysMemoizedSerializedSize = -1;
    private void ensureKeysIsMutable() {
      if (!keys_.isModifiable()) {
        keys_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(keys_);
       }
    }
    /**
     * <code>repeated uint32 keys = 1 [packed = true];</code>
     */
    private void setKeys(
        int index, int value) {
      ensureKeysIsMutable();
      keys_.setInt(index, value);
    }
    /**
     * <code>repeated uint32 keys = 1 [packed = true];</code>
     */
    private void addKeys(int value) {
      ensureKeysIsMutable();
      keys_.addInt(value);
    }
    /**
     * <code>repeated uint32 keys = 1 [packed = true];</code>
     */
    private void addAllKeys(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureKeysIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, keys_);
    }
    /**
     * <code>repeated uint32 keys = 1 [packed = true];</code>
     */
    private void clearKeys() {
      keys_ = emptyIntList();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getKeysList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(keysMemoizedSerializedSize);
      }
      for (int i = 0; i < keys_.size(); i++) {
        output.writeUInt32NoTag(keys_.getInt(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < keys_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(keys_.getInt(i));
        }
        size += dataSize;
        if (!getKeysList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        keysMemoizedSerializedSize = dataSize;
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code PropertySet}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet, Builder> implements
        // @@protoc_insertion_point(builder_implements:PropertySet)
        se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySetOrBuilder {
      // Construct using se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>repeated uint32 keys = 1 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getKeysList() {
        return java.util.Collections.unmodifiableList(
            instance.getKeysList());
      }
      /**
       * <code>repeated uint32 keys = 1 [packed = true];</code>
       */
      public int getKeysCount() {
        return instance.getKeysCount();
      }
      /**
       * <code>repeated uint32 keys = 1 [packed = true];</code>
       */
      public int getKeys(int index) {
        return instance.getKeys(index);
      }
      /**
       * <code>repeated uint32 keys = 1 [packed = true];</code>
       */
      public Builder setKeys(
          int index, int value) {
        copyOnWrite();
        instance.setKeys(index, value);
        return this;
      }
      /**
       * <code>repeated uint32 keys = 1 [packed = true];</code>
       */
      public Builder addKeys(int value) {
        copyOnWrite();
        instance.addKeys(value);
        return this;
      }
      /**
       * <code>repeated uint32 keys = 1 [packed = true];</code>
       */
      public Builder addAllKeys(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllKeys(values);
        return this;
      }
      /**
       * <code>repeated uint32 keys = 1 [packed = true];</code>
       */
      public Builder clearKeys() {
        copyOnWrite();
        instance.clearKeys();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PropertySet)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          keys_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet other = (se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet) arg1;
          keys_= visitor.visitIntList(keys_, other.keys_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  if (!keys_.isModifiable()) {
                    keys_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(keys_);
                  }
                  keys_.addInt(input.readUInt32());
                  break;
                }
                case 10: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!keys_.isModifiable() && input.getBytesUntilLimit() > 0) {
                    keys_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(keys_);
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    keys_.addInt(input.readUInt32());
                  }
                  input.popLimit(limit);
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:PropertySet)
    private static final se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new PropertySet();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<PropertySet> PARSER;

    public static com.google.protobuf.Parser<PropertySet> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface PropertyKeyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:PropertyKey)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .PropertyKey.SpecialKey special = 1;</code>
     */
    int getSpecialValue();
    /**
     * <code>optional .PropertyKey.SpecialKey special = 1;</code>
     */
    se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey.SpecialKey getSpecial();

    /**
     * <code>optional string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>optional .PropertyKey.DataType type = 3;</code>
     */
    int getTypeValue();
    /**
     * <code>optional .PropertyKey.DataType type = 3;</code>
     */
    se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey.DataType getType();

    /**
     * <code>optional uint32 layerid = 4;</code>
     */
    int getLayerid();

    public se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey.KeyCase getKeyCase();

    public se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey.ValuetypeCase getValuetypeCase();
  }
  /**
   * Protobuf type {@code PropertyKey}
   */
  public  static final class PropertyKey extends
      com.google.protobuf.GeneratedMessageLite<
          PropertyKey, PropertyKey.Builder> implements
      // @@protoc_insertion_point(message_implements:PropertyKey)
      PropertyKeyOrBuilder {
    private PropertyKey() {
    }
    /**
     * Protobuf enum {@code PropertyKey.SpecialKey}
     */
    public enum SpecialKey
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>NODE_RANGE_START_END = 0;</code>
       */
      NODE_RANGE_START_END(0),
      /**
       * <pre>
       *Type is D_INT (values are counts), layerid tells which layer
       * </pre>
       *
       * <code>NODE_NUM_EDGE_OUT = 1;</code>
       */
      NODE_NUM_EDGE_OUT(1),
      /**
       * <pre>
       *Type is D_INT (values are node indicies), layerid tells which layer
       * </pre>
       *
       * <code>EDGE_HEAD = 2;</code>
       */
      EDGE_HEAD(2),
      /**
       * <code>DOC_ID = 3;</code>
       */
      DOC_ID(3),
      /**
       * <code>DOC_URI = 4;</code>
       */
      DOC_URI(4),
      /**
       * <code>DOC_LANG = 5;</code>
       */
      DOC_LANG(5),
      /**
       * <code>DOC_TITLE = 6;</code>
       */
      DOC_TITLE(6),
      /**
       * <code>DOC_TEXT = 7;</code>
       */
      DOC_TEXT(7),
      /**
       * <code>DOC_TYPE = 8;</code>
       */
      DOC_TYPE(8),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>NODE_RANGE_START_END = 0;</code>
       */
      public static final int NODE_RANGE_START_END_VALUE = 0;
      /**
       * <pre>
       *Type is D_INT (values are counts), layerid tells which layer
       * </pre>
       *
       * <code>NODE_NUM_EDGE_OUT = 1;</code>
       */
      public static final int NODE_NUM_EDGE_OUT_VALUE = 1;
      /**
       * <pre>
       *Type is D_INT (values are node indicies), layerid tells which layer
       * </pre>
       *
       * <code>EDGE_HEAD = 2;</code>
       */
      public static final int EDGE_HEAD_VALUE = 2;
      /**
       * <code>DOC_ID = 3;</code>
       */
      public static final int DOC_ID_VALUE = 3;
      /**
       * <code>DOC_URI = 4;</code>
       */
      public static final int DOC_URI_VALUE = 4;
      /**
       * <code>DOC_LANG = 5;</code>
       */
      public static final int DOC_LANG_VALUE = 5;
      /**
       * <code>DOC_TITLE = 6;</code>
       */
      public static final int DOC_TITLE_VALUE = 6;
      /**
       * <code>DOC_TEXT = 7;</code>
       */
      public static final int DOC_TEXT_VALUE = 7;
      /**
       * <code>DOC_TYPE = 8;</code>
       */
      public static final int DOC_TYPE_VALUE = 8;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static SpecialKey valueOf(int value) {
        return forNumber(value);
      }

      public static SpecialKey forNumber(int value) {
        switch (value) {
          case 0: return NODE_RANGE_START_END;
          case 1: return NODE_NUM_EDGE_OUT;
          case 2: return EDGE_HEAD;
          case 3: return DOC_ID;
          case 4: return DOC_URI;
          case 5: return DOC_LANG;
          case 6: return DOC_TITLE;
          case 7: return DOC_TEXT;
          case 8: return DOC_TYPE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<SpecialKey>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          SpecialKey> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<SpecialKey>() {
              public SpecialKey findValueByNumber(int number) {
                return SpecialKey.forNumber(number);
              }
            };

      private final int value;

      private SpecialKey(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:PropertyKey.SpecialKey)
    }

    /**
     * Protobuf enum {@code PropertyKey.DataType}
     */
    public enum DataType
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>D_NULL = 0;</code>
       */
      D_NULL(0),
      /**
       * <code>D_BINARY = 1;</code>
       */
      D_BINARY(1),
      /**
       * <code>D_STRING = 2;</code>
       */
      D_STRING(2),
      /**
       * <code>D_INT = 3;</code>
       */
      D_INT(3),
      /**
       * <code>D_LONG = 4;</code>
       */
      D_LONG(4),
      /**
       * <code>D_FLOAT = 5;</code>
       */
      D_FLOAT(5),
      /**
       * <code>D_DOUBLE = 6;</code>
       */
      D_DOUBLE(6),
      /**
       * <code>D_BOOLEAN = 7;</code>
       */
      D_BOOLEAN(7),
      /**
       * <code>D_STRING_ARRAY = 8;</code>
       */
      D_STRING_ARRAY(8),
      /**
       * <code>D_INT_ARRAY = 9;</code>
       */
      D_INT_ARRAY(9),
      /**
       * <code>D_LONG_ARRAY = 10;</code>
       */
      D_LONG_ARRAY(10),
      /**
       * <code>D_FLOAT_ARRAY = 11;</code>
       */
      D_FLOAT_ARRAY(11),
      /**
       * <code>D_DOUBLE_ARRAY = 12;</code>
       */
      D_DOUBLE_ARRAY(12),
      /**
       * <code>D_BOOLEAN_ARARY = 13;</code>
       */
      D_BOOLEAN_ARARY(13),
      /**
       * <code>D_PROPERTY_MAP = 14;</code>
       */
      D_PROPERTY_MAP(14),
      /**
       * <code>D_DOCUMENT = 15;</code>
       */
      D_DOCUMENT(15),
      /**
       * <code>D_DOCUMENT_ARRAY = 16;</code>
       */
      D_DOCUMENT_ARRAY(16),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>D_NULL = 0;</code>
       */
      public static final int D_NULL_VALUE = 0;
      /**
       * <code>D_BINARY = 1;</code>
       */
      public static final int D_BINARY_VALUE = 1;
      /**
       * <code>D_STRING = 2;</code>
       */
      public static final int D_STRING_VALUE = 2;
      /**
       * <code>D_INT = 3;</code>
       */
      public static final int D_INT_VALUE = 3;
      /**
       * <code>D_LONG = 4;</code>
       */
      public static final int D_LONG_VALUE = 4;
      /**
       * <code>D_FLOAT = 5;</code>
       */
      public static final int D_FLOAT_VALUE = 5;
      /**
       * <code>D_DOUBLE = 6;</code>
       */
      public static final int D_DOUBLE_VALUE = 6;
      /**
       * <code>D_BOOLEAN = 7;</code>
       */
      public static final int D_BOOLEAN_VALUE = 7;
      /**
       * <code>D_STRING_ARRAY = 8;</code>
       */
      public static final int D_STRING_ARRAY_VALUE = 8;
      /**
       * <code>D_INT_ARRAY = 9;</code>
       */
      public static final int D_INT_ARRAY_VALUE = 9;
      /**
       * <code>D_LONG_ARRAY = 10;</code>
       */
      public static final int D_LONG_ARRAY_VALUE = 10;
      /**
       * <code>D_FLOAT_ARRAY = 11;</code>
       */
      public static final int D_FLOAT_ARRAY_VALUE = 11;
      /**
       * <code>D_DOUBLE_ARRAY = 12;</code>
       */
      public static final int D_DOUBLE_ARRAY_VALUE = 12;
      /**
       * <code>D_BOOLEAN_ARARY = 13;</code>
       */
      public static final int D_BOOLEAN_ARARY_VALUE = 13;
      /**
       * <code>D_PROPERTY_MAP = 14;</code>
       */
      public static final int D_PROPERTY_MAP_VALUE = 14;
      /**
       * <code>D_DOCUMENT = 15;</code>
       */
      public static final int D_DOCUMENT_VALUE = 15;
      /**
       * <code>D_DOCUMENT_ARRAY = 16;</code>
       */
      public static final int D_DOCUMENT_ARRAY_VALUE = 16;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static DataType valueOf(int value) {
        return forNumber(value);
      }

      public static DataType forNumber(int value) {
        switch (value) {
          case 0: return D_NULL;
          case 1: return D_BINARY;
          case 2: return D_STRING;
          case 3: return D_INT;
          case 4: return D_LONG;
          case 5: return D_FLOAT;
          case 6: return D_DOUBLE;
          case 7: return D_BOOLEAN;
          case 8: return D_STRING_ARRAY;
          case 9: return D_INT_ARRAY;
          case 10: return D_LONG_ARRAY;
          case 11: return D_FLOAT_ARRAY;
          case 12: return D_DOUBLE_ARRAY;
          case 13: return D_BOOLEAN_ARARY;
          case 14: return D_PROPERTY_MAP;
          case 15: return D_DOCUMENT;
          case 16: return D_DOCUMENT_ARRAY;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<DataType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          DataType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<DataType>() {
              public DataType findValueByNumber(int number) {
                return DataType.forNumber(number);
              }
            };

      private final int value;

      private DataType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:PropertyKey.DataType)
    }

    private int keyCase_ = 0;
    private java.lang.Object key_;
    public enum KeyCase
        implements com.google.protobuf.Internal.EnumLite {
      SPECIAL(1),
      NAME(2),
      KEY_NOT_SET(0);
      private final int value;
      private KeyCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static KeyCase valueOf(int value) {
        return forNumber(value);
      }

      public static KeyCase forNumber(int value) {
        switch (value) {
          case 1: return SPECIAL;
          case 2: return NAME;
          case 0: return KEY_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public KeyCase
    getKeyCase() {
      return KeyCase.forNumber(
          keyCase_);
    }

    private void clearKey() {
      keyCase_ = 0;
      key_ = null;
    }

    private int valuetypeCase_ = 0;
    private java.lang.Object valuetype_;
    public enum ValuetypeCase
        implements com.google.protobuf.Internal.EnumLite {
      TYPE(3),
      LAYERID(4),
      VALUETYPE_NOT_SET(0);
      private final int value;
      private ValuetypeCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ValuetypeCase valueOf(int value) {
        return forNumber(value);
      }

      public static ValuetypeCase forNumber(int value) {
        switch (value) {
          case 3: return TYPE;
          case 4: return LAYERID;
          case 0: return VALUETYPE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ValuetypeCase
    getValuetypeCase() {
      return ValuetypeCase.forNumber(
          valuetypeCase_);
    }

    private void clearValuetype() {
      valuetypeCase_ = 0;
      valuetype_ = null;
    }

    public static final int SPECIAL_FIELD_NUMBER = 1;
    /**
     * <code>optional .PropertyKey.SpecialKey special = 1;</code>
     */
    public int getSpecialValue() {
      if (keyCase_ == 1) {
        return (java.lang.Integer) key_;
      }
      return 0;
    }
    /**
     * <code>optional .PropertyKey.SpecialKey special = 1;</code>
     */
    public se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey.SpecialKey getSpecial() {
      if (keyCase_ == 1) {
        se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey.SpecialKey result = se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey.SpecialKey.forNumber((java.lang.Integer) key_);
        return result == null ? se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey.SpecialKey.UNRECOGNIZED : result;
      }
      return se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey.SpecialKey.NODE_RANGE_START_END;
    }
    /**
     * <code>optional .PropertyKey.SpecialKey special = 1;</code>
     */
    private void setSpecialValue(int value) {
      keyCase_ = 1;
      key_ = value;
    }
    /**
     * <code>optional .PropertyKey.SpecialKey special = 1;</code>
     */
    private void setSpecial(se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey.SpecialKey value) {
      if (value == null) {
        throw new NullPointerException();
      }
      keyCase_ = 1;
      key_ = value.getNumber();
    }
    /**
     * <code>optional .PropertyKey.SpecialKey special = 1;</code>
     */
    private void clearSpecial() {
      if (keyCase_ == 1) {
        keyCase_ = 0;
        key_ = null;
      }
    }

    public static final int NAME_FIELD_NUMBER = 2;
    /**
     * <code>optional string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.String ref = "";
      if (keyCase_ == 2) {
        ref = (java.lang.String) key_;
      }
      return ref;
    }
    /**
     * <code>optional string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.String ref = "";
      if (keyCase_ == 2) {
        ref = (java.lang.String) key_;
      }
      return com.google.protobuf.ByteString.copyFromUtf8(ref);
    }
    /**
     * <code>optional string name = 2;</code>
     */
    private void setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  keyCase_ = 2;
      key_ = value;
    }
    /**
     * <code>optional string name = 2;</code>
     */
    private void clearName() {
      if (keyCase_ == 2) {
        keyCase_ = 0;
        key_ = null;
      }
    }
    /**
     * <code>optional string name = 2;</code>
     */
    private void setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      keyCase_ = 2;
      key_ = value.toStringUtf8();
    }

    public static final int TYPE_FIELD_NUMBER = 3;
    /**
     * <code>optional .PropertyKey.DataType type = 3;</code>
     */
    public int getTypeValue() {
      if (valuetypeCase_ == 3) {
        return (java.lang.Integer) valuetype_;
      }
      return 0;
    }
    /**
     * <code>optional .PropertyKey.DataType type = 3;</code>
     */
    public se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey.DataType getType() {
      if (valuetypeCase_ == 3) {
        se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey.DataType result = se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey.DataType.forNumber((java.lang.Integer) valuetype_);
        return result == null ? se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey.DataType.UNRECOGNIZED : result;
      }
      return se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey.DataType.D_NULL;
    }
    /**
     * <code>optional .PropertyKey.DataType type = 3;</code>
     */
    private void setTypeValue(int value) {
      valuetypeCase_ = 3;
      valuetype_ = value;
    }
    /**
     * <code>optional .PropertyKey.DataType type = 3;</code>
     */
    private void setType(se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey.DataType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      valuetypeCase_ = 3;
      valuetype_ = value.getNumber();
    }
    /**
     * <code>optional .PropertyKey.DataType type = 3;</code>
     */
    private void clearType() {
      if (valuetypeCase_ == 3) {
        valuetypeCase_ = 0;
        valuetype_ = null;
      }
    }

    public static final int LAYERID_FIELD_NUMBER = 4;
    /**
     * <code>optional uint32 layerid = 4;</code>
     */
    public int getLayerid() {
      if (valuetypeCase_ == 4) {
        return (java.lang.Integer) valuetype_;
      }
      return 0;
    }
    /**
     * <code>optional uint32 layerid = 4;</code>
     */
    private void setLayerid(int value) {
      valuetypeCase_ = 4;
      valuetype_ = value;
    }
    /**
     * <code>optional uint32 layerid = 4;</code>
     */
    private void clearLayerid() {
      if (valuetypeCase_ == 4) {
        valuetypeCase_ = 0;
        valuetype_ = null;
      }
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (keyCase_ == 1) {
        output.writeEnum(1, ((java.lang.Integer) key_));
      }
      if (keyCase_ == 2) {
        output.writeString(2, getName());
      }
      if (valuetypeCase_ == 3) {
        output.writeEnum(3, ((java.lang.Integer) valuetype_));
      }
      if (valuetypeCase_ == 4) {
        output.writeUInt32(
            4, (int)((java.lang.Integer) valuetype_));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (keyCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, ((java.lang.Integer) key_));
      }
      if (keyCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getName());
      }
      if (valuetypeCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, ((java.lang.Integer) valuetype_));
      }
      if (valuetypeCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(
              4, (int)((java.lang.Integer) valuetype_));
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code PropertyKey}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey, Builder> implements
        // @@protoc_insertion_point(builder_implements:PropertyKey)
        se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKeyOrBuilder {
      // Construct using se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      public KeyCase
          getKeyCase() {
        return instance.getKeyCase();
      }

      public Builder clearKey() {
        copyOnWrite();
        instance.clearKey();
        return this;
      }

      public ValuetypeCase
          getValuetypeCase() {
        return instance.getValuetypeCase();
      }

      public Builder clearValuetype() {
        copyOnWrite();
        instance.clearValuetype();
        return this;
      }


      /**
       * <code>optional .PropertyKey.SpecialKey special = 1;</code>
       */
      public int getSpecialValue() {
        return instance.getSpecialValue();
      }
      /**
       * <code>optional .PropertyKey.SpecialKey special = 1;</code>
       */
      public Builder setSpecialValue(int value) {
        copyOnWrite();
        instance.setSpecialValue(value);
        return this;
      }
      /**
       * <code>optional .PropertyKey.SpecialKey special = 1;</code>
       */
      public se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey.SpecialKey getSpecial() {
        return instance.getSpecial();
      }
      /**
       * <code>optional .PropertyKey.SpecialKey special = 1;</code>
       */
      public Builder setSpecial(se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey.SpecialKey value) {
        copyOnWrite();
        instance.setSpecial(value);
        return this;
      }
      /**
       * <code>optional .PropertyKey.SpecialKey special = 1;</code>
       */
      public Builder clearSpecial() {
        copyOnWrite();
        instance.clearSpecial();
        return this;
      }

      /**
       * <code>optional string name = 2;</code>
       */
      public java.lang.String getName() {
        return instance.getName();
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        return instance.getNameBytes();
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        copyOnWrite();
        instance.setName(value);
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder clearName() {
        copyOnWrite();
        instance.clearName();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setNameBytes(value);
        return this;
      }

      /**
       * <code>optional .PropertyKey.DataType type = 3;</code>
       */
      public int getTypeValue() {
        return instance.getTypeValue();
      }
      /**
       * <code>optional .PropertyKey.DataType type = 3;</code>
       */
      public Builder setTypeValue(int value) {
        copyOnWrite();
        instance.setTypeValue(value);
        return this;
      }
      /**
       * <code>optional .PropertyKey.DataType type = 3;</code>
       */
      public se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey.DataType getType() {
        return instance.getType();
      }
      /**
       * <code>optional .PropertyKey.DataType type = 3;</code>
       */
      public Builder setType(se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey.DataType value) {
        copyOnWrite();
        instance.setType(value);
        return this;
      }
      /**
       * <code>optional .PropertyKey.DataType type = 3;</code>
       */
      public Builder clearType() {
        copyOnWrite();
        instance.clearType();
        return this;
      }

      /**
       * <code>optional uint32 layerid = 4;</code>
       */
      public int getLayerid() {
        return instance.getLayerid();
      }
      /**
       * <code>optional uint32 layerid = 4;</code>
       */
      public Builder setLayerid(int value) {
        copyOnWrite();
        instance.setLayerid(value);
        return this;
      }
      /**
       * <code>optional uint32 layerid = 4;</code>
       */
      public Builder clearLayerid() {
        copyOnWrite();
        instance.clearLayerid();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PropertyKey)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey other = (se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey) arg1;
          switch (other.getKeyCase()) {
            case SPECIAL: {
              key_ = visitor.visitOneofInt(
                 keyCase_ == 1, key_, other.key_);
              break;
            }
            case NAME: {
              key_ = visitor.visitOneofString(
                 keyCase_ == 2, key_, other.key_);
              break;
            }
            case KEY_NOT_SET: {
              visitor.visitOneofNotSet(keyCase_ != 0);
              break;
            }
          }
          switch (other.getValuetypeCase()) {
            case TYPE: {
              valuetype_ = visitor.visitOneofInt(
                 valuetypeCase_ == 3, valuetype_, other.valuetype_);
              break;
            }
            case LAYERID: {
              valuetype_ = visitor.visitOneofInt(
                  valuetypeCase_ == 4, valuetype_, other.valuetype_);
              break;
            }
            case VALUETYPE_NOT_SET: {
              visitor.visitOneofNotSet(valuetypeCase_ != 0);
              break;
            }
          }
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            if (other.keyCase_ != 0) {
              keyCase_ = other.keyCase_;
            }
            if (other.valuetypeCase_ != 0) {
              valuetypeCase_ = other.valuetypeCase_;
            }
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();
                  keyCase_ = 1;
                  key_ = rawValue;
                  break;
                }
                case 18: {
                  String s = input.readStringRequireUtf8();
                  keyCase_ = 2;
                  key_ = s;
                  break;
                }
                case 24: {
                  int rawValue = input.readEnum();
                  valuetypeCase_ = 3;
                  valuetype_ = rawValue;
                  break;
                }
                case 32: {
                  valuetypeCase_ = 4;
                  valuetype_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:PropertyKey)
    private static final se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new PropertyKey();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<PropertyKey> PARSER;

    public static com.google.protobuf.Parser<PropertyKey> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface PropertyValueOrBuilder extends
      // @@protoc_insertion_point(interface_extends:PropertyValue)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional bytes binaryValue = 1;</code>
     */
    com.google.protobuf.ByteString getBinaryValue();

    /**
     * <code>repeated string stringValues = 2;</code>
     */
    java.util.List<String>
        getStringValuesList();
    /**
     * <code>repeated string stringValues = 2;</code>
     */
    int getStringValuesCount();
    /**
     * <code>repeated string stringValues = 2;</code>
     */
    java.lang.String getStringValues(int index);
    /**
     * <code>repeated string stringValues = 2;</code>
     */
    com.google.protobuf.ByteString
        getStringValuesBytes(int index);

    /**
     * <code>repeated bool boolValues = 3;</code>
     */
    java.util.List<java.lang.Boolean> getBoolValuesList();
    /**
     * <code>repeated bool boolValues = 3;</code>
     */
    int getBoolValuesCount();
    /**
     * <code>repeated bool boolValues = 3;</code>
     */
    boolean getBoolValues(int index);

    /**
     * <code>repeated sint32 intValues = 4 [packed = true];</code>
     */
    java.util.List<java.lang.Integer> getIntValuesList();
    /**
     * <code>repeated sint32 intValues = 4 [packed = true];</code>
     */
    int getIntValuesCount();
    /**
     * <code>repeated sint32 intValues = 4 [packed = true];</code>
     */
    int getIntValues(int index);

    /**
     * <code>repeated sint64 longValues = 5 [packed = true];</code>
     */
    java.util.List<java.lang.Long> getLongValuesList();
    /**
     * <code>repeated sint64 longValues = 5 [packed = true];</code>
     */
    int getLongValuesCount();
    /**
     * <code>repeated sint64 longValues = 5 [packed = true];</code>
     */
    long getLongValues(int index);

    /**
     * <code>repeated float floatValues = 6;</code>
     */
    java.util.List<java.lang.Float> getFloatValuesList();
    /**
     * <code>repeated float floatValues = 6;</code>
     */
    int getFloatValuesCount();
    /**
     * <code>repeated float floatValues = 6;</code>
     */
    float getFloatValues(int index);

    /**
     * <code>repeated double doubleValues = 7;</code>
     */
    java.util.List<java.lang.Double> getDoubleValuesList();
    /**
     * <code>repeated double doubleValues = 7;</code>
     */
    int getDoubleValuesCount();
    /**
     * <code>repeated double doubleValues = 7;</code>
     */
    double getDoubleValues(int index);

    /**
     * <code>repeated .Document docValues = 8;</code>
     */
    java.util.List<se.lth.cs.docforia.io.protobuf3.Singlepart.Document> 
        getDocValuesList();
    /**
     * <code>repeated .Document docValues = 8;</code>
     */
    se.lth.cs.docforia.io.protobuf3.Singlepart.Document getDocValues(int index);
    /**
     * <code>repeated .Document docValues = 8;</code>
     */
    int getDocValuesCount();

    /**
     * <code>repeated .PropertyMap propValues = 9;</code>
     */
    java.util.List<se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap> 
        getPropValuesList();
    /**
     * <code>repeated .PropertyMap propValues = 9;</code>
     */
    se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap getPropValues(int index);
    /**
     * <code>repeated .PropertyMap propValues = 9;</code>
     */
    int getPropValuesCount();

    /**
     * <pre>
     *In case of array values.
     * </pre>
     *
     * <code>repeated uint32 lengthInfo = 10 [packed = true];</code>
     */
    java.util.List<java.lang.Integer> getLengthInfoList();
    /**
     * <pre>
     *In case of array values.
     * </pre>
     *
     * <code>repeated uint32 lengthInfo = 10 [packed = true];</code>
     */
    int getLengthInfoCount();
    /**
     * <pre>
     *In case of array values.
     * </pre>
     *
     * <code>repeated uint32 lengthInfo = 10 [packed = true];</code>
     */
    int getLengthInfo(int index);
  }
  /**
   * Protobuf type {@code PropertyValue}
   */
  public  static final class PropertyValue extends
      com.google.protobuf.GeneratedMessageLite<
          PropertyValue, PropertyValue.Builder> implements
      // @@protoc_insertion_point(message_implements:PropertyValue)
      PropertyValueOrBuilder {
    private PropertyValue() {
      binaryValue_ = com.google.protobuf.ByteString.EMPTY;
      stringValues_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
      boolValues_ = emptyBooleanList();
      intValues_ = emptyIntList();
      longValues_ = emptyLongList();
      floatValues_ = emptyFloatList();
      doubleValues_ = emptyDoubleList();
      docValues_ = emptyProtobufList();
      propValues_ = emptyProtobufList();
      lengthInfo_ = emptyIntList();
    }
    private int bitField0_;
    public static final int BINARYVALUE_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString binaryValue_;
    /**
     * <code>optional bytes binaryValue = 1;</code>
     */
    public com.google.protobuf.ByteString getBinaryValue() {
      return binaryValue_;
    }
    /**
     * <code>optional bytes binaryValue = 1;</code>
     */
    private void setBinaryValue(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      binaryValue_ = value;
    }
    /**
     * <code>optional bytes binaryValue = 1;</code>
     */
    private void clearBinaryValue() {
      
      binaryValue_ = getDefaultInstance().getBinaryValue();
    }

    public static final int STRINGVALUES_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<String> stringValues_;
    /**
     * <code>repeated string stringValues = 2;</code>
     */
    public java.util.List<String> getStringValuesList() {
      return stringValues_;
    }
    /**
     * <code>repeated string stringValues = 2;</code>
     */
    public int getStringValuesCount() {
      return stringValues_.size();
    }
    /**
     * <code>repeated string stringValues = 2;</code>
     */
    public java.lang.String getStringValues(int index) {
      return stringValues_.get(index);
    }
    /**
     * <code>repeated string stringValues = 2;</code>
     */
    public com.google.protobuf.ByteString
        getStringValuesBytes(int index) {
      return com.google.protobuf.ByteString.copyFromUtf8(
          stringValues_.get(index));
    }
    private void ensureStringValuesIsMutable() {
      if (!stringValues_.isModifiable()) {
        stringValues_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(stringValues_);
       }
    }
    /**
     * <code>repeated string stringValues = 2;</code>
     */
    private void setStringValues(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureStringValuesIsMutable();
      stringValues_.set(index, value);
    }
    /**
     * <code>repeated string stringValues = 2;</code>
     */
    private void addStringValues(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureStringValuesIsMutable();
      stringValues_.add(value);
    }
    /**
     * <code>repeated string stringValues = 2;</code>
     */
    private void addAllStringValues(
        java.lang.Iterable<java.lang.String> values) {
      ensureStringValuesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, stringValues_);
    }
    /**
     * <code>repeated string stringValues = 2;</code>
     */
    private void clearStringValues() {
      stringValues_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
    }
    /**
     * <code>repeated string stringValues = 2;</code>
     */
    private void addStringValuesBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureStringValuesIsMutable();
      stringValues_.add(value.toStringUtf8());
    }

    public static final int BOOLVALUES_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.BooleanList boolValues_;
    /**
     * <code>repeated bool boolValues = 3;</code>
     */
    public java.util.List<java.lang.Boolean>
        getBoolValuesList() {
      return boolValues_;
    }
    /**
     * <code>repeated bool boolValues = 3;</code>
     */
    public int getBoolValuesCount() {
      return boolValues_.size();
    }
    /**
     * <code>repeated bool boolValues = 3;</code>
     */
    public boolean getBoolValues(int index) {
      return boolValues_.getBoolean(index);
    }
    private void ensureBoolValuesIsMutable() {
      if (!boolValues_.isModifiable()) {
        boolValues_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(boolValues_);
       }
    }
    /**
     * <code>repeated bool boolValues = 3;</code>
     */
    private void setBoolValues(
        int index, boolean value) {
      ensureBoolValuesIsMutable();
      boolValues_.setBoolean(index, value);
    }
    /**
     * <code>repeated bool boolValues = 3;</code>
     */
    private void addBoolValues(boolean value) {
      ensureBoolValuesIsMutable();
      boolValues_.addBoolean(value);
    }
    /**
     * <code>repeated bool boolValues = 3;</code>
     */
    private void addAllBoolValues(
        java.lang.Iterable<? extends java.lang.Boolean> values) {
      ensureBoolValuesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, boolValues_);
    }
    /**
     * <code>repeated bool boolValues = 3;</code>
     */
    private void clearBoolValues() {
      boolValues_ = emptyBooleanList();
    }

    public static final int INTVALUES_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.IntList intValues_;
    /**
     * <code>repeated sint32 intValues = 4 [packed = true];</code>
     */
    public java.util.List<java.lang.Integer>
        getIntValuesList() {
      return intValues_;
    }
    /**
     * <code>repeated sint32 intValues = 4 [packed = true];</code>
     */
    public int getIntValuesCount() {
      return intValues_.size();
    }
    /**
     * <code>repeated sint32 intValues = 4 [packed = true];</code>
     */
    public int getIntValues(int index) {
      return intValues_.getInt(index);
    }
    private int intValuesMemoizedSerializedSize = -1;
    private void ensureIntValuesIsMutable() {
      if (!intValues_.isModifiable()) {
        intValues_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(intValues_);
       }
    }
    /**
     * <code>repeated sint32 intValues = 4 [packed = true];</code>
     */
    private void setIntValues(
        int index, int value) {
      ensureIntValuesIsMutable();
      intValues_.setInt(index, value);
    }
    /**
     * <code>repeated sint32 intValues = 4 [packed = true];</code>
     */
    private void addIntValues(int value) {
      ensureIntValuesIsMutable();
      intValues_.addInt(value);
    }
    /**
     * <code>repeated sint32 intValues = 4 [packed = true];</code>
     */
    private void addAllIntValues(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureIntValuesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, intValues_);
    }
    /**
     * <code>repeated sint32 intValues = 4 [packed = true];</code>
     */
    private void clearIntValues() {
      intValues_ = emptyIntList();
    }

    public static final int LONGVALUES_FIELD_NUMBER = 5;
    private com.google.protobuf.Internal.LongList longValues_;
    /**
     * <code>repeated sint64 longValues = 5 [packed = true];</code>
     */
    public java.util.List<java.lang.Long>
        getLongValuesList() {
      return longValues_;
    }
    /**
     * <code>repeated sint64 longValues = 5 [packed = true];</code>
     */
    public int getLongValuesCount() {
      return longValues_.size();
    }
    /**
     * <code>repeated sint64 longValues = 5 [packed = true];</code>
     */
    public long getLongValues(int index) {
      return longValues_.getLong(index);
    }
    private int longValuesMemoizedSerializedSize = -1;
    private void ensureLongValuesIsMutable() {
      if (!longValues_.isModifiable()) {
        longValues_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(longValues_);
       }
    }
    /**
     * <code>repeated sint64 longValues = 5 [packed = true];</code>
     */
    private void setLongValues(
        int index, long value) {
      ensureLongValuesIsMutable();
      longValues_.setLong(index, value);
    }
    /**
     * <code>repeated sint64 longValues = 5 [packed = true];</code>
     */
    private void addLongValues(long value) {
      ensureLongValuesIsMutable();
      longValues_.addLong(value);
    }
    /**
     * <code>repeated sint64 longValues = 5 [packed = true];</code>
     */
    private void addAllLongValues(
        java.lang.Iterable<? extends java.lang.Long> values) {
      ensureLongValuesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, longValues_);
    }
    /**
     * <code>repeated sint64 longValues = 5 [packed = true];</code>
     */
    private void clearLongValues() {
      longValues_ = emptyLongList();
    }

    public static final int FLOATVALUES_FIELD_NUMBER = 6;
    private com.google.protobuf.Internal.FloatList floatValues_;
    /**
     * <code>repeated float floatValues = 6;</code>
     */
    public java.util.List<java.lang.Float>
        getFloatValuesList() {
      return floatValues_;
    }
    /**
     * <code>repeated float floatValues = 6;</code>
     */
    public int getFloatValuesCount() {
      return floatValues_.size();
    }
    /**
     * <code>repeated float floatValues = 6;</code>
     */
    public float getFloatValues(int index) {
      return floatValues_.getFloat(index);
    }
    private void ensureFloatValuesIsMutable() {
      if (!floatValues_.isModifiable()) {
        floatValues_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(floatValues_);
       }
    }
    /**
     * <code>repeated float floatValues = 6;</code>
     */
    private void setFloatValues(
        int index, float value) {
      ensureFloatValuesIsMutable();
      floatValues_.setFloat(index, value);
    }
    /**
     * <code>repeated float floatValues = 6;</code>
     */
    private void addFloatValues(float value) {
      ensureFloatValuesIsMutable();
      floatValues_.addFloat(value);
    }
    /**
     * <code>repeated float floatValues = 6;</code>
     */
    private void addAllFloatValues(
        java.lang.Iterable<? extends java.lang.Float> values) {
      ensureFloatValuesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, floatValues_);
    }
    /**
     * <code>repeated float floatValues = 6;</code>
     */
    private void clearFloatValues() {
      floatValues_ = emptyFloatList();
    }

    public static final int DOUBLEVALUES_FIELD_NUMBER = 7;
    private com.google.protobuf.Internal.DoubleList doubleValues_;
    /**
     * <code>repeated double doubleValues = 7;</code>
     */
    public java.util.List<java.lang.Double>
        getDoubleValuesList() {
      return doubleValues_;
    }
    /**
     * <code>repeated double doubleValues = 7;</code>
     */
    public int getDoubleValuesCount() {
      return doubleValues_.size();
    }
    /**
     * <code>repeated double doubleValues = 7;</code>
     */
    public double getDoubleValues(int index) {
      return doubleValues_.getDouble(index);
    }
    private void ensureDoubleValuesIsMutable() {
      if (!doubleValues_.isModifiable()) {
        doubleValues_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(doubleValues_);
       }
    }
    /**
     * <code>repeated double doubleValues = 7;</code>
     */
    private void setDoubleValues(
        int index, double value) {
      ensureDoubleValuesIsMutable();
      doubleValues_.setDouble(index, value);
    }
    /**
     * <code>repeated double doubleValues = 7;</code>
     */
    private void addDoubleValues(double value) {
      ensureDoubleValuesIsMutable();
      doubleValues_.addDouble(value);
    }
    /**
     * <code>repeated double doubleValues = 7;</code>
     */
    private void addAllDoubleValues(
        java.lang.Iterable<? extends java.lang.Double> values) {
      ensureDoubleValuesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, doubleValues_);
    }
    /**
     * <code>repeated double doubleValues = 7;</code>
     */
    private void clearDoubleValues() {
      doubleValues_ = emptyDoubleList();
    }

    public static final int DOCVALUES_FIELD_NUMBER = 8;
    private com.google.protobuf.Internal.ProtobufList<se.lth.cs.docforia.io.protobuf3.Singlepart.Document> docValues_;
    /**
     * <code>repeated .Document docValues = 8;</code>
     */
    public java.util.List<se.lth.cs.docforia.io.protobuf3.Singlepart.Document> getDocValuesList() {
      return docValues_;
    }
    /**
     * <code>repeated .Document docValues = 8;</code>
     */
    public java.util.List<? extends se.lth.cs.docforia.io.protobuf3.Singlepart.DocumentOrBuilder> 
        getDocValuesOrBuilderList() {
      return docValues_;
    }
    /**
     * <code>repeated .Document docValues = 8;</code>
     */
    public int getDocValuesCount() {
      return docValues_.size();
    }
    /**
     * <code>repeated .Document docValues = 8;</code>
     */
    public se.lth.cs.docforia.io.protobuf3.Singlepart.Document getDocValues(int index) {
      return docValues_.get(index);
    }
    /**
     * <code>repeated .Document docValues = 8;</code>
     */
    public se.lth.cs.docforia.io.protobuf3.Singlepart.DocumentOrBuilder getDocValuesOrBuilder(
        int index) {
      return docValues_.get(index);
    }
    private void ensureDocValuesIsMutable() {
      if (!docValues_.isModifiable()) {
        docValues_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(docValues_);
       }
    }

    /**
     * <code>repeated .Document docValues = 8;</code>
     */
    private void setDocValues(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.Document value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureDocValuesIsMutable();
      docValues_.set(index, value);
    }
    /**
     * <code>repeated .Document docValues = 8;</code>
     */
    private void setDocValues(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.Document.Builder builderForValue) {
      ensureDocValuesIsMutable();
      docValues_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .Document docValues = 8;</code>
     */
    private void addDocValues(se.lth.cs.docforia.io.protobuf3.Singlepart.Document value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureDocValuesIsMutable();
      docValues_.add(value);
    }
    /**
     * <code>repeated .Document docValues = 8;</code>
     */
    private void addDocValues(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.Document value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureDocValuesIsMutable();
      docValues_.add(index, value);
    }
    /**
     * <code>repeated .Document docValues = 8;</code>
     */
    private void addDocValues(
        se.lth.cs.docforia.io.protobuf3.Singlepart.Document.Builder builderForValue) {
      ensureDocValuesIsMutable();
      docValues_.add(builderForValue.build());
    }
    /**
     * <code>repeated .Document docValues = 8;</code>
     */
    private void addDocValues(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.Document.Builder builderForValue) {
      ensureDocValuesIsMutable();
      docValues_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .Document docValues = 8;</code>
     */
    private void addAllDocValues(
        java.lang.Iterable<? extends se.lth.cs.docforia.io.protobuf3.Singlepart.Document> values) {
      ensureDocValuesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, docValues_);
    }
    /**
     * <code>repeated .Document docValues = 8;</code>
     */
    private void clearDocValues() {
      docValues_ = emptyProtobufList();
    }
    /**
     * <code>repeated .Document docValues = 8;</code>
     */
    private void removeDocValues(int index) {
      ensureDocValuesIsMutable();
      docValues_.remove(index);
    }

    public static final int PROPVALUES_FIELD_NUMBER = 9;
    private com.google.protobuf.Internal.ProtobufList<se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap> propValues_;
    /**
     * <code>repeated .PropertyMap propValues = 9;</code>
     */
    public java.util.List<se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap> getPropValuesList() {
      return propValues_;
    }
    /**
     * <code>repeated .PropertyMap propValues = 9;</code>
     */
    public java.util.List<? extends se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMapOrBuilder> 
        getPropValuesOrBuilderList() {
      return propValues_;
    }
    /**
     * <code>repeated .PropertyMap propValues = 9;</code>
     */
    public int getPropValuesCount() {
      return propValues_.size();
    }
    /**
     * <code>repeated .PropertyMap propValues = 9;</code>
     */
    public se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap getPropValues(int index) {
      return propValues_.get(index);
    }
    /**
     * <code>repeated .PropertyMap propValues = 9;</code>
     */
    public se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMapOrBuilder getPropValuesOrBuilder(
        int index) {
      return propValues_.get(index);
    }
    private void ensurePropValuesIsMutable() {
      if (!propValues_.isModifiable()) {
        propValues_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(propValues_);
       }
    }

    /**
     * <code>repeated .PropertyMap propValues = 9;</code>
     */
    private void setPropValues(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePropValuesIsMutable();
      propValues_.set(index, value);
    }
    /**
     * <code>repeated .PropertyMap propValues = 9;</code>
     */
    private void setPropValues(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap.Builder builderForValue) {
      ensurePropValuesIsMutable();
      propValues_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .PropertyMap propValues = 9;</code>
     */
    private void addPropValues(se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePropValuesIsMutable();
      propValues_.add(value);
    }
    /**
     * <code>repeated .PropertyMap propValues = 9;</code>
     */
    private void addPropValues(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePropValuesIsMutable();
      propValues_.add(index, value);
    }
    /**
     * <code>repeated .PropertyMap propValues = 9;</code>
     */
    private void addPropValues(
        se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap.Builder builderForValue) {
      ensurePropValuesIsMutable();
      propValues_.add(builderForValue.build());
    }
    /**
     * <code>repeated .PropertyMap propValues = 9;</code>
     */
    private void addPropValues(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap.Builder builderForValue) {
      ensurePropValuesIsMutable();
      propValues_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .PropertyMap propValues = 9;</code>
     */
    private void addAllPropValues(
        java.lang.Iterable<? extends se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap> values) {
      ensurePropValuesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, propValues_);
    }
    /**
     * <code>repeated .PropertyMap propValues = 9;</code>
     */
    private void clearPropValues() {
      propValues_ = emptyProtobufList();
    }
    /**
     * <code>repeated .PropertyMap propValues = 9;</code>
     */
    private void removePropValues(int index) {
      ensurePropValuesIsMutable();
      propValues_.remove(index);
    }

    public static final int LENGTHINFO_FIELD_NUMBER = 10;
    private com.google.protobuf.Internal.IntList lengthInfo_;
    /**
     * <pre>
     *In case of array values.
     * </pre>
     *
     * <code>repeated uint32 lengthInfo = 10 [packed = true];</code>
     */
    public java.util.List<java.lang.Integer>
        getLengthInfoList() {
      return lengthInfo_;
    }
    /**
     * <pre>
     *In case of array values.
     * </pre>
     *
     * <code>repeated uint32 lengthInfo = 10 [packed = true];</code>
     */
    public int getLengthInfoCount() {
      return lengthInfo_.size();
    }
    /**
     * <pre>
     *In case of array values.
     * </pre>
     *
     * <code>repeated uint32 lengthInfo = 10 [packed = true];</code>
     */
    public int getLengthInfo(int index) {
      return lengthInfo_.getInt(index);
    }
    private int lengthInfoMemoizedSerializedSize = -1;
    private void ensureLengthInfoIsMutable() {
      if (!lengthInfo_.isModifiable()) {
        lengthInfo_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(lengthInfo_);
       }
    }
    /**
     * <pre>
     *In case of array values.
     * </pre>
     *
     * <code>repeated uint32 lengthInfo = 10 [packed = true];</code>
     */
    private void setLengthInfo(
        int index, int value) {
      ensureLengthInfoIsMutable();
      lengthInfo_.setInt(index, value);
    }
    /**
     * <pre>
     *In case of array values.
     * </pre>
     *
     * <code>repeated uint32 lengthInfo = 10 [packed = true];</code>
     */
    private void addLengthInfo(int value) {
      ensureLengthInfoIsMutable();
      lengthInfo_.addInt(value);
    }
    /**
     * <pre>
     *In case of array values.
     * </pre>
     *
     * <code>repeated uint32 lengthInfo = 10 [packed = true];</code>
     */
    private void addAllLengthInfo(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureLengthInfoIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, lengthInfo_);
    }
    /**
     * <pre>
     *In case of array values.
     * </pre>
     *
     * <code>repeated uint32 lengthInfo = 10 [packed = true];</code>
     */
    private void clearLengthInfo() {
      lengthInfo_ = emptyIntList();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (!binaryValue_.isEmpty()) {
        output.writeBytes(1, binaryValue_);
      }
      for (int i = 0; i < stringValues_.size(); i++) {
        output.writeString(2, stringValues_.get(i));
      }
      for (int i = 0; i < boolValues_.size(); i++) {
        output.writeBool(3, boolValues_.getBoolean(i));
      }
      if (getIntValuesList().size() > 0) {
        output.writeUInt32NoTag(34);
        output.writeUInt32NoTag(intValuesMemoizedSerializedSize);
      }
      for (int i = 0; i < intValues_.size(); i++) {
        output.writeSInt32NoTag(intValues_.getInt(i));
      }
      if (getLongValuesList().size() > 0) {
        output.writeUInt32NoTag(42);
        output.writeUInt32NoTag(longValuesMemoizedSerializedSize);
      }
      for (int i = 0; i < longValues_.size(); i++) {
        output.writeSInt64NoTag(longValues_.getLong(i));
      }
      for (int i = 0; i < floatValues_.size(); i++) {
        output.writeFloat(6, floatValues_.getFloat(i));
      }
      for (int i = 0; i < doubleValues_.size(); i++) {
        output.writeDouble(7, doubleValues_.getDouble(i));
      }
      for (int i = 0; i < docValues_.size(); i++) {
        output.writeMessage(8, docValues_.get(i));
      }
      for (int i = 0; i < propValues_.size(); i++) {
        output.writeMessage(9, propValues_.get(i));
      }
      if (getLengthInfoList().size() > 0) {
        output.writeUInt32NoTag(82);
        output.writeUInt32NoTag(lengthInfoMemoizedSerializedSize);
      }
      for (int i = 0; i < lengthInfo_.size(); i++) {
        output.writeUInt32NoTag(lengthInfo_.getInt(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (!binaryValue_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, binaryValue_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < stringValues_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(stringValues_.get(i));
        }
        size += dataSize;
        size += 1 * getStringValuesList().size();
      }
      {
        int dataSize = 0;
        dataSize = 1 * getBoolValuesList().size();
        size += dataSize;
        size += 1 * getBoolValuesList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < intValues_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt32SizeNoTag(intValues_.getInt(i));
        }
        size += dataSize;
        if (!getIntValuesList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        intValuesMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < longValues_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt64SizeNoTag(longValues_.getLong(i));
        }
        size += dataSize;
        if (!getLongValuesList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        longValuesMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 4 * getFloatValuesList().size();
        size += dataSize;
        size += 1 * getFloatValuesList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getDoubleValuesList().size();
        size += dataSize;
        size += 1 * getDoubleValuesList().size();
      }
      for (int i = 0; i < docValues_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, docValues_.get(i));
      }
      for (int i = 0; i < propValues_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, propValues_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < lengthInfo_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(lengthInfo_.getInt(i));
        }
        size += dataSize;
        if (!getLengthInfoList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        lengthInfoMemoizedSerializedSize = dataSize;
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyValue parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyValue parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyValue parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyValue parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyValue parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyValue parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyValue parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyValue parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyValue parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyValue parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyValue prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code PropertyValue}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyValue, Builder> implements
        // @@protoc_insertion_point(builder_implements:PropertyValue)
        se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyValueOrBuilder {
      // Construct using se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyValue.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional bytes binaryValue = 1;</code>
       */
      public com.google.protobuf.ByteString getBinaryValue() {
        return instance.getBinaryValue();
      }
      /**
       * <code>optional bytes binaryValue = 1;</code>
       */
      public Builder setBinaryValue(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setBinaryValue(value);
        return this;
      }
      /**
       * <code>optional bytes binaryValue = 1;</code>
       */
      public Builder clearBinaryValue() {
        copyOnWrite();
        instance.clearBinaryValue();
        return this;
      }

      /**
       * <code>repeated string stringValues = 2;</code>
       */
      public java.util.List<String>
          getStringValuesList() {
        return java.util.Collections.unmodifiableList(
            instance.getStringValuesList());
      }
      /**
       * <code>repeated string stringValues = 2;</code>
       */
      public int getStringValuesCount() {
        return instance.getStringValuesCount();
      }
      /**
       * <code>repeated string stringValues = 2;</code>
       */
      public java.lang.String getStringValues(int index) {
        return instance.getStringValues(index);
      }
      /**
       * <code>repeated string stringValues = 2;</code>
       */
      public com.google.protobuf.ByteString
          getStringValuesBytes(int index) {
        return instance.getStringValuesBytes(index);
      }
      /**
       * <code>repeated string stringValues = 2;</code>
       */
      public Builder setStringValues(
          int index, java.lang.String value) {
        copyOnWrite();
        instance.setStringValues(index, value);
        return this;
      }
      /**
       * <code>repeated string stringValues = 2;</code>
       */
      public Builder addStringValues(
          java.lang.String value) {
        copyOnWrite();
        instance.addStringValues(value);
        return this;
      }
      /**
       * <code>repeated string stringValues = 2;</code>
       */
      public Builder addAllStringValues(
          java.lang.Iterable<java.lang.String> values) {
        copyOnWrite();
        instance.addAllStringValues(values);
        return this;
      }
      /**
       * <code>repeated string stringValues = 2;</code>
       */
      public Builder clearStringValues() {
        copyOnWrite();
        instance.clearStringValues();
        return this;
      }
      /**
       * <code>repeated string stringValues = 2;</code>
       */
      public Builder addStringValuesBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.addStringValuesBytes(value);
        return this;
      }

      /**
       * <code>repeated bool boolValues = 3;</code>
       */
      public java.util.List<java.lang.Boolean>
          getBoolValuesList() {
        return java.util.Collections.unmodifiableList(
            instance.getBoolValuesList());
      }
      /**
       * <code>repeated bool boolValues = 3;</code>
       */
      public int getBoolValuesCount() {
        return instance.getBoolValuesCount();
      }
      /**
       * <code>repeated bool boolValues = 3;</code>
       */
      public boolean getBoolValues(int index) {
        return instance.getBoolValues(index);
      }
      /**
       * <code>repeated bool boolValues = 3;</code>
       */
      public Builder setBoolValues(
          int index, boolean value) {
        copyOnWrite();
        instance.setBoolValues(index, value);
        return this;
      }
      /**
       * <code>repeated bool boolValues = 3;</code>
       */
      public Builder addBoolValues(boolean value) {
        copyOnWrite();
        instance.addBoolValues(value);
        return this;
      }
      /**
       * <code>repeated bool boolValues = 3;</code>
       */
      public Builder addAllBoolValues(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        copyOnWrite();
        instance.addAllBoolValues(values);
        return this;
      }
      /**
       * <code>repeated bool boolValues = 3;</code>
       */
      public Builder clearBoolValues() {
        copyOnWrite();
        instance.clearBoolValues();
        return this;
      }

      /**
       * <code>repeated sint32 intValues = 4 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getIntValuesList() {
        return java.util.Collections.unmodifiableList(
            instance.getIntValuesList());
      }
      /**
       * <code>repeated sint32 intValues = 4 [packed = true];</code>
       */
      public int getIntValuesCount() {
        return instance.getIntValuesCount();
      }
      /**
       * <code>repeated sint32 intValues = 4 [packed = true];</code>
       */
      public int getIntValues(int index) {
        return instance.getIntValues(index);
      }
      /**
       * <code>repeated sint32 intValues = 4 [packed = true];</code>
       */
      public Builder setIntValues(
          int index, int value) {
        copyOnWrite();
        instance.setIntValues(index, value);
        return this;
      }
      /**
       * <code>repeated sint32 intValues = 4 [packed = true];</code>
       */
      public Builder addIntValues(int value) {
        copyOnWrite();
        instance.addIntValues(value);
        return this;
      }
      /**
       * <code>repeated sint32 intValues = 4 [packed = true];</code>
       */
      public Builder addAllIntValues(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllIntValues(values);
        return this;
      }
      /**
       * <code>repeated sint32 intValues = 4 [packed = true];</code>
       */
      public Builder clearIntValues() {
        copyOnWrite();
        instance.clearIntValues();
        return this;
      }

      /**
       * <code>repeated sint64 longValues = 5 [packed = true];</code>
       */
      public java.util.List<java.lang.Long>
          getLongValuesList() {
        return java.util.Collections.unmodifiableList(
            instance.getLongValuesList());
      }
      /**
       * <code>repeated sint64 longValues = 5 [packed = true];</code>
       */
      public int getLongValuesCount() {
        return instance.getLongValuesCount();
      }
      /**
       * <code>repeated sint64 longValues = 5 [packed = true];</code>
       */
      public long getLongValues(int index) {
        return instance.getLongValues(index);
      }
      /**
       * <code>repeated sint64 longValues = 5 [packed = true];</code>
       */
      public Builder setLongValues(
          int index, long value) {
        copyOnWrite();
        instance.setLongValues(index, value);
        return this;
      }
      /**
       * <code>repeated sint64 longValues = 5 [packed = true];</code>
       */
      public Builder addLongValues(long value) {
        copyOnWrite();
        instance.addLongValues(value);
        return this;
      }
      /**
       * <code>repeated sint64 longValues = 5 [packed = true];</code>
       */
      public Builder addAllLongValues(
          java.lang.Iterable<? extends java.lang.Long> values) {
        copyOnWrite();
        instance.addAllLongValues(values);
        return this;
      }
      /**
       * <code>repeated sint64 longValues = 5 [packed = true];</code>
       */
      public Builder clearLongValues() {
        copyOnWrite();
        instance.clearLongValues();
        return this;
      }

      /**
       * <code>repeated float floatValues = 6;</code>
       */
      public java.util.List<java.lang.Float>
          getFloatValuesList() {
        return java.util.Collections.unmodifiableList(
            instance.getFloatValuesList());
      }
      /**
       * <code>repeated float floatValues = 6;</code>
       */
      public int getFloatValuesCount() {
        return instance.getFloatValuesCount();
      }
      /**
       * <code>repeated float floatValues = 6;</code>
       */
      public float getFloatValues(int index) {
        return instance.getFloatValues(index);
      }
      /**
       * <code>repeated float floatValues = 6;</code>
       */
      public Builder setFloatValues(
          int index, float value) {
        copyOnWrite();
        instance.setFloatValues(index, value);
        return this;
      }
      /**
       * <code>repeated float floatValues = 6;</code>
       */
      public Builder addFloatValues(float value) {
        copyOnWrite();
        instance.addFloatValues(value);
        return this;
      }
      /**
       * <code>repeated float floatValues = 6;</code>
       */
      public Builder addAllFloatValues(
          java.lang.Iterable<? extends java.lang.Float> values) {
        copyOnWrite();
        instance.addAllFloatValues(values);
        return this;
      }
      /**
       * <code>repeated float floatValues = 6;</code>
       */
      public Builder clearFloatValues() {
        copyOnWrite();
        instance.clearFloatValues();
        return this;
      }

      /**
       * <code>repeated double doubleValues = 7;</code>
       */
      public java.util.List<java.lang.Double>
          getDoubleValuesList() {
        return java.util.Collections.unmodifiableList(
            instance.getDoubleValuesList());
      }
      /**
       * <code>repeated double doubleValues = 7;</code>
       */
      public int getDoubleValuesCount() {
        return instance.getDoubleValuesCount();
      }
      /**
       * <code>repeated double doubleValues = 7;</code>
       */
      public double getDoubleValues(int index) {
        return instance.getDoubleValues(index);
      }
      /**
       * <code>repeated double doubleValues = 7;</code>
       */
      public Builder setDoubleValues(
          int index, double value) {
        copyOnWrite();
        instance.setDoubleValues(index, value);
        return this;
      }
      /**
       * <code>repeated double doubleValues = 7;</code>
       */
      public Builder addDoubleValues(double value) {
        copyOnWrite();
        instance.addDoubleValues(value);
        return this;
      }
      /**
       * <code>repeated double doubleValues = 7;</code>
       */
      public Builder addAllDoubleValues(
          java.lang.Iterable<? extends java.lang.Double> values) {
        copyOnWrite();
        instance.addAllDoubleValues(values);
        return this;
      }
      /**
       * <code>repeated double doubleValues = 7;</code>
       */
      public Builder clearDoubleValues() {
        copyOnWrite();
        instance.clearDoubleValues();
        return this;
      }

      /**
       * <code>repeated .Document docValues = 8;</code>
       */
      public java.util.List<se.lth.cs.docforia.io.protobuf3.Singlepart.Document> getDocValuesList() {
        return java.util.Collections.unmodifiableList(
            instance.getDocValuesList());
      }
      /**
       * <code>repeated .Document docValues = 8;</code>
       */
      public int getDocValuesCount() {
        return instance.getDocValuesCount();
      }/**
       * <code>repeated .Document docValues = 8;</code>
       */
      public se.lth.cs.docforia.io.protobuf3.Singlepart.Document getDocValues(int index) {
        return instance.getDocValues(index);
      }
      /**
       * <code>repeated .Document docValues = 8;</code>
       */
      public Builder setDocValues(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.Document value) {
        copyOnWrite();
        instance.setDocValues(index, value);
        return this;
      }
      /**
       * <code>repeated .Document docValues = 8;</code>
       */
      public Builder setDocValues(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.Document.Builder builderForValue) {
        copyOnWrite();
        instance.setDocValues(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .Document docValues = 8;</code>
       */
      public Builder addDocValues(se.lth.cs.docforia.io.protobuf3.Singlepart.Document value) {
        copyOnWrite();
        instance.addDocValues(value);
        return this;
      }
      /**
       * <code>repeated .Document docValues = 8;</code>
       */
      public Builder addDocValues(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.Document value) {
        copyOnWrite();
        instance.addDocValues(index, value);
        return this;
      }
      /**
       * <code>repeated .Document docValues = 8;</code>
       */
      public Builder addDocValues(
          se.lth.cs.docforia.io.protobuf3.Singlepart.Document.Builder builderForValue) {
        copyOnWrite();
        instance.addDocValues(builderForValue);
        return this;
      }
      /**
       * <code>repeated .Document docValues = 8;</code>
       */
      public Builder addDocValues(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.Document.Builder builderForValue) {
        copyOnWrite();
        instance.addDocValues(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .Document docValues = 8;</code>
       */
      public Builder addAllDocValues(
          java.lang.Iterable<? extends se.lth.cs.docforia.io.protobuf3.Singlepart.Document> values) {
        copyOnWrite();
        instance.addAllDocValues(values);
        return this;
      }
      /**
       * <code>repeated .Document docValues = 8;</code>
       */
      public Builder clearDocValues() {
        copyOnWrite();
        instance.clearDocValues();
        return this;
      }
      /**
       * <code>repeated .Document docValues = 8;</code>
       */
      public Builder removeDocValues(int index) {
        copyOnWrite();
        instance.removeDocValues(index);
        return this;
      }

      /**
       * <code>repeated .PropertyMap propValues = 9;</code>
       */
      public java.util.List<se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap> getPropValuesList() {
        return java.util.Collections.unmodifiableList(
            instance.getPropValuesList());
      }
      /**
       * <code>repeated .PropertyMap propValues = 9;</code>
       */
      public int getPropValuesCount() {
        return instance.getPropValuesCount();
      }/**
       * <code>repeated .PropertyMap propValues = 9;</code>
       */
      public se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap getPropValues(int index) {
        return instance.getPropValues(index);
      }
      /**
       * <code>repeated .PropertyMap propValues = 9;</code>
       */
      public Builder setPropValues(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap value) {
        copyOnWrite();
        instance.setPropValues(index, value);
        return this;
      }
      /**
       * <code>repeated .PropertyMap propValues = 9;</code>
       */
      public Builder setPropValues(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap.Builder builderForValue) {
        copyOnWrite();
        instance.setPropValues(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .PropertyMap propValues = 9;</code>
       */
      public Builder addPropValues(se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap value) {
        copyOnWrite();
        instance.addPropValues(value);
        return this;
      }
      /**
       * <code>repeated .PropertyMap propValues = 9;</code>
       */
      public Builder addPropValues(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap value) {
        copyOnWrite();
        instance.addPropValues(index, value);
        return this;
      }
      /**
       * <code>repeated .PropertyMap propValues = 9;</code>
       */
      public Builder addPropValues(
          se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap.Builder builderForValue) {
        copyOnWrite();
        instance.addPropValues(builderForValue);
        return this;
      }
      /**
       * <code>repeated .PropertyMap propValues = 9;</code>
       */
      public Builder addPropValues(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap.Builder builderForValue) {
        copyOnWrite();
        instance.addPropValues(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .PropertyMap propValues = 9;</code>
       */
      public Builder addAllPropValues(
          java.lang.Iterable<? extends se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap> values) {
        copyOnWrite();
        instance.addAllPropValues(values);
        return this;
      }
      /**
       * <code>repeated .PropertyMap propValues = 9;</code>
       */
      public Builder clearPropValues() {
        copyOnWrite();
        instance.clearPropValues();
        return this;
      }
      /**
       * <code>repeated .PropertyMap propValues = 9;</code>
       */
      public Builder removePropValues(int index) {
        copyOnWrite();
        instance.removePropValues(index);
        return this;
      }

      /**
       * <pre>
       *In case of array values.
       * </pre>
       *
       * <code>repeated uint32 lengthInfo = 10 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getLengthInfoList() {
        return java.util.Collections.unmodifiableList(
            instance.getLengthInfoList());
      }
      /**
       * <pre>
       *In case of array values.
       * </pre>
       *
       * <code>repeated uint32 lengthInfo = 10 [packed = true];</code>
       */
      public int getLengthInfoCount() {
        return instance.getLengthInfoCount();
      }
      /**
       * <pre>
       *In case of array values.
       * </pre>
       *
       * <code>repeated uint32 lengthInfo = 10 [packed = true];</code>
       */
      public int getLengthInfo(int index) {
        return instance.getLengthInfo(index);
      }
      /**
       * <pre>
       *In case of array values.
       * </pre>
       *
       * <code>repeated uint32 lengthInfo = 10 [packed = true];</code>
       */
      public Builder setLengthInfo(
          int index, int value) {
        copyOnWrite();
        instance.setLengthInfo(index, value);
        return this;
      }
      /**
       * <pre>
       *In case of array values.
       * </pre>
       *
       * <code>repeated uint32 lengthInfo = 10 [packed = true];</code>
       */
      public Builder addLengthInfo(int value) {
        copyOnWrite();
        instance.addLengthInfo(value);
        return this;
      }
      /**
       * <pre>
       *In case of array values.
       * </pre>
       *
       * <code>repeated uint32 lengthInfo = 10 [packed = true];</code>
       */
      public Builder addAllLengthInfo(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllLengthInfo(values);
        return this;
      }
      /**
       * <pre>
       *In case of array values.
       * </pre>
       *
       * <code>repeated uint32 lengthInfo = 10 [packed = true];</code>
       */
      public Builder clearLengthInfo() {
        copyOnWrite();
        instance.clearLengthInfo();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PropertyValue)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyValue();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          stringValues_.makeImmutable();
          boolValues_.makeImmutable();
          intValues_.makeImmutable();
          longValues_.makeImmutable();
          floatValues_.makeImmutable();
          doubleValues_.makeImmutable();
          docValues_.makeImmutable();
          propValues_.makeImmutable();
          lengthInfo_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyValue other = (se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyValue) arg1;
          binaryValue_ = visitor.visitByteString(binaryValue_ != com.google.protobuf.ByteString.EMPTY, binaryValue_,
              other.binaryValue_ != com.google.protobuf.ByteString.EMPTY, other.binaryValue_);
          stringValues_= visitor.visitList(stringValues_, other.stringValues_);
          boolValues_= visitor.visitBooleanList(boolValues_, other.boolValues_);
          intValues_= visitor.visitIntList(intValues_, other.intValues_);
          longValues_= visitor.visitLongList(longValues_, other.longValues_);
          floatValues_= visitor.visitFloatList(floatValues_, other.floatValues_);
          doubleValues_= visitor.visitDoubleList(doubleValues_, other.doubleValues_);
          docValues_= visitor.visitList(docValues_, other.docValues_);
          propValues_= visitor.visitList(propValues_, other.propValues_);
          lengthInfo_= visitor.visitIntList(lengthInfo_, other.lengthInfo_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {

                  binaryValue_ = input.readBytes();
                  break;
                }
                case 18: {
                  String s = input.readStringRequireUtf8();
                  if (!stringValues_.isModifiable()) {
                    stringValues_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(stringValues_);
                  }
                  stringValues_.add(s);
                  break;
                }
                case 24: {
                  if (!boolValues_.isModifiable()) {
                    boolValues_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(boolValues_);
                  }
                  boolValues_.addBoolean(input.readBool());
                  break;
                }
                case 26: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!boolValues_.isModifiable() && input.getBytesUntilLimit() > 0) {
                    final int currentSize = boolValues_.size();
                    boolValues_ = boolValues_.mutableCopyWithCapacity(
                        currentSize + (length/1));
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    boolValues_.addBoolean(input.readBool());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 32: {
                  if (!intValues_.isModifiable()) {
                    intValues_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(intValues_);
                  }
                  intValues_.addInt(input.readSInt32());
                  break;
                }
                case 34: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!intValues_.isModifiable() && input.getBytesUntilLimit() > 0) {
                    intValues_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(intValues_);
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    intValues_.addInt(input.readSInt32());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 40: {
                  if (!longValues_.isModifiable()) {
                    longValues_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(longValues_);
                  }
                  longValues_.addLong(input.readSInt64());
                  break;
                }
                case 42: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!longValues_.isModifiable() && input.getBytesUntilLimit() > 0) {
                    longValues_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(longValues_);
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    longValues_.addLong(input.readSInt64());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 53: {
                  if (!floatValues_.isModifiable()) {
                    floatValues_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(floatValues_);
                  }
                  floatValues_.addFloat(input.readFloat());
                  break;
                }
                case 50: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!floatValues_.isModifiable() && input.getBytesUntilLimit() > 0) {
                    final int currentSize = floatValues_.size();
                    floatValues_ = floatValues_.mutableCopyWithCapacity(
                        currentSize + (length/4));
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    floatValues_.addFloat(input.readFloat());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 57: {
                  if (!doubleValues_.isModifiable()) {
                    doubleValues_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(doubleValues_);
                  }
                  doubleValues_.addDouble(input.readDouble());
                  break;
                }
                case 58: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!doubleValues_.isModifiable() && input.getBytesUntilLimit() > 0) {
                    final int currentSize = doubleValues_.size();
                    doubleValues_ = doubleValues_.mutableCopyWithCapacity(
                        currentSize + (length/8));
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    doubleValues_.addDouble(input.readDouble());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 66: {
                  if (!docValues_.isModifiable()) {
                    docValues_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(docValues_);
                  }
                  docValues_.add(
                      input.readMessage(se.lth.cs.docforia.io.protobuf3.Singlepart.Document.parser(), extensionRegistry));
                  break;
                }
                case 74: {
                  if (!propValues_.isModifiable()) {
                    propValues_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(propValues_);
                  }
                  propValues_.add(
                      input.readMessage(se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap.parser(), extensionRegistry));
                  break;
                }
                case 80: {
                  if (!lengthInfo_.isModifiable()) {
                    lengthInfo_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(lengthInfo_);
                  }
                  lengthInfo_.addInt(input.readUInt32());
                  break;
                }
                case 82: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!lengthInfo_.isModifiable() && input.getBytesUntilLimit() > 0) {
                    lengthInfo_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(lengthInfo_);
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    lengthInfo_.addInt(input.readUInt32());
                  }
                  input.popLimit(limit);
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyValue.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:PropertyValue)
    private static final se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyValue DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new PropertyValue();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyValue getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<PropertyValue> PARSER;

    public static com.google.protobuf.Parser<PropertyValue> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface PropertyMapOrBuilder extends
      // @@protoc_insertion_point(interface_extends:PropertyMap)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>repeated .PropertyKey propkeys = 1;</code>
     */
    java.util.List<se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey> 
        getPropkeysList();
    /**
     * <code>repeated .PropertyKey propkeys = 1;</code>
     */
    se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey getPropkeys(int index);
    /**
     * <code>repeated .PropertyKey propkeys = 1;</code>
     */
    int getPropkeysCount();

    /**
     * <code>repeated .PropertyValue propvalues = 2;</code>
     */
    java.util.List<se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyValue> 
        getPropvaluesList();
    /**
     * <code>repeated .PropertyValue propvalues = 2;</code>
     */
    se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyValue getPropvalues(int index);
    /**
     * <code>repeated .PropertyValue propvalues = 2;</code>
     */
    int getPropvaluesCount();
  }
  /**
   * Protobuf type {@code PropertyMap}
   */
  public  static final class PropertyMap extends
      com.google.protobuf.GeneratedMessageLite<
          PropertyMap, PropertyMap.Builder> implements
      // @@protoc_insertion_point(message_implements:PropertyMap)
      PropertyMapOrBuilder {
    private PropertyMap() {
      propkeys_ = emptyProtobufList();
      propvalues_ = emptyProtobufList();
    }
    public static final int PROPKEYS_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey> propkeys_;
    /**
     * <code>repeated .PropertyKey propkeys = 1;</code>
     */
    public java.util.List<se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey> getPropkeysList() {
      return propkeys_;
    }
    /**
     * <code>repeated .PropertyKey propkeys = 1;</code>
     */
    public java.util.List<? extends se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKeyOrBuilder> 
        getPropkeysOrBuilderList() {
      return propkeys_;
    }
    /**
     * <code>repeated .PropertyKey propkeys = 1;</code>
     */
    public int getPropkeysCount() {
      return propkeys_.size();
    }
    /**
     * <code>repeated .PropertyKey propkeys = 1;</code>
     */
    public se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey getPropkeys(int index) {
      return propkeys_.get(index);
    }
    /**
     * <code>repeated .PropertyKey propkeys = 1;</code>
     */
    public se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKeyOrBuilder getPropkeysOrBuilder(
        int index) {
      return propkeys_.get(index);
    }
    private void ensurePropkeysIsMutable() {
      if (!propkeys_.isModifiable()) {
        propkeys_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(propkeys_);
       }
    }

    /**
     * <code>repeated .PropertyKey propkeys = 1;</code>
     */
    private void setPropkeys(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePropkeysIsMutable();
      propkeys_.set(index, value);
    }
    /**
     * <code>repeated .PropertyKey propkeys = 1;</code>
     */
    private void setPropkeys(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey.Builder builderForValue) {
      ensurePropkeysIsMutable();
      propkeys_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .PropertyKey propkeys = 1;</code>
     */
    private void addPropkeys(se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePropkeysIsMutable();
      propkeys_.add(value);
    }
    /**
     * <code>repeated .PropertyKey propkeys = 1;</code>
     */
    private void addPropkeys(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePropkeysIsMutable();
      propkeys_.add(index, value);
    }
    /**
     * <code>repeated .PropertyKey propkeys = 1;</code>
     */
    private void addPropkeys(
        se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey.Builder builderForValue) {
      ensurePropkeysIsMutable();
      propkeys_.add(builderForValue.build());
    }
    /**
     * <code>repeated .PropertyKey propkeys = 1;</code>
     */
    private void addPropkeys(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey.Builder builderForValue) {
      ensurePropkeysIsMutable();
      propkeys_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .PropertyKey propkeys = 1;</code>
     */
    private void addAllPropkeys(
        java.lang.Iterable<? extends se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey> values) {
      ensurePropkeysIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, propkeys_);
    }
    /**
     * <code>repeated .PropertyKey propkeys = 1;</code>
     */
    private void clearPropkeys() {
      propkeys_ = emptyProtobufList();
    }
    /**
     * <code>repeated .PropertyKey propkeys = 1;</code>
     */
    private void removePropkeys(int index) {
      ensurePropkeysIsMutable();
      propkeys_.remove(index);
    }

    public static final int PROPVALUES_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyValue> propvalues_;
    /**
     * <code>repeated .PropertyValue propvalues = 2;</code>
     */
    public java.util.List<se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyValue> getPropvaluesList() {
      return propvalues_;
    }
    /**
     * <code>repeated .PropertyValue propvalues = 2;</code>
     */
    public java.util.List<? extends se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyValueOrBuilder> 
        getPropvaluesOrBuilderList() {
      return propvalues_;
    }
    /**
     * <code>repeated .PropertyValue propvalues = 2;</code>
     */
    public int getPropvaluesCount() {
      return propvalues_.size();
    }
    /**
     * <code>repeated .PropertyValue propvalues = 2;</code>
     */
    public se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyValue getPropvalues(int index) {
      return propvalues_.get(index);
    }
    /**
     * <code>repeated .PropertyValue propvalues = 2;</code>
     */
    public se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyValueOrBuilder getPropvaluesOrBuilder(
        int index) {
      return propvalues_.get(index);
    }
    private void ensurePropvaluesIsMutable() {
      if (!propvalues_.isModifiable()) {
        propvalues_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(propvalues_);
       }
    }

    /**
     * <code>repeated .PropertyValue propvalues = 2;</code>
     */
    private void setPropvalues(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyValue value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePropvaluesIsMutable();
      propvalues_.set(index, value);
    }
    /**
     * <code>repeated .PropertyValue propvalues = 2;</code>
     */
    private void setPropvalues(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyValue.Builder builderForValue) {
      ensurePropvaluesIsMutable();
      propvalues_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .PropertyValue propvalues = 2;</code>
     */
    private void addPropvalues(se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyValue value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePropvaluesIsMutable();
      propvalues_.add(value);
    }
    /**
     * <code>repeated .PropertyValue propvalues = 2;</code>
     */
    private void addPropvalues(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyValue value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePropvaluesIsMutable();
      propvalues_.add(index, value);
    }
    /**
     * <code>repeated .PropertyValue propvalues = 2;</code>
     */
    private void addPropvalues(
        se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyValue.Builder builderForValue) {
      ensurePropvaluesIsMutable();
      propvalues_.add(builderForValue.build());
    }
    /**
     * <code>repeated .PropertyValue propvalues = 2;</code>
     */
    private void addPropvalues(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyValue.Builder builderForValue) {
      ensurePropvaluesIsMutable();
      propvalues_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .PropertyValue propvalues = 2;</code>
     */
    private void addAllPropvalues(
        java.lang.Iterable<? extends se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyValue> values) {
      ensurePropvaluesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, propvalues_);
    }
    /**
     * <code>repeated .PropertyValue propvalues = 2;</code>
     */
    private void clearPropvalues() {
      propvalues_ = emptyProtobufList();
    }
    /**
     * <code>repeated .PropertyValue propvalues = 2;</code>
     */
    private void removePropvalues(int index) {
      ensurePropvaluesIsMutable();
      propvalues_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < propkeys_.size(); i++) {
        output.writeMessage(1, propkeys_.get(i));
      }
      for (int i = 0; i < propvalues_.size(); i++) {
        output.writeMessage(2, propvalues_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < propkeys_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, propkeys_.get(i));
      }
      for (int i = 0; i < propvalues_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, propvalues_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code PropertyMap}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap, Builder> implements
        // @@protoc_insertion_point(builder_implements:PropertyMap)
        se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMapOrBuilder {
      // Construct using se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>repeated .PropertyKey propkeys = 1;</code>
       */
      public java.util.List<se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey> getPropkeysList() {
        return java.util.Collections.unmodifiableList(
            instance.getPropkeysList());
      }
      /**
       * <code>repeated .PropertyKey propkeys = 1;</code>
       */
      public int getPropkeysCount() {
        return instance.getPropkeysCount();
      }/**
       * <code>repeated .PropertyKey propkeys = 1;</code>
       */
      public se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey getPropkeys(int index) {
        return instance.getPropkeys(index);
      }
      /**
       * <code>repeated .PropertyKey propkeys = 1;</code>
       */
      public Builder setPropkeys(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey value) {
        copyOnWrite();
        instance.setPropkeys(index, value);
        return this;
      }
      /**
       * <code>repeated .PropertyKey propkeys = 1;</code>
       */
      public Builder setPropkeys(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey.Builder builderForValue) {
        copyOnWrite();
        instance.setPropkeys(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .PropertyKey propkeys = 1;</code>
       */
      public Builder addPropkeys(se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey value) {
        copyOnWrite();
        instance.addPropkeys(value);
        return this;
      }
      /**
       * <code>repeated .PropertyKey propkeys = 1;</code>
       */
      public Builder addPropkeys(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey value) {
        copyOnWrite();
        instance.addPropkeys(index, value);
        return this;
      }
      /**
       * <code>repeated .PropertyKey propkeys = 1;</code>
       */
      public Builder addPropkeys(
          se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey.Builder builderForValue) {
        copyOnWrite();
        instance.addPropkeys(builderForValue);
        return this;
      }
      /**
       * <code>repeated .PropertyKey propkeys = 1;</code>
       */
      public Builder addPropkeys(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey.Builder builderForValue) {
        copyOnWrite();
        instance.addPropkeys(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .PropertyKey propkeys = 1;</code>
       */
      public Builder addAllPropkeys(
          java.lang.Iterable<? extends se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey> values) {
        copyOnWrite();
        instance.addAllPropkeys(values);
        return this;
      }
      /**
       * <code>repeated .PropertyKey propkeys = 1;</code>
       */
      public Builder clearPropkeys() {
        copyOnWrite();
        instance.clearPropkeys();
        return this;
      }
      /**
       * <code>repeated .PropertyKey propkeys = 1;</code>
       */
      public Builder removePropkeys(int index) {
        copyOnWrite();
        instance.removePropkeys(index);
        return this;
      }

      /**
       * <code>repeated .PropertyValue propvalues = 2;</code>
       */
      public java.util.List<se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyValue> getPropvaluesList() {
        return java.util.Collections.unmodifiableList(
            instance.getPropvaluesList());
      }
      /**
       * <code>repeated .PropertyValue propvalues = 2;</code>
       */
      public int getPropvaluesCount() {
        return instance.getPropvaluesCount();
      }/**
       * <code>repeated .PropertyValue propvalues = 2;</code>
       */
      public se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyValue getPropvalues(int index) {
        return instance.getPropvalues(index);
      }
      /**
       * <code>repeated .PropertyValue propvalues = 2;</code>
       */
      public Builder setPropvalues(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyValue value) {
        copyOnWrite();
        instance.setPropvalues(index, value);
        return this;
      }
      /**
       * <code>repeated .PropertyValue propvalues = 2;</code>
       */
      public Builder setPropvalues(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyValue.Builder builderForValue) {
        copyOnWrite();
        instance.setPropvalues(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .PropertyValue propvalues = 2;</code>
       */
      public Builder addPropvalues(se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyValue value) {
        copyOnWrite();
        instance.addPropvalues(value);
        return this;
      }
      /**
       * <code>repeated .PropertyValue propvalues = 2;</code>
       */
      public Builder addPropvalues(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyValue value) {
        copyOnWrite();
        instance.addPropvalues(index, value);
        return this;
      }
      /**
       * <code>repeated .PropertyValue propvalues = 2;</code>
       */
      public Builder addPropvalues(
          se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyValue.Builder builderForValue) {
        copyOnWrite();
        instance.addPropvalues(builderForValue);
        return this;
      }
      /**
       * <code>repeated .PropertyValue propvalues = 2;</code>
       */
      public Builder addPropvalues(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyValue.Builder builderForValue) {
        copyOnWrite();
        instance.addPropvalues(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .PropertyValue propvalues = 2;</code>
       */
      public Builder addAllPropvalues(
          java.lang.Iterable<? extends se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyValue> values) {
        copyOnWrite();
        instance.addAllPropvalues(values);
        return this;
      }
      /**
       * <code>repeated .PropertyValue propvalues = 2;</code>
       */
      public Builder clearPropvalues() {
        copyOnWrite();
        instance.clearPropvalues();
        return this;
      }
      /**
       * <code>repeated .PropertyValue propvalues = 2;</code>
       */
      public Builder removePropvalues(int index) {
        copyOnWrite();
        instance.removePropvalues(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PropertyMap)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          propkeys_.makeImmutable();
          propvalues_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap other = (se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap) arg1;
          propkeys_= visitor.visitList(propkeys_, other.propkeys_);
          propvalues_= visitor.visitList(propvalues_, other.propvalues_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  if (!propkeys_.isModifiable()) {
                    propkeys_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(propkeys_);
                  }
                  propkeys_.add(
                      input.readMessage(se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey.parser(), extensionRegistry));
                  break;
                }
                case 18: {
                  if (!propvalues_.isModifiable()) {
                    propvalues_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(propvalues_);
                  }
                  propvalues_.add(
                      input.readMessage(se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyValue.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:PropertyMap)
    private static final se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new PropertyMap();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<PropertyMap> PARSER;

    public static com.google.protobuf.Parser<PropertyMap> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface NodesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Nodes)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .Nodes.NodeTypes builtin = 1;</code>
     */
    int getBuiltinValue();
    /**
     * <code>optional .Nodes.NodeTypes builtin = 1;</code>
     */
    se.lth.cs.docforia.io.protobuf3.Singlepart.Nodes.NodeTypes getBuiltin();

    /**
     * <code>optional string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>repeated string variants = 3;</code>
     */
    java.util.List<String>
        getVariantsList();
    /**
     * <code>repeated string variants = 3;</code>
     */
    int getVariantsCount();
    /**
     * <code>repeated string variants = 3;</code>
     */
    java.lang.String getVariants(int index);
    /**
     * <code>repeated string variants = 3;</code>
     */
    com.google.protobuf.ByteString
        getVariantsBytes(int index);

    /**
     * <code>repeated uint32 numentries = 4 [packed = true];</code>
     */
    java.util.List<java.lang.Integer> getNumentriesList();
    /**
     * <code>repeated uint32 numentries = 4 [packed = true];</code>
     */
    int getNumentriesCount();
    /**
     * <code>repeated uint32 numentries = 4 [packed = true];</code>
     */
    int getNumentries(int index);

    /**
     * <pre>
     * List of property sets, indicies corresponds to columns index.
     * </pre>
     *
     * <code>repeated .PropertySet sets = 5;</code>
     */
    java.util.List<se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet> 
        getSetsList();
    /**
     * <pre>
     * List of property sets, indicies corresponds to columns index.
     * </pre>
     *
     * <code>repeated .PropertySet sets = 5;</code>
     */
    se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet getSets(int index);
    /**
     * <pre>
     * List of property sets, indicies corresponds to columns index.
     * </pre>
     *
     * <code>repeated .PropertySet sets = 5;</code>
     */
    int getSetsCount();

    /**
     * <code>repeated .PropertyKey keys = 6;</code>
     */
    java.util.List<se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey> 
        getKeysList();
    /**
     * <code>repeated .PropertyKey keys = 6;</code>
     */
    se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey getKeys(int index);
    /**
     * <code>repeated .PropertyKey keys = 6;</code>
     */
    int getKeysCount();

    /**
     * <pre>
     * Raw data in sequence. Type is determined by keys.
     * </pre>
     *
     * <code>repeated .Column columns = 7;</code>
     */
    java.util.List<se.lth.cs.docforia.io.protobuf3.Singlepart.Column> 
        getColumnsList();
    /**
     * <pre>
     * Raw data in sequence. Type is determined by keys.
     * </pre>
     *
     * <code>repeated .Column columns = 7;</code>
     */
    se.lth.cs.docforia.io.protobuf3.Singlepart.Column getColumns(int index);
    /**
     * <pre>
     * Raw data in sequence. Type is determined by keys.
     * </pre>
     *
     * <code>repeated .Column columns = 7;</code>
     */
    int getColumnsCount();

    /**
     * <pre>
     * List of set indicies, determines which set to use when decoding a single node.
     * </pre>
     *
     * <code>repeated sint32 stream = 8 [packed = true];</code>
     */
    java.util.List<java.lang.Integer> getStreamList();
    /**
     * <pre>
     * List of set indicies, determines which set to use when decoding a single node.
     * </pre>
     *
     * <code>repeated sint32 stream = 8 [packed = true];</code>
     */
    int getStreamCount();
    /**
     * <pre>
     * List of set indicies, determines which set to use when decoding a single node.
     * </pre>
     *
     * <code>repeated sint32 stream = 8 [packed = true];</code>
     */
    int getStream(int index);

    public se.lth.cs.docforia.io.protobuf3.Singlepart.Nodes.KeyCase getKeyCase();
  }
  /**
   * Protobuf type {@code Nodes}
   */
  public  static final class Nodes extends
      com.google.protobuf.GeneratedMessageLite<
          Nodes, Nodes.Builder> implements
      // @@protoc_insertion_point(message_implements:Nodes)
      NodesOrBuilder {
    private Nodes() {
      variants_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
      numentries_ = emptyIntList();
      sets_ = emptyProtobufList();
      keys_ = emptyProtobufList();
      columns_ = emptyProtobufList();
      stream_ = emptyIntList();
    }
    /**
     * Protobuf enum {@code Nodes.NodeTypes}
     */
    public enum NodeTypes
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>TOKEN = 0;</code>
       */
      TOKEN(0),
      /**
       * <code>SENTENCE = 1;</code>
       */
      SENTENCE(1),
      /**
       * <code>PARAGRAPH = 2;</code>
       */
      PARAGRAPH(2),
      /**
       * <code>ANCHOR = 3;</code>
       */
      ANCHOR(3),
      /**
       * <code>SECTION = 4;</code>
       */
      SECTION(4),
      /**
       * <code>ABSTRACT = 5;</code>
       */
      ABSTRACT(5),
      /**
       * <code>HEADING = 6;</code>
       */
      HEADING(6),
      /**
       * <code>CLAUSE = 7;</code>
       */
      CLAUSE(7),
      /**
       * <code>PHRASE = 8;</code>
       */
      PHRASE(8),
      /**
       * <code>PREDICATE = 9;</code>
       */
      PREDICATE(9),
      /**
       * <code>ARGUMENT = 10;</code>
       */
      ARGUMENT(10),
      /**
       * <code>PROPOSITION = 11;</code>
       */
      PROPOSITION(11),
      /**
       * <code>ENTITY = 12;</code>
       */
      ENTITY(12),
      /**
       * <code>NAMED_ENTITY = 13;</code>
       */
      NAMED_ENTITY(13),
      /**
       * <code>COREF_MENTION = 14;</code>
       */
      COREF_MENTION(14),
      /**
       * <code>COREF_CHAIN = 15;</code>
       */
      COREF_CHAIN(15),
      /**
       * <code>MENTION = 16;</code>
       */
      MENTION(16),
      /**
       * <code>ENTITY_DISAMBIGUATION = 17;</code>
       */
      ENTITY_DISAMBIGUATION(17),
      /**
       * <code>NAMED_ENTITY_DISAMBIGUATION = 18;</code>
       */
      NAMED_ENTITY_DISAMBIGUATION(18),
      /**
       * <code>SENSE_DISAMBIGUATION = 19;</code>
       */
      SENSE_DISAMBIGUATION(19),
      /**
       * <code>COMPOUND = 20;</code>
       */
      COMPOUND(20),
      /**
       * <code>LIST_ITEM = 21;</code>
       */
      LIST_ITEM(21),
      /**
       * <code>LIST_SECTION = 22;</code>
       */
      LIST_SECTION(22),
      /**
       * <code>TABLE_OF_CONTENTS = 23;</code>
       */
      TABLE_OF_CONTENTS(23),
      /**
       * <code>AST_NODE = 24;</code>
       */
      AST_NODE(24),
      /**
       * <code>AST_TEXT_NODE = 25;</code>
       */
      AST_TEXT_NODE(25),
      /**
       * <code>PARSE_TREE_NODE = 26;</code>
       */
      PARSE_TREE_NODE(26),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>TOKEN = 0;</code>
       */
      public static final int TOKEN_VALUE = 0;
      /**
       * <code>SENTENCE = 1;</code>
       */
      public static final int SENTENCE_VALUE = 1;
      /**
       * <code>PARAGRAPH = 2;</code>
       */
      public static final int PARAGRAPH_VALUE = 2;
      /**
       * <code>ANCHOR = 3;</code>
       */
      public static final int ANCHOR_VALUE = 3;
      /**
       * <code>SECTION = 4;</code>
       */
      public static final int SECTION_VALUE = 4;
      /**
       * <code>ABSTRACT = 5;</code>
       */
      public static final int ABSTRACT_VALUE = 5;
      /**
       * <code>HEADING = 6;</code>
       */
      public static final int HEADING_VALUE = 6;
      /**
       * <code>CLAUSE = 7;</code>
       */
      public static final int CLAUSE_VALUE = 7;
      /**
       * <code>PHRASE = 8;</code>
       */
      public static final int PHRASE_VALUE = 8;
      /**
       * <code>PREDICATE = 9;</code>
       */
      public static final int PREDICATE_VALUE = 9;
      /**
       * <code>ARGUMENT = 10;</code>
       */
      public static final int ARGUMENT_VALUE = 10;
      /**
       * <code>PROPOSITION = 11;</code>
       */
      public static final int PROPOSITION_VALUE = 11;
      /**
       * <code>ENTITY = 12;</code>
       */
      public static final int ENTITY_VALUE = 12;
      /**
       * <code>NAMED_ENTITY = 13;</code>
       */
      public static final int NAMED_ENTITY_VALUE = 13;
      /**
       * <code>COREF_MENTION = 14;</code>
       */
      public static final int COREF_MENTION_VALUE = 14;
      /**
       * <code>COREF_CHAIN = 15;</code>
       */
      public static final int COREF_CHAIN_VALUE = 15;
      /**
       * <code>MENTION = 16;</code>
       */
      public static final int MENTION_VALUE = 16;
      /**
       * <code>ENTITY_DISAMBIGUATION = 17;</code>
       */
      public static final int ENTITY_DISAMBIGUATION_VALUE = 17;
      /**
       * <code>NAMED_ENTITY_DISAMBIGUATION = 18;</code>
       */
      public static final int NAMED_ENTITY_DISAMBIGUATION_VALUE = 18;
      /**
       * <code>SENSE_DISAMBIGUATION = 19;</code>
       */
      public static final int SENSE_DISAMBIGUATION_VALUE = 19;
      /**
       * <code>COMPOUND = 20;</code>
       */
      public static final int COMPOUND_VALUE = 20;
      /**
       * <code>LIST_ITEM = 21;</code>
       */
      public static final int LIST_ITEM_VALUE = 21;
      /**
       * <code>LIST_SECTION = 22;</code>
       */
      public static final int LIST_SECTION_VALUE = 22;
      /**
       * <code>TABLE_OF_CONTENTS = 23;</code>
       */
      public static final int TABLE_OF_CONTENTS_VALUE = 23;
      /**
       * <code>AST_NODE = 24;</code>
       */
      public static final int AST_NODE_VALUE = 24;
      /**
       * <code>AST_TEXT_NODE = 25;</code>
       */
      public static final int AST_TEXT_NODE_VALUE = 25;
      /**
       * <code>PARSE_TREE_NODE = 26;</code>
       */
      public static final int PARSE_TREE_NODE_VALUE = 26;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static NodeTypes valueOf(int value) {
        return forNumber(value);
      }

      public static NodeTypes forNumber(int value) {
        switch (value) {
          case 0: return TOKEN;
          case 1: return SENTENCE;
          case 2: return PARAGRAPH;
          case 3: return ANCHOR;
          case 4: return SECTION;
          case 5: return ABSTRACT;
          case 6: return HEADING;
          case 7: return CLAUSE;
          case 8: return PHRASE;
          case 9: return PREDICATE;
          case 10: return ARGUMENT;
          case 11: return PROPOSITION;
          case 12: return ENTITY;
          case 13: return NAMED_ENTITY;
          case 14: return COREF_MENTION;
          case 15: return COREF_CHAIN;
          case 16: return MENTION;
          case 17: return ENTITY_DISAMBIGUATION;
          case 18: return NAMED_ENTITY_DISAMBIGUATION;
          case 19: return SENSE_DISAMBIGUATION;
          case 20: return COMPOUND;
          case 21: return LIST_ITEM;
          case 22: return LIST_SECTION;
          case 23: return TABLE_OF_CONTENTS;
          case 24: return AST_NODE;
          case 25: return AST_TEXT_NODE;
          case 26: return PARSE_TREE_NODE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<NodeTypes>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          NodeTypes> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<NodeTypes>() {
              public NodeTypes findValueByNumber(int number) {
                return NodeTypes.forNumber(number);
              }
            };

      private final int value;

      private NodeTypes(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:Nodes.NodeTypes)
    }

    private int bitField0_;
    private int keyCase_ = 0;
    private java.lang.Object key_;
    public enum KeyCase
        implements com.google.protobuf.Internal.EnumLite {
      BUILTIN(1),
      NAME(2),
      KEY_NOT_SET(0);
      private final int value;
      private KeyCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static KeyCase valueOf(int value) {
        return forNumber(value);
      }

      public static KeyCase forNumber(int value) {
        switch (value) {
          case 1: return BUILTIN;
          case 2: return NAME;
          case 0: return KEY_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public KeyCase
    getKeyCase() {
      return KeyCase.forNumber(
          keyCase_);
    }

    private void clearKey() {
      keyCase_ = 0;
      key_ = null;
    }

    public static final int BUILTIN_FIELD_NUMBER = 1;
    /**
     * <code>optional .Nodes.NodeTypes builtin = 1;</code>
     */
    public int getBuiltinValue() {
      if (keyCase_ == 1) {
        return (java.lang.Integer) key_;
      }
      return 0;
    }
    /**
     * <code>optional .Nodes.NodeTypes builtin = 1;</code>
     */
    public se.lth.cs.docforia.io.protobuf3.Singlepart.Nodes.NodeTypes getBuiltin() {
      if (keyCase_ == 1) {
        se.lth.cs.docforia.io.protobuf3.Singlepart.Nodes.NodeTypes result = se.lth.cs.docforia.io.protobuf3.Singlepart.Nodes.NodeTypes.forNumber((java.lang.Integer) key_);
        return result == null ? se.lth.cs.docforia.io.protobuf3.Singlepart.Nodes.NodeTypes.UNRECOGNIZED : result;
      }
      return se.lth.cs.docforia.io.protobuf3.Singlepart.Nodes.NodeTypes.TOKEN;
    }
    /**
     * <code>optional .Nodes.NodeTypes builtin = 1;</code>
     */
    private void setBuiltinValue(int value) {
      keyCase_ = 1;
      key_ = value;
    }
    /**
     * <code>optional .Nodes.NodeTypes builtin = 1;</code>
     */
    private void setBuiltin(se.lth.cs.docforia.io.protobuf3.Singlepart.Nodes.NodeTypes value) {
      if (value == null) {
        throw new NullPointerException();
      }
      keyCase_ = 1;
      key_ = value.getNumber();
    }
    /**
     * <code>optional .Nodes.NodeTypes builtin = 1;</code>
     */
    private void clearBuiltin() {
      if (keyCase_ == 1) {
        keyCase_ = 0;
        key_ = null;
      }
    }

    public static final int NAME_FIELD_NUMBER = 2;
    /**
     * <code>optional string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.String ref = "";
      if (keyCase_ == 2) {
        ref = (java.lang.String) key_;
      }
      return ref;
    }
    /**
     * <code>optional string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.String ref = "";
      if (keyCase_ == 2) {
        ref = (java.lang.String) key_;
      }
      return com.google.protobuf.ByteString.copyFromUtf8(ref);
    }
    /**
     * <code>optional string name = 2;</code>
     */
    private void setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  keyCase_ = 2;
      key_ = value;
    }
    /**
     * <code>optional string name = 2;</code>
     */
    private void clearName() {
      if (keyCase_ == 2) {
        keyCase_ = 0;
        key_ = null;
      }
    }
    /**
     * <code>optional string name = 2;</code>
     */
    private void setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      keyCase_ = 2;
      key_ = value.toStringUtf8();
    }

    public static final int VARIANTS_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.ProtobufList<String> variants_;
    /**
     * <code>repeated string variants = 3;</code>
     */
    public java.util.List<String> getVariantsList() {
      return variants_;
    }
    /**
     * <code>repeated string variants = 3;</code>
     */
    public int getVariantsCount() {
      return variants_.size();
    }
    /**
     * <code>repeated string variants = 3;</code>
     */
    public java.lang.String getVariants(int index) {
      return variants_.get(index);
    }
    /**
     * <code>repeated string variants = 3;</code>
     */
    public com.google.protobuf.ByteString
        getVariantsBytes(int index) {
      return com.google.protobuf.ByteString.copyFromUtf8(
          variants_.get(index));
    }
    private void ensureVariantsIsMutable() {
      if (!variants_.isModifiable()) {
        variants_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(variants_);
       }
    }
    /**
     * <code>repeated string variants = 3;</code>
     */
    private void setVariants(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureVariantsIsMutable();
      variants_.set(index, value);
    }
    /**
     * <code>repeated string variants = 3;</code>
     */
    private void addVariants(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureVariantsIsMutable();
      variants_.add(value);
    }
    /**
     * <code>repeated string variants = 3;</code>
     */
    private void addAllVariants(
        java.lang.Iterable<java.lang.String> values) {
      ensureVariantsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, variants_);
    }
    /**
     * <code>repeated string variants = 3;</code>
     */
    private void clearVariants() {
      variants_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
    }
    /**
     * <code>repeated string variants = 3;</code>
     */
    private void addVariantsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureVariantsIsMutable();
      variants_.add(value.toStringUtf8());
    }

    public static final int NUMENTRIES_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.IntList numentries_;
    /**
     * <code>repeated uint32 numentries = 4 [packed = true];</code>
     */
    public java.util.List<java.lang.Integer>
        getNumentriesList() {
      return numentries_;
    }
    /**
     * <code>repeated uint32 numentries = 4 [packed = true];</code>
     */
    public int getNumentriesCount() {
      return numentries_.size();
    }
    /**
     * <code>repeated uint32 numentries = 4 [packed = true];</code>
     */
    public int getNumentries(int index) {
      return numentries_.getInt(index);
    }
    private int numentriesMemoizedSerializedSize = -1;
    private void ensureNumentriesIsMutable() {
      if (!numentries_.isModifiable()) {
        numentries_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(numentries_);
       }
    }
    /**
     * <code>repeated uint32 numentries = 4 [packed = true];</code>
     */
    private void setNumentries(
        int index, int value) {
      ensureNumentriesIsMutable();
      numentries_.setInt(index, value);
    }
    /**
     * <code>repeated uint32 numentries = 4 [packed = true];</code>
     */
    private void addNumentries(int value) {
      ensureNumentriesIsMutable();
      numentries_.addInt(value);
    }
    /**
     * <code>repeated uint32 numentries = 4 [packed = true];</code>
     */
    private void addAllNumentries(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureNumentriesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, numentries_);
    }
    /**
     * <code>repeated uint32 numentries = 4 [packed = true];</code>
     */
    private void clearNumentries() {
      numentries_ = emptyIntList();
    }

    public static final int SETS_FIELD_NUMBER = 5;
    private com.google.protobuf.Internal.ProtobufList<se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet> sets_;
    /**
     * <pre>
     * List of property sets, indicies corresponds to columns index.
     * </pre>
     *
     * <code>repeated .PropertySet sets = 5;</code>
     */
    public java.util.List<se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet> getSetsList() {
      return sets_;
    }
    /**
     * <pre>
     * List of property sets, indicies corresponds to columns index.
     * </pre>
     *
     * <code>repeated .PropertySet sets = 5;</code>
     */
    public java.util.List<? extends se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySetOrBuilder> 
        getSetsOrBuilderList() {
      return sets_;
    }
    /**
     * <pre>
     * List of property sets, indicies corresponds to columns index.
     * </pre>
     *
     * <code>repeated .PropertySet sets = 5;</code>
     */
    public int getSetsCount() {
      return sets_.size();
    }
    /**
     * <pre>
     * List of property sets, indicies corresponds to columns index.
     * </pre>
     *
     * <code>repeated .PropertySet sets = 5;</code>
     */
    public se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet getSets(int index) {
      return sets_.get(index);
    }
    /**
     * <pre>
     * List of property sets, indicies corresponds to columns index.
     * </pre>
     *
     * <code>repeated .PropertySet sets = 5;</code>
     */
    public se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySetOrBuilder getSetsOrBuilder(
        int index) {
      return sets_.get(index);
    }
    private void ensureSetsIsMutable() {
      if (!sets_.isModifiable()) {
        sets_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(sets_);
       }
    }

    /**
     * <pre>
     * List of property sets, indicies corresponds to columns index.
     * </pre>
     *
     * <code>repeated .PropertySet sets = 5;</code>
     */
    private void setSets(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureSetsIsMutable();
      sets_.set(index, value);
    }
    /**
     * <pre>
     * List of property sets, indicies corresponds to columns index.
     * </pre>
     *
     * <code>repeated .PropertySet sets = 5;</code>
     */
    private void setSets(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet.Builder builderForValue) {
      ensureSetsIsMutable();
      sets_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     * List of property sets, indicies corresponds to columns index.
     * </pre>
     *
     * <code>repeated .PropertySet sets = 5;</code>
     */
    private void addSets(se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureSetsIsMutable();
      sets_.add(value);
    }
    /**
     * <pre>
     * List of property sets, indicies corresponds to columns index.
     * </pre>
     *
     * <code>repeated .PropertySet sets = 5;</code>
     */
    private void addSets(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureSetsIsMutable();
      sets_.add(index, value);
    }
    /**
     * <pre>
     * List of property sets, indicies corresponds to columns index.
     * </pre>
     *
     * <code>repeated .PropertySet sets = 5;</code>
     */
    private void addSets(
        se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet.Builder builderForValue) {
      ensureSetsIsMutable();
      sets_.add(builderForValue.build());
    }
    /**
     * <pre>
     * List of property sets, indicies corresponds to columns index.
     * </pre>
     *
     * <code>repeated .PropertySet sets = 5;</code>
     */
    private void addSets(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet.Builder builderForValue) {
      ensureSetsIsMutable();
      sets_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     * List of property sets, indicies corresponds to columns index.
     * </pre>
     *
     * <code>repeated .PropertySet sets = 5;</code>
     */
    private void addAllSets(
        java.lang.Iterable<? extends se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet> values) {
      ensureSetsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, sets_);
    }
    /**
     * <pre>
     * List of property sets, indicies corresponds to columns index.
     * </pre>
     *
     * <code>repeated .PropertySet sets = 5;</code>
     */
    private void clearSets() {
      sets_ = emptyProtobufList();
    }
    /**
     * <pre>
     * List of property sets, indicies corresponds to columns index.
     * </pre>
     *
     * <code>repeated .PropertySet sets = 5;</code>
     */
    private void removeSets(int index) {
      ensureSetsIsMutable();
      sets_.remove(index);
    }

    public static final int KEYS_FIELD_NUMBER = 6;
    private com.google.protobuf.Internal.ProtobufList<se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey> keys_;
    /**
     * <code>repeated .PropertyKey keys = 6;</code>
     */
    public java.util.List<se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey> getKeysList() {
      return keys_;
    }
    /**
     * <code>repeated .PropertyKey keys = 6;</code>
     */
    public java.util.List<? extends se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKeyOrBuilder> 
        getKeysOrBuilderList() {
      return keys_;
    }
    /**
     * <code>repeated .PropertyKey keys = 6;</code>
     */
    public int getKeysCount() {
      return keys_.size();
    }
    /**
     * <code>repeated .PropertyKey keys = 6;</code>
     */
    public se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey getKeys(int index) {
      return keys_.get(index);
    }
    /**
     * <code>repeated .PropertyKey keys = 6;</code>
     */
    public se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKeyOrBuilder getKeysOrBuilder(
        int index) {
      return keys_.get(index);
    }
    private void ensureKeysIsMutable() {
      if (!keys_.isModifiable()) {
        keys_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(keys_);
       }
    }

    /**
     * <code>repeated .PropertyKey keys = 6;</code>
     */
    private void setKeys(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureKeysIsMutable();
      keys_.set(index, value);
    }
    /**
     * <code>repeated .PropertyKey keys = 6;</code>
     */
    private void setKeys(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey.Builder builderForValue) {
      ensureKeysIsMutable();
      keys_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .PropertyKey keys = 6;</code>
     */
    private void addKeys(se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureKeysIsMutable();
      keys_.add(value);
    }
    /**
     * <code>repeated .PropertyKey keys = 6;</code>
     */
    private void addKeys(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureKeysIsMutable();
      keys_.add(index, value);
    }
    /**
     * <code>repeated .PropertyKey keys = 6;</code>
     */
    private void addKeys(
        se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey.Builder builderForValue) {
      ensureKeysIsMutable();
      keys_.add(builderForValue.build());
    }
    /**
     * <code>repeated .PropertyKey keys = 6;</code>
     */
    private void addKeys(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey.Builder builderForValue) {
      ensureKeysIsMutable();
      keys_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .PropertyKey keys = 6;</code>
     */
    private void addAllKeys(
        java.lang.Iterable<? extends se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey> values) {
      ensureKeysIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, keys_);
    }
    /**
     * <code>repeated .PropertyKey keys = 6;</code>
     */
    private void clearKeys() {
      keys_ = emptyProtobufList();
    }
    /**
     * <code>repeated .PropertyKey keys = 6;</code>
     */
    private void removeKeys(int index) {
      ensureKeysIsMutable();
      keys_.remove(index);
    }

    public static final int COLUMNS_FIELD_NUMBER = 7;
    private com.google.protobuf.Internal.ProtobufList<se.lth.cs.docforia.io.protobuf3.Singlepart.Column> columns_;
    /**
     * <pre>
     * Raw data in sequence. Type is determined by keys.
     * </pre>
     *
     * <code>repeated .Column columns = 7;</code>
     */
    public java.util.List<se.lth.cs.docforia.io.protobuf3.Singlepart.Column> getColumnsList() {
      return columns_;
    }
    /**
     * <pre>
     * Raw data in sequence. Type is determined by keys.
     * </pre>
     *
     * <code>repeated .Column columns = 7;</code>
     */
    public java.util.List<? extends se.lth.cs.docforia.io.protobuf3.Singlepart.ColumnOrBuilder> 
        getColumnsOrBuilderList() {
      return columns_;
    }
    /**
     * <pre>
     * Raw data in sequence. Type is determined by keys.
     * </pre>
     *
     * <code>repeated .Column columns = 7;</code>
     */
    public int getColumnsCount() {
      return columns_.size();
    }
    /**
     * <pre>
     * Raw data in sequence. Type is determined by keys.
     * </pre>
     *
     * <code>repeated .Column columns = 7;</code>
     */
    public se.lth.cs.docforia.io.protobuf3.Singlepart.Column getColumns(int index) {
      return columns_.get(index);
    }
    /**
     * <pre>
     * Raw data in sequence. Type is determined by keys.
     * </pre>
     *
     * <code>repeated .Column columns = 7;</code>
     */
    public se.lth.cs.docforia.io.protobuf3.Singlepart.ColumnOrBuilder getColumnsOrBuilder(
        int index) {
      return columns_.get(index);
    }
    private void ensureColumnsIsMutable() {
      if (!columns_.isModifiable()) {
        columns_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(columns_);
       }
    }

    /**
     * <pre>
     * Raw data in sequence. Type is determined by keys.
     * </pre>
     *
     * <code>repeated .Column columns = 7;</code>
     */
    private void setColumns(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.Column value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureColumnsIsMutable();
      columns_.set(index, value);
    }
    /**
     * <pre>
     * Raw data in sequence. Type is determined by keys.
     * </pre>
     *
     * <code>repeated .Column columns = 7;</code>
     */
    private void setColumns(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.Column.Builder builderForValue) {
      ensureColumnsIsMutable();
      columns_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     * Raw data in sequence. Type is determined by keys.
     * </pre>
     *
     * <code>repeated .Column columns = 7;</code>
     */
    private void addColumns(se.lth.cs.docforia.io.protobuf3.Singlepart.Column value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureColumnsIsMutable();
      columns_.add(value);
    }
    /**
     * <pre>
     * Raw data in sequence. Type is determined by keys.
     * </pre>
     *
     * <code>repeated .Column columns = 7;</code>
     */
    private void addColumns(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.Column value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureColumnsIsMutable();
      columns_.add(index, value);
    }
    /**
     * <pre>
     * Raw data in sequence. Type is determined by keys.
     * </pre>
     *
     * <code>repeated .Column columns = 7;</code>
     */
    private void addColumns(
        se.lth.cs.docforia.io.protobuf3.Singlepart.Column.Builder builderForValue) {
      ensureColumnsIsMutable();
      columns_.add(builderForValue.build());
    }
    /**
     * <pre>
     * Raw data in sequence. Type is determined by keys.
     * </pre>
     *
     * <code>repeated .Column columns = 7;</code>
     */
    private void addColumns(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.Column.Builder builderForValue) {
      ensureColumnsIsMutable();
      columns_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     * Raw data in sequence. Type is determined by keys.
     * </pre>
     *
     * <code>repeated .Column columns = 7;</code>
     */
    private void addAllColumns(
        java.lang.Iterable<? extends se.lth.cs.docforia.io.protobuf3.Singlepart.Column> values) {
      ensureColumnsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, columns_);
    }
    /**
     * <pre>
     * Raw data in sequence. Type is determined by keys.
     * </pre>
     *
     * <code>repeated .Column columns = 7;</code>
     */
    private void clearColumns() {
      columns_ = emptyProtobufList();
    }
    /**
     * <pre>
     * Raw data in sequence. Type is determined by keys.
     * </pre>
     *
     * <code>repeated .Column columns = 7;</code>
     */
    private void removeColumns(int index) {
      ensureColumnsIsMutable();
      columns_.remove(index);
    }

    public static final int STREAM_FIELD_NUMBER = 8;
    private com.google.protobuf.Internal.IntList stream_;
    /**
     * <pre>
     * List of set indicies, determines which set to use when decoding a single node.
     * </pre>
     *
     * <code>repeated sint32 stream = 8 [packed = true];</code>
     */
    public java.util.List<java.lang.Integer>
        getStreamList() {
      return stream_;
    }
    /**
     * <pre>
     * List of set indicies, determines which set to use when decoding a single node.
     * </pre>
     *
     * <code>repeated sint32 stream = 8 [packed = true];</code>
     */
    public int getStreamCount() {
      return stream_.size();
    }
    /**
     * <pre>
     * List of set indicies, determines which set to use when decoding a single node.
     * </pre>
     *
     * <code>repeated sint32 stream = 8 [packed = true];</code>
     */
    public int getStream(int index) {
      return stream_.getInt(index);
    }
    private int streamMemoizedSerializedSize = -1;
    private void ensureStreamIsMutable() {
      if (!stream_.isModifiable()) {
        stream_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(stream_);
       }
    }
    /**
     * <pre>
     * List of set indicies, determines which set to use when decoding a single node.
     * </pre>
     *
     * <code>repeated sint32 stream = 8 [packed = true];</code>
     */
    private void setStream(
        int index, int value) {
      ensureStreamIsMutable();
      stream_.setInt(index, value);
    }
    /**
     * <pre>
     * List of set indicies, determines which set to use when decoding a single node.
     * </pre>
     *
     * <code>repeated sint32 stream = 8 [packed = true];</code>
     */
    private void addStream(int value) {
      ensureStreamIsMutable();
      stream_.addInt(value);
    }
    /**
     * <pre>
     * List of set indicies, determines which set to use when decoding a single node.
     * </pre>
     *
     * <code>repeated sint32 stream = 8 [packed = true];</code>
     */
    private void addAllStream(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureStreamIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, stream_);
    }
    /**
     * <pre>
     * List of set indicies, determines which set to use when decoding a single node.
     * </pre>
     *
     * <code>repeated sint32 stream = 8 [packed = true];</code>
     */
    private void clearStream() {
      stream_ = emptyIntList();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (keyCase_ == 1) {
        output.writeEnum(1, ((java.lang.Integer) key_));
      }
      if (keyCase_ == 2) {
        output.writeString(2, getName());
      }
      for (int i = 0; i < variants_.size(); i++) {
        output.writeString(3, variants_.get(i));
      }
      if (getNumentriesList().size() > 0) {
        output.writeUInt32NoTag(34);
        output.writeUInt32NoTag(numentriesMemoizedSerializedSize);
      }
      for (int i = 0; i < numentries_.size(); i++) {
        output.writeUInt32NoTag(numentries_.getInt(i));
      }
      for (int i = 0; i < sets_.size(); i++) {
        output.writeMessage(5, sets_.get(i));
      }
      for (int i = 0; i < keys_.size(); i++) {
        output.writeMessage(6, keys_.get(i));
      }
      for (int i = 0; i < columns_.size(); i++) {
        output.writeMessage(7, columns_.get(i));
      }
      if (getStreamList().size() > 0) {
        output.writeUInt32NoTag(66);
        output.writeUInt32NoTag(streamMemoizedSerializedSize);
      }
      for (int i = 0; i < stream_.size(); i++) {
        output.writeSInt32NoTag(stream_.getInt(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (keyCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, ((java.lang.Integer) key_));
      }
      if (keyCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getName());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < variants_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(variants_.get(i));
        }
        size += dataSize;
        size += 1 * getVariantsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < numentries_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(numentries_.getInt(i));
        }
        size += dataSize;
        if (!getNumentriesList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        numentriesMemoizedSerializedSize = dataSize;
      }
      for (int i = 0; i < sets_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, sets_.get(i));
      }
      for (int i = 0; i < keys_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, keys_.get(i));
      }
      for (int i = 0; i < columns_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, columns_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < stream_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt32SizeNoTag(stream_.getInt(i));
        }
        size += dataSize;
        if (!getStreamList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        streamMemoizedSerializedSize = dataSize;
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static se.lth.cs.docforia.io.protobuf3.Singlepart.Nodes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.Nodes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.Nodes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.Nodes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.Nodes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.Nodes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.Nodes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.Nodes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.Nodes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.Nodes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(se.lth.cs.docforia.io.protobuf3.Singlepart.Nodes prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code Nodes}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          se.lth.cs.docforia.io.protobuf3.Singlepart.Nodes, Builder> implements
        // @@protoc_insertion_point(builder_implements:Nodes)
        se.lth.cs.docforia.io.protobuf3.Singlepart.NodesOrBuilder {
      // Construct using se.lth.cs.docforia.io.protobuf3.Singlepart.Nodes.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      public KeyCase
          getKeyCase() {
        return instance.getKeyCase();
      }

      public Builder clearKey() {
        copyOnWrite();
        instance.clearKey();
        return this;
      }


      /**
       * <code>optional .Nodes.NodeTypes builtin = 1;</code>
       */
      public int getBuiltinValue() {
        return instance.getBuiltinValue();
      }
      /**
       * <code>optional .Nodes.NodeTypes builtin = 1;</code>
       */
      public Builder setBuiltinValue(int value) {
        copyOnWrite();
        instance.setBuiltinValue(value);
        return this;
      }
      /**
       * <code>optional .Nodes.NodeTypes builtin = 1;</code>
       */
      public se.lth.cs.docforia.io.protobuf3.Singlepart.Nodes.NodeTypes getBuiltin() {
        return instance.getBuiltin();
      }
      /**
       * <code>optional .Nodes.NodeTypes builtin = 1;</code>
       */
      public Builder setBuiltin(se.lth.cs.docforia.io.protobuf3.Singlepart.Nodes.NodeTypes value) {
        copyOnWrite();
        instance.setBuiltin(value);
        return this;
      }
      /**
       * <code>optional .Nodes.NodeTypes builtin = 1;</code>
       */
      public Builder clearBuiltin() {
        copyOnWrite();
        instance.clearBuiltin();
        return this;
      }

      /**
       * <code>optional string name = 2;</code>
       */
      public java.lang.String getName() {
        return instance.getName();
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        return instance.getNameBytes();
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        copyOnWrite();
        instance.setName(value);
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder clearName() {
        copyOnWrite();
        instance.clearName();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setNameBytes(value);
        return this;
      }

      /**
       * <code>repeated string variants = 3;</code>
       */
      public java.util.List<String>
          getVariantsList() {
        return java.util.Collections.unmodifiableList(
            instance.getVariantsList());
      }
      /**
       * <code>repeated string variants = 3;</code>
       */
      public int getVariantsCount() {
        return instance.getVariantsCount();
      }
      /**
       * <code>repeated string variants = 3;</code>
       */
      public java.lang.String getVariants(int index) {
        return instance.getVariants(index);
      }
      /**
       * <code>repeated string variants = 3;</code>
       */
      public com.google.protobuf.ByteString
          getVariantsBytes(int index) {
        return instance.getVariantsBytes(index);
      }
      /**
       * <code>repeated string variants = 3;</code>
       */
      public Builder setVariants(
          int index, java.lang.String value) {
        copyOnWrite();
        instance.setVariants(index, value);
        return this;
      }
      /**
       * <code>repeated string variants = 3;</code>
       */
      public Builder addVariants(
          java.lang.String value) {
        copyOnWrite();
        instance.addVariants(value);
        return this;
      }
      /**
       * <code>repeated string variants = 3;</code>
       */
      public Builder addAllVariants(
          java.lang.Iterable<java.lang.String> values) {
        copyOnWrite();
        instance.addAllVariants(values);
        return this;
      }
      /**
       * <code>repeated string variants = 3;</code>
       */
      public Builder clearVariants() {
        copyOnWrite();
        instance.clearVariants();
        return this;
      }
      /**
       * <code>repeated string variants = 3;</code>
       */
      public Builder addVariantsBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.addVariantsBytes(value);
        return this;
      }

      /**
       * <code>repeated uint32 numentries = 4 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getNumentriesList() {
        return java.util.Collections.unmodifiableList(
            instance.getNumentriesList());
      }
      /**
       * <code>repeated uint32 numentries = 4 [packed = true];</code>
       */
      public int getNumentriesCount() {
        return instance.getNumentriesCount();
      }
      /**
       * <code>repeated uint32 numentries = 4 [packed = true];</code>
       */
      public int getNumentries(int index) {
        return instance.getNumentries(index);
      }
      /**
       * <code>repeated uint32 numentries = 4 [packed = true];</code>
       */
      public Builder setNumentries(
          int index, int value) {
        copyOnWrite();
        instance.setNumentries(index, value);
        return this;
      }
      /**
       * <code>repeated uint32 numentries = 4 [packed = true];</code>
       */
      public Builder addNumentries(int value) {
        copyOnWrite();
        instance.addNumentries(value);
        return this;
      }
      /**
       * <code>repeated uint32 numentries = 4 [packed = true];</code>
       */
      public Builder addAllNumentries(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllNumentries(values);
        return this;
      }
      /**
       * <code>repeated uint32 numentries = 4 [packed = true];</code>
       */
      public Builder clearNumentries() {
        copyOnWrite();
        instance.clearNumentries();
        return this;
      }

      /**
       * <pre>
       * List of property sets, indicies corresponds to columns index.
       * </pre>
       *
       * <code>repeated .PropertySet sets = 5;</code>
       */
      public java.util.List<se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet> getSetsList() {
        return java.util.Collections.unmodifiableList(
            instance.getSetsList());
      }
      /**
       * <pre>
       * List of property sets, indicies corresponds to columns index.
       * </pre>
       *
       * <code>repeated .PropertySet sets = 5;</code>
       */
      public int getSetsCount() {
        return instance.getSetsCount();
      }/**
       * <pre>
       * List of property sets, indicies corresponds to columns index.
       * </pre>
       *
       * <code>repeated .PropertySet sets = 5;</code>
       */
      public se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet getSets(int index) {
        return instance.getSets(index);
      }
      /**
       * <pre>
       * List of property sets, indicies corresponds to columns index.
       * </pre>
       *
       * <code>repeated .PropertySet sets = 5;</code>
       */
      public Builder setSets(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet value) {
        copyOnWrite();
        instance.setSets(index, value);
        return this;
      }
      /**
       * <pre>
       * List of property sets, indicies corresponds to columns index.
       * </pre>
       *
       * <code>repeated .PropertySet sets = 5;</code>
       */
      public Builder setSets(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet.Builder builderForValue) {
        copyOnWrite();
        instance.setSets(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * List of property sets, indicies corresponds to columns index.
       * </pre>
       *
       * <code>repeated .PropertySet sets = 5;</code>
       */
      public Builder addSets(se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet value) {
        copyOnWrite();
        instance.addSets(value);
        return this;
      }
      /**
       * <pre>
       * List of property sets, indicies corresponds to columns index.
       * </pre>
       *
       * <code>repeated .PropertySet sets = 5;</code>
       */
      public Builder addSets(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet value) {
        copyOnWrite();
        instance.addSets(index, value);
        return this;
      }
      /**
       * <pre>
       * List of property sets, indicies corresponds to columns index.
       * </pre>
       *
       * <code>repeated .PropertySet sets = 5;</code>
       */
      public Builder addSets(
          se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet.Builder builderForValue) {
        copyOnWrite();
        instance.addSets(builderForValue);
        return this;
      }
      /**
       * <pre>
       * List of property sets, indicies corresponds to columns index.
       * </pre>
       *
       * <code>repeated .PropertySet sets = 5;</code>
       */
      public Builder addSets(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet.Builder builderForValue) {
        copyOnWrite();
        instance.addSets(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * List of property sets, indicies corresponds to columns index.
       * </pre>
       *
       * <code>repeated .PropertySet sets = 5;</code>
       */
      public Builder addAllSets(
          java.lang.Iterable<? extends se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet> values) {
        copyOnWrite();
        instance.addAllSets(values);
        return this;
      }
      /**
       * <pre>
       * List of property sets, indicies corresponds to columns index.
       * </pre>
       *
       * <code>repeated .PropertySet sets = 5;</code>
       */
      public Builder clearSets() {
        copyOnWrite();
        instance.clearSets();
        return this;
      }
      /**
       * <pre>
       * List of property sets, indicies corresponds to columns index.
       * </pre>
       *
       * <code>repeated .PropertySet sets = 5;</code>
       */
      public Builder removeSets(int index) {
        copyOnWrite();
        instance.removeSets(index);
        return this;
      }

      /**
       * <code>repeated .PropertyKey keys = 6;</code>
       */
      public java.util.List<se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey> getKeysList() {
        return java.util.Collections.unmodifiableList(
            instance.getKeysList());
      }
      /**
       * <code>repeated .PropertyKey keys = 6;</code>
       */
      public int getKeysCount() {
        return instance.getKeysCount();
      }/**
       * <code>repeated .PropertyKey keys = 6;</code>
       */
      public se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey getKeys(int index) {
        return instance.getKeys(index);
      }
      /**
       * <code>repeated .PropertyKey keys = 6;</code>
       */
      public Builder setKeys(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey value) {
        copyOnWrite();
        instance.setKeys(index, value);
        return this;
      }
      /**
       * <code>repeated .PropertyKey keys = 6;</code>
       */
      public Builder setKeys(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey.Builder builderForValue) {
        copyOnWrite();
        instance.setKeys(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .PropertyKey keys = 6;</code>
       */
      public Builder addKeys(se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey value) {
        copyOnWrite();
        instance.addKeys(value);
        return this;
      }
      /**
       * <code>repeated .PropertyKey keys = 6;</code>
       */
      public Builder addKeys(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey value) {
        copyOnWrite();
        instance.addKeys(index, value);
        return this;
      }
      /**
       * <code>repeated .PropertyKey keys = 6;</code>
       */
      public Builder addKeys(
          se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey.Builder builderForValue) {
        copyOnWrite();
        instance.addKeys(builderForValue);
        return this;
      }
      /**
       * <code>repeated .PropertyKey keys = 6;</code>
       */
      public Builder addKeys(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey.Builder builderForValue) {
        copyOnWrite();
        instance.addKeys(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .PropertyKey keys = 6;</code>
       */
      public Builder addAllKeys(
          java.lang.Iterable<? extends se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey> values) {
        copyOnWrite();
        instance.addAllKeys(values);
        return this;
      }
      /**
       * <code>repeated .PropertyKey keys = 6;</code>
       */
      public Builder clearKeys() {
        copyOnWrite();
        instance.clearKeys();
        return this;
      }
      /**
       * <code>repeated .PropertyKey keys = 6;</code>
       */
      public Builder removeKeys(int index) {
        copyOnWrite();
        instance.removeKeys(index);
        return this;
      }

      /**
       * <pre>
       * Raw data in sequence. Type is determined by keys.
       * </pre>
       *
       * <code>repeated .Column columns = 7;</code>
       */
      public java.util.List<se.lth.cs.docforia.io.protobuf3.Singlepart.Column> getColumnsList() {
        return java.util.Collections.unmodifiableList(
            instance.getColumnsList());
      }
      /**
       * <pre>
       * Raw data in sequence. Type is determined by keys.
       * </pre>
       *
       * <code>repeated .Column columns = 7;</code>
       */
      public int getColumnsCount() {
        return instance.getColumnsCount();
      }/**
       * <pre>
       * Raw data in sequence. Type is determined by keys.
       * </pre>
       *
       * <code>repeated .Column columns = 7;</code>
       */
      public se.lth.cs.docforia.io.protobuf3.Singlepart.Column getColumns(int index) {
        return instance.getColumns(index);
      }
      /**
       * <pre>
       * Raw data in sequence. Type is determined by keys.
       * </pre>
       *
       * <code>repeated .Column columns = 7;</code>
       */
      public Builder setColumns(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.Column value) {
        copyOnWrite();
        instance.setColumns(index, value);
        return this;
      }
      /**
       * <pre>
       * Raw data in sequence. Type is determined by keys.
       * </pre>
       *
       * <code>repeated .Column columns = 7;</code>
       */
      public Builder setColumns(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.Column.Builder builderForValue) {
        copyOnWrite();
        instance.setColumns(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * Raw data in sequence. Type is determined by keys.
       * </pre>
       *
       * <code>repeated .Column columns = 7;</code>
       */
      public Builder addColumns(se.lth.cs.docforia.io.protobuf3.Singlepart.Column value) {
        copyOnWrite();
        instance.addColumns(value);
        return this;
      }
      /**
       * <pre>
       * Raw data in sequence. Type is determined by keys.
       * </pre>
       *
       * <code>repeated .Column columns = 7;</code>
       */
      public Builder addColumns(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.Column value) {
        copyOnWrite();
        instance.addColumns(index, value);
        return this;
      }
      /**
       * <pre>
       * Raw data in sequence. Type is determined by keys.
       * </pre>
       *
       * <code>repeated .Column columns = 7;</code>
       */
      public Builder addColumns(
          se.lth.cs.docforia.io.protobuf3.Singlepart.Column.Builder builderForValue) {
        copyOnWrite();
        instance.addColumns(builderForValue);
        return this;
      }
      /**
       * <pre>
       * Raw data in sequence. Type is determined by keys.
       * </pre>
       *
       * <code>repeated .Column columns = 7;</code>
       */
      public Builder addColumns(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.Column.Builder builderForValue) {
        copyOnWrite();
        instance.addColumns(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * Raw data in sequence. Type is determined by keys.
       * </pre>
       *
       * <code>repeated .Column columns = 7;</code>
       */
      public Builder addAllColumns(
          java.lang.Iterable<? extends se.lth.cs.docforia.io.protobuf3.Singlepart.Column> values) {
        copyOnWrite();
        instance.addAllColumns(values);
        return this;
      }
      /**
       * <pre>
       * Raw data in sequence. Type is determined by keys.
       * </pre>
       *
       * <code>repeated .Column columns = 7;</code>
       */
      public Builder clearColumns() {
        copyOnWrite();
        instance.clearColumns();
        return this;
      }
      /**
       * <pre>
       * Raw data in sequence. Type is determined by keys.
       * </pre>
       *
       * <code>repeated .Column columns = 7;</code>
       */
      public Builder removeColumns(int index) {
        copyOnWrite();
        instance.removeColumns(index);
        return this;
      }

      /**
       * <pre>
       * List of set indicies, determines which set to use when decoding a single node.
       * </pre>
       *
       * <code>repeated sint32 stream = 8 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getStreamList() {
        return java.util.Collections.unmodifiableList(
            instance.getStreamList());
      }
      /**
       * <pre>
       * List of set indicies, determines which set to use when decoding a single node.
       * </pre>
       *
       * <code>repeated sint32 stream = 8 [packed = true];</code>
       */
      public int getStreamCount() {
        return instance.getStreamCount();
      }
      /**
       * <pre>
       * List of set indicies, determines which set to use when decoding a single node.
       * </pre>
       *
       * <code>repeated sint32 stream = 8 [packed = true];</code>
       */
      public int getStream(int index) {
        return instance.getStream(index);
      }
      /**
       * <pre>
       * List of set indicies, determines which set to use when decoding a single node.
       * </pre>
       *
       * <code>repeated sint32 stream = 8 [packed = true];</code>
       */
      public Builder setStream(
          int index, int value) {
        copyOnWrite();
        instance.setStream(index, value);
        return this;
      }
      /**
       * <pre>
       * List of set indicies, determines which set to use when decoding a single node.
       * </pre>
       *
       * <code>repeated sint32 stream = 8 [packed = true];</code>
       */
      public Builder addStream(int value) {
        copyOnWrite();
        instance.addStream(value);
        return this;
      }
      /**
       * <pre>
       * List of set indicies, determines which set to use when decoding a single node.
       * </pre>
       *
       * <code>repeated sint32 stream = 8 [packed = true];</code>
       */
      public Builder addAllStream(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllStream(values);
        return this;
      }
      /**
       * <pre>
       * List of set indicies, determines which set to use when decoding a single node.
       * </pre>
       *
       * <code>repeated sint32 stream = 8 [packed = true];</code>
       */
      public Builder clearStream() {
        copyOnWrite();
        instance.clearStream();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Nodes)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new se.lth.cs.docforia.io.protobuf3.Singlepart.Nodes();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          variants_.makeImmutable();
          numentries_.makeImmutable();
          sets_.makeImmutable();
          keys_.makeImmutable();
          columns_.makeImmutable();
          stream_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          se.lth.cs.docforia.io.protobuf3.Singlepart.Nodes other = (se.lth.cs.docforia.io.protobuf3.Singlepart.Nodes) arg1;
          variants_= visitor.visitList(variants_, other.variants_);
          numentries_= visitor.visitIntList(numentries_, other.numentries_);
          sets_= visitor.visitList(sets_, other.sets_);
          keys_= visitor.visitList(keys_, other.keys_);
          columns_= visitor.visitList(columns_, other.columns_);
          stream_= visitor.visitIntList(stream_, other.stream_);
          switch (other.getKeyCase()) {
            case BUILTIN: {
              key_ = visitor.visitOneofInt(
                 keyCase_ == 1, key_, other.key_);
              break;
            }
            case NAME: {
              key_ = visitor.visitOneofString(
                 keyCase_ == 2, key_, other.key_);
              break;
            }
            case KEY_NOT_SET: {
              visitor.visitOneofNotSet(keyCase_ != 0);
              break;
            }
          }
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            if (other.keyCase_ != 0) {
              keyCase_ = other.keyCase_;
            }
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();
                  keyCase_ = 1;
                  key_ = rawValue;
                  break;
                }
                case 18: {
                  String s = input.readStringRequireUtf8();
                  keyCase_ = 2;
                  key_ = s;
                  break;
                }
                case 26: {
                  String s = input.readStringRequireUtf8();
                  if (!variants_.isModifiable()) {
                    variants_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(variants_);
                  }
                  variants_.add(s);
                  break;
                }
                case 32: {
                  if (!numentries_.isModifiable()) {
                    numentries_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(numentries_);
                  }
                  numentries_.addInt(input.readUInt32());
                  break;
                }
                case 34: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!numentries_.isModifiable() && input.getBytesUntilLimit() > 0) {
                    numentries_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(numentries_);
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    numentries_.addInt(input.readUInt32());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 42: {
                  if (!sets_.isModifiable()) {
                    sets_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(sets_);
                  }
                  sets_.add(
                      input.readMessage(se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet.parser(), extensionRegistry));
                  break;
                }
                case 50: {
                  if (!keys_.isModifiable()) {
                    keys_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(keys_);
                  }
                  keys_.add(
                      input.readMessage(se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey.parser(), extensionRegistry));
                  break;
                }
                case 58: {
                  if (!columns_.isModifiable()) {
                    columns_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(columns_);
                  }
                  columns_.add(
                      input.readMessage(se.lth.cs.docforia.io.protobuf3.Singlepart.Column.parser(), extensionRegistry));
                  break;
                }
                case 64: {
                  if (!stream_.isModifiable()) {
                    stream_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(stream_);
                  }
                  stream_.addInt(input.readSInt32());
                  break;
                }
                case 66: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!stream_.isModifiable() && input.getBytesUntilLimit() > 0) {
                    stream_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(stream_);
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    stream_.addInt(input.readSInt32());
                  }
                  input.popLimit(limit);
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (se.lth.cs.docforia.io.protobuf3.Singlepart.Nodes.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:Nodes)
    private static final se.lth.cs.docforia.io.protobuf3.Singlepart.Nodes DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Nodes();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static se.lth.cs.docforia.io.protobuf3.Singlepart.Nodes getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Nodes> PARSER;

    public static com.google.protobuf.Parser<Nodes> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EdgesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Edges)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .Edges.EdgeTypes builtin = 1;</code>
     */
    int getBuiltinValue();
    /**
     * <code>optional .Edges.EdgeTypes builtin = 1;</code>
     */
    se.lth.cs.docforia.io.protobuf3.Singlepart.Edges.EdgeTypes getBuiltin();

    /**
     * <code>optional string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>repeated string variants = 3;</code>
     */
    java.util.List<String>
        getVariantsList();
    /**
     * <code>repeated string variants = 3;</code>
     */
    int getVariantsCount();
    /**
     * <code>repeated string variants = 3;</code>
     */
    java.lang.String getVariants(int index);
    /**
     * <code>repeated string variants = 3;</code>
     */
    com.google.protobuf.ByteString
        getVariantsBytes(int index);

    /**
     * <code>repeated uint32 numentries = 4 [packed = true];</code>
     */
    java.util.List<java.lang.Integer> getNumentriesList();
    /**
     * <code>repeated uint32 numentries = 4 [packed = true];</code>
     */
    int getNumentriesCount();
    /**
     * <code>repeated uint32 numentries = 4 [packed = true];</code>
     */
    int getNumentries(int index);

    /**
     * <pre>
     * List of property sets, indicies corresponds to columns index.
     * </pre>
     *
     * <code>repeated .PropertySet sets = 5;</code>
     */
    java.util.List<se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet> 
        getSetsList();
    /**
     * <pre>
     * List of property sets, indicies corresponds to columns index.
     * </pre>
     *
     * <code>repeated .PropertySet sets = 5;</code>
     */
    se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet getSets(int index);
    /**
     * <pre>
     * List of property sets, indicies corresponds to columns index.
     * </pre>
     *
     * <code>repeated .PropertySet sets = 5;</code>
     */
    int getSetsCount();

    /**
     * <code>repeated .PropertyKey keys = 6;</code>
     */
    java.util.List<se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey> 
        getKeysList();
    /**
     * <code>repeated .PropertyKey keys = 6;</code>
     */
    se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey getKeys(int index);
    /**
     * <code>repeated .PropertyKey keys = 6;</code>
     */
    int getKeysCount();

    /**
     * <pre>
     * Raw data in sequence. Type is determined by keys.
     * </pre>
     *
     * <code>repeated .Column columns = 7;</code>
     */
    java.util.List<se.lth.cs.docforia.io.protobuf3.Singlepart.Column> 
        getColumnsList();
    /**
     * <pre>
     * Raw data in sequence. Type is determined by keys.
     * </pre>
     *
     * <code>repeated .Column columns = 7;</code>
     */
    se.lth.cs.docforia.io.protobuf3.Singlepart.Column getColumns(int index);
    /**
     * <pre>
     * Raw data in sequence. Type is determined by keys.
     * </pre>
     *
     * <code>repeated .Column columns = 7;</code>
     */
    int getColumnsCount();

    public se.lth.cs.docforia.io.protobuf3.Singlepart.Edges.KeyCase getKeyCase();
  }
  /**
   * Protobuf type {@code Edges}
   */
  public  static final class Edges extends
      com.google.protobuf.GeneratedMessageLite<
          Edges, Edges.Builder> implements
      // @@protoc_insertion_point(message_implements:Edges)
      EdgesOrBuilder {
    private Edges() {
      variants_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
      numentries_ = emptyIntList();
      sets_ = emptyProtobufList();
      keys_ = emptyProtobufList();
      columns_ = emptyProtobufList();
    }
    /**
     * Protobuf enum {@code Edges.EdgeTypes}
     */
    public enum EdgeTypes
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>RELATIONSHIP = 0;</code>
       */
      RELATIONSHIP(0),
      /**
       * <code>DEPENDENCY_REL = 1;</code>
       */
      DEPENDENCY_REL(1),
      /**
       * <code>SEMANTIC_ROLE = 2;</code>
       */
      SEMANTIC_ROLE(2),
      /**
       * <code>AST_EDGE = 3;</code>
       */
      AST_EDGE(3),
      /**
       * <code>PARSE_TREE_EDGE = 4;</code>
       */
      PARSE_TREE_EDGE(4),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>RELATIONSHIP = 0;</code>
       */
      public static final int RELATIONSHIP_VALUE = 0;
      /**
       * <code>DEPENDENCY_REL = 1;</code>
       */
      public static final int DEPENDENCY_REL_VALUE = 1;
      /**
       * <code>SEMANTIC_ROLE = 2;</code>
       */
      public static final int SEMANTIC_ROLE_VALUE = 2;
      /**
       * <code>AST_EDGE = 3;</code>
       */
      public static final int AST_EDGE_VALUE = 3;
      /**
       * <code>PARSE_TREE_EDGE = 4;</code>
       */
      public static final int PARSE_TREE_EDGE_VALUE = 4;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static EdgeTypes valueOf(int value) {
        return forNumber(value);
      }

      public static EdgeTypes forNumber(int value) {
        switch (value) {
          case 0: return RELATIONSHIP;
          case 1: return DEPENDENCY_REL;
          case 2: return SEMANTIC_ROLE;
          case 3: return AST_EDGE;
          case 4: return PARSE_TREE_EDGE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EdgeTypes>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          EdgeTypes> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EdgeTypes>() {
              public EdgeTypes findValueByNumber(int number) {
                return EdgeTypes.forNumber(number);
              }
            };

      private final int value;

      private EdgeTypes(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:Edges.EdgeTypes)
    }

    private int bitField0_;
    private int keyCase_ = 0;
    private java.lang.Object key_;
    public enum KeyCase
        implements com.google.protobuf.Internal.EnumLite {
      BUILTIN(1),
      NAME(2),
      KEY_NOT_SET(0);
      private final int value;
      private KeyCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static KeyCase valueOf(int value) {
        return forNumber(value);
      }

      public static KeyCase forNumber(int value) {
        switch (value) {
          case 1: return BUILTIN;
          case 2: return NAME;
          case 0: return KEY_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public KeyCase
    getKeyCase() {
      return KeyCase.forNumber(
          keyCase_);
    }

    private void clearKey() {
      keyCase_ = 0;
      key_ = null;
    }

    public static final int BUILTIN_FIELD_NUMBER = 1;
    /**
     * <code>optional .Edges.EdgeTypes builtin = 1;</code>
     */
    public int getBuiltinValue() {
      if (keyCase_ == 1) {
        return (java.lang.Integer) key_;
      }
      return 0;
    }
    /**
     * <code>optional .Edges.EdgeTypes builtin = 1;</code>
     */
    public se.lth.cs.docforia.io.protobuf3.Singlepart.Edges.EdgeTypes getBuiltin() {
      if (keyCase_ == 1) {
        se.lth.cs.docforia.io.protobuf3.Singlepart.Edges.EdgeTypes result = se.lth.cs.docforia.io.protobuf3.Singlepart.Edges.EdgeTypes.forNumber((java.lang.Integer) key_);
        return result == null ? se.lth.cs.docforia.io.protobuf3.Singlepart.Edges.EdgeTypes.UNRECOGNIZED : result;
      }
      return se.lth.cs.docforia.io.protobuf3.Singlepart.Edges.EdgeTypes.RELATIONSHIP;
    }
    /**
     * <code>optional .Edges.EdgeTypes builtin = 1;</code>
     */
    private void setBuiltinValue(int value) {
      keyCase_ = 1;
      key_ = value;
    }
    /**
     * <code>optional .Edges.EdgeTypes builtin = 1;</code>
     */
    private void setBuiltin(se.lth.cs.docforia.io.protobuf3.Singlepart.Edges.EdgeTypes value) {
      if (value == null) {
        throw new NullPointerException();
      }
      keyCase_ = 1;
      key_ = value.getNumber();
    }
    /**
     * <code>optional .Edges.EdgeTypes builtin = 1;</code>
     */
    private void clearBuiltin() {
      if (keyCase_ == 1) {
        keyCase_ = 0;
        key_ = null;
      }
    }

    public static final int NAME_FIELD_NUMBER = 2;
    /**
     * <code>optional string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.String ref = "";
      if (keyCase_ == 2) {
        ref = (java.lang.String) key_;
      }
      return ref;
    }
    /**
     * <code>optional string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.String ref = "";
      if (keyCase_ == 2) {
        ref = (java.lang.String) key_;
      }
      return com.google.protobuf.ByteString.copyFromUtf8(ref);
    }
    /**
     * <code>optional string name = 2;</code>
     */
    private void setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  keyCase_ = 2;
      key_ = value;
    }
    /**
     * <code>optional string name = 2;</code>
     */
    private void clearName() {
      if (keyCase_ == 2) {
        keyCase_ = 0;
        key_ = null;
      }
    }
    /**
     * <code>optional string name = 2;</code>
     */
    private void setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      keyCase_ = 2;
      key_ = value.toStringUtf8();
    }

    public static final int VARIANTS_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.ProtobufList<String> variants_;
    /**
     * <code>repeated string variants = 3;</code>
     */
    public java.util.List<String> getVariantsList() {
      return variants_;
    }
    /**
     * <code>repeated string variants = 3;</code>
     */
    public int getVariantsCount() {
      return variants_.size();
    }
    /**
     * <code>repeated string variants = 3;</code>
     */
    public java.lang.String getVariants(int index) {
      return variants_.get(index);
    }
    /**
     * <code>repeated string variants = 3;</code>
     */
    public com.google.protobuf.ByteString
        getVariantsBytes(int index) {
      return com.google.protobuf.ByteString.copyFromUtf8(
          variants_.get(index));
    }
    private void ensureVariantsIsMutable() {
      if (!variants_.isModifiable()) {
        variants_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(variants_);
       }
    }
    /**
     * <code>repeated string variants = 3;</code>
     */
    private void setVariants(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureVariantsIsMutable();
      variants_.set(index, value);
    }
    /**
     * <code>repeated string variants = 3;</code>
     */
    private void addVariants(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureVariantsIsMutable();
      variants_.add(value);
    }
    /**
     * <code>repeated string variants = 3;</code>
     */
    private void addAllVariants(
        java.lang.Iterable<java.lang.String> values) {
      ensureVariantsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, variants_);
    }
    /**
     * <code>repeated string variants = 3;</code>
     */
    private void clearVariants() {
      variants_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
    }
    /**
     * <code>repeated string variants = 3;</code>
     */
    private void addVariantsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureVariantsIsMutable();
      variants_.add(value.toStringUtf8());
    }

    public static final int NUMENTRIES_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.IntList numentries_;
    /**
     * <code>repeated uint32 numentries = 4 [packed = true];</code>
     */
    public java.util.List<java.lang.Integer>
        getNumentriesList() {
      return numentries_;
    }
    /**
     * <code>repeated uint32 numentries = 4 [packed = true];</code>
     */
    public int getNumentriesCount() {
      return numentries_.size();
    }
    /**
     * <code>repeated uint32 numentries = 4 [packed = true];</code>
     */
    public int getNumentries(int index) {
      return numentries_.getInt(index);
    }
    private int numentriesMemoizedSerializedSize = -1;
    private void ensureNumentriesIsMutable() {
      if (!numentries_.isModifiable()) {
        numentries_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(numentries_);
       }
    }
    /**
     * <code>repeated uint32 numentries = 4 [packed = true];</code>
     */
    private void setNumentries(
        int index, int value) {
      ensureNumentriesIsMutable();
      numentries_.setInt(index, value);
    }
    /**
     * <code>repeated uint32 numentries = 4 [packed = true];</code>
     */
    private void addNumentries(int value) {
      ensureNumentriesIsMutable();
      numentries_.addInt(value);
    }
    /**
     * <code>repeated uint32 numentries = 4 [packed = true];</code>
     */
    private void addAllNumentries(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureNumentriesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, numentries_);
    }
    /**
     * <code>repeated uint32 numentries = 4 [packed = true];</code>
     */
    private void clearNumentries() {
      numentries_ = emptyIntList();
    }

    public static final int SETS_FIELD_NUMBER = 5;
    private com.google.protobuf.Internal.ProtobufList<se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet> sets_;
    /**
     * <pre>
     * List of property sets, indicies corresponds to columns index.
     * </pre>
     *
     * <code>repeated .PropertySet sets = 5;</code>
     */
    public java.util.List<se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet> getSetsList() {
      return sets_;
    }
    /**
     * <pre>
     * List of property sets, indicies corresponds to columns index.
     * </pre>
     *
     * <code>repeated .PropertySet sets = 5;</code>
     */
    public java.util.List<? extends se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySetOrBuilder> 
        getSetsOrBuilderList() {
      return sets_;
    }
    /**
     * <pre>
     * List of property sets, indicies corresponds to columns index.
     * </pre>
     *
     * <code>repeated .PropertySet sets = 5;</code>
     */
    public int getSetsCount() {
      return sets_.size();
    }
    /**
     * <pre>
     * List of property sets, indicies corresponds to columns index.
     * </pre>
     *
     * <code>repeated .PropertySet sets = 5;</code>
     */
    public se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet getSets(int index) {
      return sets_.get(index);
    }
    /**
     * <pre>
     * List of property sets, indicies corresponds to columns index.
     * </pre>
     *
     * <code>repeated .PropertySet sets = 5;</code>
     */
    public se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySetOrBuilder getSetsOrBuilder(
        int index) {
      return sets_.get(index);
    }
    private void ensureSetsIsMutable() {
      if (!sets_.isModifiable()) {
        sets_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(sets_);
       }
    }

    /**
     * <pre>
     * List of property sets, indicies corresponds to columns index.
     * </pre>
     *
     * <code>repeated .PropertySet sets = 5;</code>
     */
    private void setSets(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureSetsIsMutable();
      sets_.set(index, value);
    }
    /**
     * <pre>
     * List of property sets, indicies corresponds to columns index.
     * </pre>
     *
     * <code>repeated .PropertySet sets = 5;</code>
     */
    private void setSets(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet.Builder builderForValue) {
      ensureSetsIsMutable();
      sets_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     * List of property sets, indicies corresponds to columns index.
     * </pre>
     *
     * <code>repeated .PropertySet sets = 5;</code>
     */
    private void addSets(se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureSetsIsMutable();
      sets_.add(value);
    }
    /**
     * <pre>
     * List of property sets, indicies corresponds to columns index.
     * </pre>
     *
     * <code>repeated .PropertySet sets = 5;</code>
     */
    private void addSets(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureSetsIsMutable();
      sets_.add(index, value);
    }
    /**
     * <pre>
     * List of property sets, indicies corresponds to columns index.
     * </pre>
     *
     * <code>repeated .PropertySet sets = 5;</code>
     */
    private void addSets(
        se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet.Builder builderForValue) {
      ensureSetsIsMutable();
      sets_.add(builderForValue.build());
    }
    /**
     * <pre>
     * List of property sets, indicies corresponds to columns index.
     * </pre>
     *
     * <code>repeated .PropertySet sets = 5;</code>
     */
    private void addSets(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet.Builder builderForValue) {
      ensureSetsIsMutable();
      sets_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     * List of property sets, indicies corresponds to columns index.
     * </pre>
     *
     * <code>repeated .PropertySet sets = 5;</code>
     */
    private void addAllSets(
        java.lang.Iterable<? extends se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet> values) {
      ensureSetsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, sets_);
    }
    /**
     * <pre>
     * List of property sets, indicies corresponds to columns index.
     * </pre>
     *
     * <code>repeated .PropertySet sets = 5;</code>
     */
    private void clearSets() {
      sets_ = emptyProtobufList();
    }
    /**
     * <pre>
     * List of property sets, indicies corresponds to columns index.
     * </pre>
     *
     * <code>repeated .PropertySet sets = 5;</code>
     */
    private void removeSets(int index) {
      ensureSetsIsMutable();
      sets_.remove(index);
    }

    public static final int KEYS_FIELD_NUMBER = 6;
    private com.google.protobuf.Internal.ProtobufList<se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey> keys_;
    /**
     * <code>repeated .PropertyKey keys = 6;</code>
     */
    public java.util.List<se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey> getKeysList() {
      return keys_;
    }
    /**
     * <code>repeated .PropertyKey keys = 6;</code>
     */
    public java.util.List<? extends se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKeyOrBuilder> 
        getKeysOrBuilderList() {
      return keys_;
    }
    /**
     * <code>repeated .PropertyKey keys = 6;</code>
     */
    public int getKeysCount() {
      return keys_.size();
    }
    /**
     * <code>repeated .PropertyKey keys = 6;</code>
     */
    public se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey getKeys(int index) {
      return keys_.get(index);
    }
    /**
     * <code>repeated .PropertyKey keys = 6;</code>
     */
    public se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKeyOrBuilder getKeysOrBuilder(
        int index) {
      return keys_.get(index);
    }
    private void ensureKeysIsMutable() {
      if (!keys_.isModifiable()) {
        keys_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(keys_);
       }
    }

    /**
     * <code>repeated .PropertyKey keys = 6;</code>
     */
    private void setKeys(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureKeysIsMutable();
      keys_.set(index, value);
    }
    /**
     * <code>repeated .PropertyKey keys = 6;</code>
     */
    private void setKeys(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey.Builder builderForValue) {
      ensureKeysIsMutable();
      keys_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .PropertyKey keys = 6;</code>
     */
    private void addKeys(se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureKeysIsMutable();
      keys_.add(value);
    }
    /**
     * <code>repeated .PropertyKey keys = 6;</code>
     */
    private void addKeys(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureKeysIsMutable();
      keys_.add(index, value);
    }
    /**
     * <code>repeated .PropertyKey keys = 6;</code>
     */
    private void addKeys(
        se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey.Builder builderForValue) {
      ensureKeysIsMutable();
      keys_.add(builderForValue.build());
    }
    /**
     * <code>repeated .PropertyKey keys = 6;</code>
     */
    private void addKeys(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey.Builder builderForValue) {
      ensureKeysIsMutable();
      keys_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .PropertyKey keys = 6;</code>
     */
    private void addAllKeys(
        java.lang.Iterable<? extends se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey> values) {
      ensureKeysIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, keys_);
    }
    /**
     * <code>repeated .PropertyKey keys = 6;</code>
     */
    private void clearKeys() {
      keys_ = emptyProtobufList();
    }
    /**
     * <code>repeated .PropertyKey keys = 6;</code>
     */
    private void removeKeys(int index) {
      ensureKeysIsMutable();
      keys_.remove(index);
    }

    public static final int COLUMNS_FIELD_NUMBER = 7;
    private com.google.protobuf.Internal.ProtobufList<se.lth.cs.docforia.io.protobuf3.Singlepart.Column> columns_;
    /**
     * <pre>
     * Raw data in sequence. Type is determined by keys.
     * </pre>
     *
     * <code>repeated .Column columns = 7;</code>
     */
    public java.util.List<se.lth.cs.docforia.io.protobuf3.Singlepart.Column> getColumnsList() {
      return columns_;
    }
    /**
     * <pre>
     * Raw data in sequence. Type is determined by keys.
     * </pre>
     *
     * <code>repeated .Column columns = 7;</code>
     */
    public java.util.List<? extends se.lth.cs.docforia.io.protobuf3.Singlepart.ColumnOrBuilder> 
        getColumnsOrBuilderList() {
      return columns_;
    }
    /**
     * <pre>
     * Raw data in sequence. Type is determined by keys.
     * </pre>
     *
     * <code>repeated .Column columns = 7;</code>
     */
    public int getColumnsCount() {
      return columns_.size();
    }
    /**
     * <pre>
     * Raw data in sequence. Type is determined by keys.
     * </pre>
     *
     * <code>repeated .Column columns = 7;</code>
     */
    public se.lth.cs.docforia.io.protobuf3.Singlepart.Column getColumns(int index) {
      return columns_.get(index);
    }
    /**
     * <pre>
     * Raw data in sequence. Type is determined by keys.
     * </pre>
     *
     * <code>repeated .Column columns = 7;</code>
     */
    public se.lth.cs.docforia.io.protobuf3.Singlepart.ColumnOrBuilder getColumnsOrBuilder(
        int index) {
      return columns_.get(index);
    }
    private void ensureColumnsIsMutable() {
      if (!columns_.isModifiable()) {
        columns_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(columns_);
       }
    }

    /**
     * <pre>
     * Raw data in sequence. Type is determined by keys.
     * </pre>
     *
     * <code>repeated .Column columns = 7;</code>
     */
    private void setColumns(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.Column value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureColumnsIsMutable();
      columns_.set(index, value);
    }
    /**
     * <pre>
     * Raw data in sequence. Type is determined by keys.
     * </pre>
     *
     * <code>repeated .Column columns = 7;</code>
     */
    private void setColumns(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.Column.Builder builderForValue) {
      ensureColumnsIsMutable();
      columns_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     * Raw data in sequence. Type is determined by keys.
     * </pre>
     *
     * <code>repeated .Column columns = 7;</code>
     */
    private void addColumns(se.lth.cs.docforia.io.protobuf3.Singlepart.Column value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureColumnsIsMutable();
      columns_.add(value);
    }
    /**
     * <pre>
     * Raw data in sequence. Type is determined by keys.
     * </pre>
     *
     * <code>repeated .Column columns = 7;</code>
     */
    private void addColumns(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.Column value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureColumnsIsMutable();
      columns_.add(index, value);
    }
    /**
     * <pre>
     * Raw data in sequence. Type is determined by keys.
     * </pre>
     *
     * <code>repeated .Column columns = 7;</code>
     */
    private void addColumns(
        se.lth.cs.docforia.io.protobuf3.Singlepart.Column.Builder builderForValue) {
      ensureColumnsIsMutable();
      columns_.add(builderForValue.build());
    }
    /**
     * <pre>
     * Raw data in sequence. Type is determined by keys.
     * </pre>
     *
     * <code>repeated .Column columns = 7;</code>
     */
    private void addColumns(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.Column.Builder builderForValue) {
      ensureColumnsIsMutable();
      columns_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     * Raw data in sequence. Type is determined by keys.
     * </pre>
     *
     * <code>repeated .Column columns = 7;</code>
     */
    private void addAllColumns(
        java.lang.Iterable<? extends se.lth.cs.docforia.io.protobuf3.Singlepart.Column> values) {
      ensureColumnsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, columns_);
    }
    /**
     * <pre>
     * Raw data in sequence. Type is determined by keys.
     * </pre>
     *
     * <code>repeated .Column columns = 7;</code>
     */
    private void clearColumns() {
      columns_ = emptyProtobufList();
    }
    /**
     * <pre>
     * Raw data in sequence. Type is determined by keys.
     * </pre>
     *
     * <code>repeated .Column columns = 7;</code>
     */
    private void removeColumns(int index) {
      ensureColumnsIsMutable();
      columns_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (keyCase_ == 1) {
        output.writeEnum(1, ((java.lang.Integer) key_));
      }
      if (keyCase_ == 2) {
        output.writeString(2, getName());
      }
      for (int i = 0; i < variants_.size(); i++) {
        output.writeString(3, variants_.get(i));
      }
      if (getNumentriesList().size() > 0) {
        output.writeUInt32NoTag(34);
        output.writeUInt32NoTag(numentriesMemoizedSerializedSize);
      }
      for (int i = 0; i < numentries_.size(); i++) {
        output.writeUInt32NoTag(numentries_.getInt(i));
      }
      for (int i = 0; i < sets_.size(); i++) {
        output.writeMessage(5, sets_.get(i));
      }
      for (int i = 0; i < keys_.size(); i++) {
        output.writeMessage(6, keys_.get(i));
      }
      for (int i = 0; i < columns_.size(); i++) {
        output.writeMessage(7, columns_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (keyCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, ((java.lang.Integer) key_));
      }
      if (keyCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getName());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < variants_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(variants_.get(i));
        }
        size += dataSize;
        size += 1 * getVariantsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < numentries_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(numentries_.getInt(i));
        }
        size += dataSize;
        if (!getNumentriesList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        numentriesMemoizedSerializedSize = dataSize;
      }
      for (int i = 0; i < sets_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, sets_.get(i));
      }
      for (int i = 0; i < keys_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, keys_.get(i));
      }
      for (int i = 0; i < columns_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, columns_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static se.lth.cs.docforia.io.protobuf3.Singlepart.Edges parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.Edges parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.Edges parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.Edges parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.Edges parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.Edges parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.Edges parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.Edges parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.Edges parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.Edges parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(se.lth.cs.docforia.io.protobuf3.Singlepart.Edges prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code Edges}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          se.lth.cs.docforia.io.protobuf3.Singlepart.Edges, Builder> implements
        // @@protoc_insertion_point(builder_implements:Edges)
        se.lth.cs.docforia.io.protobuf3.Singlepart.EdgesOrBuilder {
      // Construct using se.lth.cs.docforia.io.protobuf3.Singlepart.Edges.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      public KeyCase
          getKeyCase() {
        return instance.getKeyCase();
      }

      public Builder clearKey() {
        copyOnWrite();
        instance.clearKey();
        return this;
      }


      /**
       * <code>optional .Edges.EdgeTypes builtin = 1;</code>
       */
      public int getBuiltinValue() {
        return instance.getBuiltinValue();
      }
      /**
       * <code>optional .Edges.EdgeTypes builtin = 1;</code>
       */
      public Builder setBuiltinValue(int value) {
        copyOnWrite();
        instance.setBuiltinValue(value);
        return this;
      }
      /**
       * <code>optional .Edges.EdgeTypes builtin = 1;</code>
       */
      public se.lth.cs.docforia.io.protobuf3.Singlepart.Edges.EdgeTypes getBuiltin() {
        return instance.getBuiltin();
      }
      /**
       * <code>optional .Edges.EdgeTypes builtin = 1;</code>
       */
      public Builder setBuiltin(se.lth.cs.docforia.io.protobuf3.Singlepart.Edges.EdgeTypes value) {
        copyOnWrite();
        instance.setBuiltin(value);
        return this;
      }
      /**
       * <code>optional .Edges.EdgeTypes builtin = 1;</code>
       */
      public Builder clearBuiltin() {
        copyOnWrite();
        instance.clearBuiltin();
        return this;
      }

      /**
       * <code>optional string name = 2;</code>
       */
      public java.lang.String getName() {
        return instance.getName();
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        return instance.getNameBytes();
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        copyOnWrite();
        instance.setName(value);
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder clearName() {
        copyOnWrite();
        instance.clearName();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setNameBytes(value);
        return this;
      }

      /**
       * <code>repeated string variants = 3;</code>
       */
      public java.util.List<String>
          getVariantsList() {
        return java.util.Collections.unmodifiableList(
            instance.getVariantsList());
      }
      /**
       * <code>repeated string variants = 3;</code>
       */
      public int getVariantsCount() {
        return instance.getVariantsCount();
      }
      /**
       * <code>repeated string variants = 3;</code>
       */
      public java.lang.String getVariants(int index) {
        return instance.getVariants(index);
      }
      /**
       * <code>repeated string variants = 3;</code>
       */
      public com.google.protobuf.ByteString
          getVariantsBytes(int index) {
        return instance.getVariantsBytes(index);
      }
      /**
       * <code>repeated string variants = 3;</code>
       */
      public Builder setVariants(
          int index, java.lang.String value) {
        copyOnWrite();
        instance.setVariants(index, value);
        return this;
      }
      /**
       * <code>repeated string variants = 3;</code>
       */
      public Builder addVariants(
          java.lang.String value) {
        copyOnWrite();
        instance.addVariants(value);
        return this;
      }
      /**
       * <code>repeated string variants = 3;</code>
       */
      public Builder addAllVariants(
          java.lang.Iterable<java.lang.String> values) {
        copyOnWrite();
        instance.addAllVariants(values);
        return this;
      }
      /**
       * <code>repeated string variants = 3;</code>
       */
      public Builder clearVariants() {
        copyOnWrite();
        instance.clearVariants();
        return this;
      }
      /**
       * <code>repeated string variants = 3;</code>
       */
      public Builder addVariantsBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.addVariantsBytes(value);
        return this;
      }

      /**
       * <code>repeated uint32 numentries = 4 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getNumentriesList() {
        return java.util.Collections.unmodifiableList(
            instance.getNumentriesList());
      }
      /**
       * <code>repeated uint32 numentries = 4 [packed = true];</code>
       */
      public int getNumentriesCount() {
        return instance.getNumentriesCount();
      }
      /**
       * <code>repeated uint32 numentries = 4 [packed = true];</code>
       */
      public int getNumentries(int index) {
        return instance.getNumentries(index);
      }
      /**
       * <code>repeated uint32 numentries = 4 [packed = true];</code>
       */
      public Builder setNumentries(
          int index, int value) {
        copyOnWrite();
        instance.setNumentries(index, value);
        return this;
      }
      /**
       * <code>repeated uint32 numentries = 4 [packed = true];</code>
       */
      public Builder addNumentries(int value) {
        copyOnWrite();
        instance.addNumentries(value);
        return this;
      }
      /**
       * <code>repeated uint32 numentries = 4 [packed = true];</code>
       */
      public Builder addAllNumentries(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllNumentries(values);
        return this;
      }
      /**
       * <code>repeated uint32 numentries = 4 [packed = true];</code>
       */
      public Builder clearNumentries() {
        copyOnWrite();
        instance.clearNumentries();
        return this;
      }

      /**
       * <pre>
       * List of property sets, indicies corresponds to columns index.
       * </pre>
       *
       * <code>repeated .PropertySet sets = 5;</code>
       */
      public java.util.List<se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet> getSetsList() {
        return java.util.Collections.unmodifiableList(
            instance.getSetsList());
      }
      /**
       * <pre>
       * List of property sets, indicies corresponds to columns index.
       * </pre>
       *
       * <code>repeated .PropertySet sets = 5;</code>
       */
      public int getSetsCount() {
        return instance.getSetsCount();
      }/**
       * <pre>
       * List of property sets, indicies corresponds to columns index.
       * </pre>
       *
       * <code>repeated .PropertySet sets = 5;</code>
       */
      public se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet getSets(int index) {
        return instance.getSets(index);
      }
      /**
       * <pre>
       * List of property sets, indicies corresponds to columns index.
       * </pre>
       *
       * <code>repeated .PropertySet sets = 5;</code>
       */
      public Builder setSets(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet value) {
        copyOnWrite();
        instance.setSets(index, value);
        return this;
      }
      /**
       * <pre>
       * List of property sets, indicies corresponds to columns index.
       * </pre>
       *
       * <code>repeated .PropertySet sets = 5;</code>
       */
      public Builder setSets(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet.Builder builderForValue) {
        copyOnWrite();
        instance.setSets(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * List of property sets, indicies corresponds to columns index.
       * </pre>
       *
       * <code>repeated .PropertySet sets = 5;</code>
       */
      public Builder addSets(se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet value) {
        copyOnWrite();
        instance.addSets(value);
        return this;
      }
      /**
       * <pre>
       * List of property sets, indicies corresponds to columns index.
       * </pre>
       *
       * <code>repeated .PropertySet sets = 5;</code>
       */
      public Builder addSets(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet value) {
        copyOnWrite();
        instance.addSets(index, value);
        return this;
      }
      /**
       * <pre>
       * List of property sets, indicies corresponds to columns index.
       * </pre>
       *
       * <code>repeated .PropertySet sets = 5;</code>
       */
      public Builder addSets(
          se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet.Builder builderForValue) {
        copyOnWrite();
        instance.addSets(builderForValue);
        return this;
      }
      /**
       * <pre>
       * List of property sets, indicies corresponds to columns index.
       * </pre>
       *
       * <code>repeated .PropertySet sets = 5;</code>
       */
      public Builder addSets(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet.Builder builderForValue) {
        copyOnWrite();
        instance.addSets(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * List of property sets, indicies corresponds to columns index.
       * </pre>
       *
       * <code>repeated .PropertySet sets = 5;</code>
       */
      public Builder addAllSets(
          java.lang.Iterable<? extends se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet> values) {
        copyOnWrite();
        instance.addAllSets(values);
        return this;
      }
      /**
       * <pre>
       * List of property sets, indicies corresponds to columns index.
       * </pre>
       *
       * <code>repeated .PropertySet sets = 5;</code>
       */
      public Builder clearSets() {
        copyOnWrite();
        instance.clearSets();
        return this;
      }
      /**
       * <pre>
       * List of property sets, indicies corresponds to columns index.
       * </pre>
       *
       * <code>repeated .PropertySet sets = 5;</code>
       */
      public Builder removeSets(int index) {
        copyOnWrite();
        instance.removeSets(index);
        return this;
      }

      /**
       * <code>repeated .PropertyKey keys = 6;</code>
       */
      public java.util.List<se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey> getKeysList() {
        return java.util.Collections.unmodifiableList(
            instance.getKeysList());
      }
      /**
       * <code>repeated .PropertyKey keys = 6;</code>
       */
      public int getKeysCount() {
        return instance.getKeysCount();
      }/**
       * <code>repeated .PropertyKey keys = 6;</code>
       */
      public se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey getKeys(int index) {
        return instance.getKeys(index);
      }
      /**
       * <code>repeated .PropertyKey keys = 6;</code>
       */
      public Builder setKeys(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey value) {
        copyOnWrite();
        instance.setKeys(index, value);
        return this;
      }
      /**
       * <code>repeated .PropertyKey keys = 6;</code>
       */
      public Builder setKeys(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey.Builder builderForValue) {
        copyOnWrite();
        instance.setKeys(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .PropertyKey keys = 6;</code>
       */
      public Builder addKeys(se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey value) {
        copyOnWrite();
        instance.addKeys(value);
        return this;
      }
      /**
       * <code>repeated .PropertyKey keys = 6;</code>
       */
      public Builder addKeys(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey value) {
        copyOnWrite();
        instance.addKeys(index, value);
        return this;
      }
      /**
       * <code>repeated .PropertyKey keys = 6;</code>
       */
      public Builder addKeys(
          se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey.Builder builderForValue) {
        copyOnWrite();
        instance.addKeys(builderForValue);
        return this;
      }
      /**
       * <code>repeated .PropertyKey keys = 6;</code>
       */
      public Builder addKeys(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey.Builder builderForValue) {
        copyOnWrite();
        instance.addKeys(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .PropertyKey keys = 6;</code>
       */
      public Builder addAllKeys(
          java.lang.Iterable<? extends se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey> values) {
        copyOnWrite();
        instance.addAllKeys(values);
        return this;
      }
      /**
       * <code>repeated .PropertyKey keys = 6;</code>
       */
      public Builder clearKeys() {
        copyOnWrite();
        instance.clearKeys();
        return this;
      }
      /**
       * <code>repeated .PropertyKey keys = 6;</code>
       */
      public Builder removeKeys(int index) {
        copyOnWrite();
        instance.removeKeys(index);
        return this;
      }

      /**
       * <pre>
       * Raw data in sequence. Type is determined by keys.
       * </pre>
       *
       * <code>repeated .Column columns = 7;</code>
       */
      public java.util.List<se.lth.cs.docforia.io.protobuf3.Singlepart.Column> getColumnsList() {
        return java.util.Collections.unmodifiableList(
            instance.getColumnsList());
      }
      /**
       * <pre>
       * Raw data in sequence. Type is determined by keys.
       * </pre>
       *
       * <code>repeated .Column columns = 7;</code>
       */
      public int getColumnsCount() {
        return instance.getColumnsCount();
      }/**
       * <pre>
       * Raw data in sequence. Type is determined by keys.
       * </pre>
       *
       * <code>repeated .Column columns = 7;</code>
       */
      public se.lth.cs.docforia.io.protobuf3.Singlepart.Column getColumns(int index) {
        return instance.getColumns(index);
      }
      /**
       * <pre>
       * Raw data in sequence. Type is determined by keys.
       * </pre>
       *
       * <code>repeated .Column columns = 7;</code>
       */
      public Builder setColumns(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.Column value) {
        copyOnWrite();
        instance.setColumns(index, value);
        return this;
      }
      /**
       * <pre>
       * Raw data in sequence. Type is determined by keys.
       * </pre>
       *
       * <code>repeated .Column columns = 7;</code>
       */
      public Builder setColumns(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.Column.Builder builderForValue) {
        copyOnWrite();
        instance.setColumns(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * Raw data in sequence. Type is determined by keys.
       * </pre>
       *
       * <code>repeated .Column columns = 7;</code>
       */
      public Builder addColumns(se.lth.cs.docforia.io.protobuf3.Singlepart.Column value) {
        copyOnWrite();
        instance.addColumns(value);
        return this;
      }
      /**
       * <pre>
       * Raw data in sequence. Type is determined by keys.
       * </pre>
       *
       * <code>repeated .Column columns = 7;</code>
       */
      public Builder addColumns(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.Column value) {
        copyOnWrite();
        instance.addColumns(index, value);
        return this;
      }
      /**
       * <pre>
       * Raw data in sequence. Type is determined by keys.
       * </pre>
       *
       * <code>repeated .Column columns = 7;</code>
       */
      public Builder addColumns(
          se.lth.cs.docforia.io.protobuf3.Singlepart.Column.Builder builderForValue) {
        copyOnWrite();
        instance.addColumns(builderForValue);
        return this;
      }
      /**
       * <pre>
       * Raw data in sequence. Type is determined by keys.
       * </pre>
       *
       * <code>repeated .Column columns = 7;</code>
       */
      public Builder addColumns(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.Column.Builder builderForValue) {
        copyOnWrite();
        instance.addColumns(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * Raw data in sequence. Type is determined by keys.
       * </pre>
       *
       * <code>repeated .Column columns = 7;</code>
       */
      public Builder addAllColumns(
          java.lang.Iterable<? extends se.lth.cs.docforia.io.protobuf3.Singlepart.Column> values) {
        copyOnWrite();
        instance.addAllColumns(values);
        return this;
      }
      /**
       * <pre>
       * Raw data in sequence. Type is determined by keys.
       * </pre>
       *
       * <code>repeated .Column columns = 7;</code>
       */
      public Builder clearColumns() {
        copyOnWrite();
        instance.clearColumns();
        return this;
      }
      /**
       * <pre>
       * Raw data in sequence. Type is determined by keys.
       * </pre>
       *
       * <code>repeated .Column columns = 7;</code>
       */
      public Builder removeColumns(int index) {
        copyOnWrite();
        instance.removeColumns(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Edges)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new se.lth.cs.docforia.io.protobuf3.Singlepart.Edges();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          variants_.makeImmutable();
          numentries_.makeImmutable();
          sets_.makeImmutable();
          keys_.makeImmutable();
          columns_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          se.lth.cs.docforia.io.protobuf3.Singlepart.Edges other = (se.lth.cs.docforia.io.protobuf3.Singlepart.Edges) arg1;
          variants_= visitor.visitList(variants_, other.variants_);
          numentries_= visitor.visitIntList(numentries_, other.numentries_);
          sets_= visitor.visitList(sets_, other.sets_);
          keys_= visitor.visitList(keys_, other.keys_);
          columns_= visitor.visitList(columns_, other.columns_);
          switch (other.getKeyCase()) {
            case BUILTIN: {
              key_ = visitor.visitOneofInt(
                 keyCase_ == 1, key_, other.key_);
              break;
            }
            case NAME: {
              key_ = visitor.visitOneofString(
                 keyCase_ == 2, key_, other.key_);
              break;
            }
            case KEY_NOT_SET: {
              visitor.visitOneofNotSet(keyCase_ != 0);
              break;
            }
          }
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            if (other.keyCase_ != 0) {
              keyCase_ = other.keyCase_;
            }
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();
                  keyCase_ = 1;
                  key_ = rawValue;
                  break;
                }
                case 18: {
                  String s = input.readStringRequireUtf8();
                  keyCase_ = 2;
                  key_ = s;
                  break;
                }
                case 26: {
                  String s = input.readStringRequireUtf8();
                  if (!variants_.isModifiable()) {
                    variants_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(variants_);
                  }
                  variants_.add(s);
                  break;
                }
                case 32: {
                  if (!numentries_.isModifiable()) {
                    numentries_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(numentries_);
                  }
                  numentries_.addInt(input.readUInt32());
                  break;
                }
                case 34: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!numentries_.isModifiable() && input.getBytesUntilLimit() > 0) {
                    numentries_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(numentries_);
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    numentries_.addInt(input.readUInt32());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 42: {
                  if (!sets_.isModifiable()) {
                    sets_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(sets_);
                  }
                  sets_.add(
                      input.readMessage(se.lth.cs.docforia.io.protobuf3.Singlepart.PropertySet.parser(), extensionRegistry));
                  break;
                }
                case 50: {
                  if (!keys_.isModifiable()) {
                    keys_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(keys_);
                  }
                  keys_.add(
                      input.readMessage(se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyKey.parser(), extensionRegistry));
                  break;
                }
                case 58: {
                  if (!columns_.isModifiable()) {
                    columns_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(columns_);
                  }
                  columns_.add(
                      input.readMessage(se.lth.cs.docforia.io.protobuf3.Singlepart.Column.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (se.lth.cs.docforia.io.protobuf3.Singlepart.Edges.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:Edges)
    private static final se.lth.cs.docforia.io.protobuf3.Singlepart.Edges DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Edges();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static se.lth.cs.docforia.io.protobuf3.Singlepart.Edges getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Edges> PARSER;

    public static com.google.protobuf.Parser<Edges> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ColumnOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Column)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>repeated bytes binaryValues = 1;</code>
     */
    java.util.List<com.google.protobuf.ByteString> getBinaryValuesList();
    /**
     * <code>repeated bytes binaryValues = 1;</code>
     */
    int getBinaryValuesCount();
    /**
     * <code>repeated bytes binaryValues = 1;</code>
     */
    com.google.protobuf.ByteString getBinaryValues(int index);

    /**
     * <code>repeated string stringValues = 2;</code>
     */
    java.util.List<String>
        getStringValuesList();
    /**
     * <code>repeated string stringValues = 2;</code>
     */
    int getStringValuesCount();
    /**
     * <code>repeated string stringValues = 2;</code>
     */
    java.lang.String getStringValues(int index);
    /**
     * <code>repeated string stringValues = 2;</code>
     */
    com.google.protobuf.ByteString
        getStringValuesBytes(int index);

    /**
     * <code>repeated bool boolValues = 3;</code>
     */
    java.util.List<java.lang.Boolean> getBoolValuesList();
    /**
     * <code>repeated bool boolValues = 3;</code>
     */
    int getBoolValuesCount();
    /**
     * <code>repeated bool boolValues = 3;</code>
     */
    boolean getBoolValues(int index);

    /**
     * <code>repeated sint32 intValues = 4 [packed = true];</code>
     */
    java.util.List<java.lang.Integer> getIntValuesList();
    /**
     * <code>repeated sint32 intValues = 4 [packed = true];</code>
     */
    int getIntValuesCount();
    /**
     * <code>repeated sint32 intValues = 4 [packed = true];</code>
     */
    int getIntValues(int index);

    /**
     * <code>repeated sint64 longValues = 5 [packed = true];</code>
     */
    java.util.List<java.lang.Long> getLongValuesList();
    /**
     * <code>repeated sint64 longValues = 5 [packed = true];</code>
     */
    int getLongValuesCount();
    /**
     * <code>repeated sint64 longValues = 5 [packed = true];</code>
     */
    long getLongValues(int index);

    /**
     * <code>repeated float floatValues = 6;</code>
     */
    java.util.List<java.lang.Float> getFloatValuesList();
    /**
     * <code>repeated float floatValues = 6;</code>
     */
    int getFloatValuesCount();
    /**
     * <code>repeated float floatValues = 6;</code>
     */
    float getFloatValues(int index);

    /**
     * <code>repeated double doubleValues = 7;</code>
     */
    java.util.List<java.lang.Double> getDoubleValuesList();
    /**
     * <code>repeated double doubleValues = 7;</code>
     */
    int getDoubleValuesCount();
    /**
     * <code>repeated double doubleValues = 7;</code>
     */
    double getDoubleValues(int index);

    /**
     * <code>repeated .Document docValues = 8;</code>
     */
    java.util.List<se.lth.cs.docforia.io.protobuf3.Singlepart.Document> 
        getDocValuesList();
    /**
     * <code>repeated .Document docValues = 8;</code>
     */
    se.lth.cs.docforia.io.protobuf3.Singlepart.Document getDocValues(int index);
    /**
     * <code>repeated .Document docValues = 8;</code>
     */
    int getDocValuesCount();

    /**
     * <code>repeated .PropertyMap propmapValues = 9;</code>
     */
    java.util.List<se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap> 
        getPropmapValuesList();
    /**
     * <code>repeated .PropertyMap propmapValues = 9;</code>
     */
    se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap getPropmapValues(int index);
    /**
     * <code>repeated .PropertyMap propmapValues = 9;</code>
     */
    int getPropmapValuesCount();

    /**
     * <pre>
     *In case of array values.
     * </pre>
     *
     * <code>repeated uint32 lengthInfo = 10 [packed = true];</code>
     */
    java.util.List<java.lang.Integer> getLengthInfoList();
    /**
     * <pre>
     *In case of array values.
     * </pre>
     *
     * <code>repeated uint32 lengthInfo = 10 [packed = true];</code>
     */
    int getLengthInfoCount();
    /**
     * <pre>
     *In case of array values.
     * </pre>
     *
     * <code>repeated uint32 lengthInfo = 10 [packed = true];</code>
     */
    int getLengthInfo(int index);
  }
  /**
   * Protobuf type {@code Column}
   */
  public  static final class Column extends
      com.google.protobuf.GeneratedMessageLite<
          Column, Column.Builder> implements
      // @@protoc_insertion_point(message_implements:Column)
      ColumnOrBuilder {
    private Column() {
      binaryValues_ = emptyProtobufList();
      stringValues_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
      boolValues_ = emptyBooleanList();
      intValues_ = emptyIntList();
      longValues_ = emptyLongList();
      floatValues_ = emptyFloatList();
      doubleValues_ = emptyDoubleList();
      docValues_ = emptyProtobufList();
      propmapValues_ = emptyProtobufList();
      lengthInfo_ = emptyIntList();
    }
    public static final int BINARYVALUES_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.ByteString> binaryValues_;
    /**
     * <code>repeated bytes binaryValues = 1;</code>
     */
    public java.util.List<com.google.protobuf.ByteString>
        getBinaryValuesList() {
      return binaryValues_;
    }
    /**
     * <code>repeated bytes binaryValues = 1;</code>
     */
    public int getBinaryValuesCount() {
      return binaryValues_.size();
    }
    /**
     * <code>repeated bytes binaryValues = 1;</code>
     */
    public com.google.protobuf.ByteString getBinaryValues(int index) {
      return binaryValues_.get(index);
    }
    private void ensureBinaryValuesIsMutable() {
      if (!binaryValues_.isModifiable()) {
        binaryValues_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(binaryValues_);
       }
    }
    /**
     * <code>repeated bytes binaryValues = 1;</code>
     */
    private void setBinaryValues(
        int index, com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureBinaryValuesIsMutable();
      binaryValues_.set(index, value);
    }
    /**
     * <code>repeated bytes binaryValues = 1;</code>
     */
    private void addBinaryValues(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureBinaryValuesIsMutable();
      binaryValues_.add(value);
    }
    /**
     * <code>repeated bytes binaryValues = 1;</code>
     */
    private void addAllBinaryValues(
        java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
      ensureBinaryValuesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, binaryValues_);
    }
    /**
     * <code>repeated bytes binaryValues = 1;</code>
     */
    private void clearBinaryValues() {
      binaryValues_ = emptyProtobufList();
    }

    public static final int STRINGVALUES_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<String> stringValues_;
    /**
     * <code>repeated string stringValues = 2;</code>
     */
    public java.util.List<String> getStringValuesList() {
      return stringValues_;
    }
    /**
     * <code>repeated string stringValues = 2;</code>
     */
    public int getStringValuesCount() {
      return stringValues_.size();
    }
    /**
     * <code>repeated string stringValues = 2;</code>
     */
    public java.lang.String getStringValues(int index) {
      return stringValues_.get(index);
    }
    /**
     * <code>repeated string stringValues = 2;</code>
     */
    public com.google.protobuf.ByteString
        getStringValuesBytes(int index) {
      return com.google.protobuf.ByteString.copyFromUtf8(
          stringValues_.get(index));
    }
    private void ensureStringValuesIsMutable() {
      if (!stringValues_.isModifiable()) {
        stringValues_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(stringValues_);
       }
    }
    /**
     * <code>repeated string stringValues = 2;</code>
     */
    private void setStringValues(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureStringValuesIsMutable();
      stringValues_.set(index, value);
    }
    /**
     * <code>repeated string stringValues = 2;</code>
     */
    private void addStringValues(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureStringValuesIsMutable();
      stringValues_.add(value);
    }
    /**
     * <code>repeated string stringValues = 2;</code>
     */
    private void addAllStringValues(
        java.lang.Iterable<java.lang.String> values) {
      ensureStringValuesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, stringValues_);
    }
    /**
     * <code>repeated string stringValues = 2;</code>
     */
    private void clearStringValues() {
      stringValues_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
    }
    /**
     * <code>repeated string stringValues = 2;</code>
     */
    private void addStringValuesBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureStringValuesIsMutable();
      stringValues_.add(value.toStringUtf8());
    }

    public static final int BOOLVALUES_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.BooleanList boolValues_;
    /**
     * <code>repeated bool boolValues = 3;</code>
     */
    public java.util.List<java.lang.Boolean>
        getBoolValuesList() {
      return boolValues_;
    }
    /**
     * <code>repeated bool boolValues = 3;</code>
     */
    public int getBoolValuesCount() {
      return boolValues_.size();
    }
    /**
     * <code>repeated bool boolValues = 3;</code>
     */
    public boolean getBoolValues(int index) {
      return boolValues_.getBoolean(index);
    }
    private void ensureBoolValuesIsMutable() {
      if (!boolValues_.isModifiable()) {
        boolValues_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(boolValues_);
       }
    }
    /**
     * <code>repeated bool boolValues = 3;</code>
     */
    private void setBoolValues(
        int index, boolean value) {
      ensureBoolValuesIsMutable();
      boolValues_.setBoolean(index, value);
    }
    /**
     * <code>repeated bool boolValues = 3;</code>
     */
    private void addBoolValues(boolean value) {
      ensureBoolValuesIsMutable();
      boolValues_.addBoolean(value);
    }
    /**
     * <code>repeated bool boolValues = 3;</code>
     */
    private void addAllBoolValues(
        java.lang.Iterable<? extends java.lang.Boolean> values) {
      ensureBoolValuesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, boolValues_);
    }
    /**
     * <code>repeated bool boolValues = 3;</code>
     */
    private void clearBoolValues() {
      boolValues_ = emptyBooleanList();
    }

    public static final int INTVALUES_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.IntList intValues_;
    /**
     * <code>repeated sint32 intValues = 4 [packed = true];</code>
     */
    public java.util.List<java.lang.Integer>
        getIntValuesList() {
      return intValues_;
    }
    /**
     * <code>repeated sint32 intValues = 4 [packed = true];</code>
     */
    public int getIntValuesCount() {
      return intValues_.size();
    }
    /**
     * <code>repeated sint32 intValues = 4 [packed = true];</code>
     */
    public int getIntValues(int index) {
      return intValues_.getInt(index);
    }
    private int intValuesMemoizedSerializedSize = -1;
    private void ensureIntValuesIsMutable() {
      if (!intValues_.isModifiable()) {
        intValues_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(intValues_);
       }
    }
    /**
     * <code>repeated sint32 intValues = 4 [packed = true];</code>
     */
    private void setIntValues(
        int index, int value) {
      ensureIntValuesIsMutable();
      intValues_.setInt(index, value);
    }
    /**
     * <code>repeated sint32 intValues = 4 [packed = true];</code>
     */
    private void addIntValues(int value) {
      ensureIntValuesIsMutable();
      intValues_.addInt(value);
    }
    /**
     * <code>repeated sint32 intValues = 4 [packed = true];</code>
     */
    private void addAllIntValues(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureIntValuesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, intValues_);
    }
    /**
     * <code>repeated sint32 intValues = 4 [packed = true];</code>
     */
    private void clearIntValues() {
      intValues_ = emptyIntList();
    }

    public static final int LONGVALUES_FIELD_NUMBER = 5;
    private com.google.protobuf.Internal.LongList longValues_;
    /**
     * <code>repeated sint64 longValues = 5 [packed = true];</code>
     */
    public java.util.List<java.lang.Long>
        getLongValuesList() {
      return longValues_;
    }
    /**
     * <code>repeated sint64 longValues = 5 [packed = true];</code>
     */
    public int getLongValuesCount() {
      return longValues_.size();
    }
    /**
     * <code>repeated sint64 longValues = 5 [packed = true];</code>
     */
    public long getLongValues(int index) {
      return longValues_.getLong(index);
    }
    private int longValuesMemoizedSerializedSize = -1;
    private void ensureLongValuesIsMutable() {
      if (!longValues_.isModifiable()) {
        longValues_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(longValues_);
       }
    }
    /**
     * <code>repeated sint64 longValues = 5 [packed = true];</code>
     */
    private void setLongValues(
        int index, long value) {
      ensureLongValuesIsMutable();
      longValues_.setLong(index, value);
    }
    /**
     * <code>repeated sint64 longValues = 5 [packed = true];</code>
     */
    private void addLongValues(long value) {
      ensureLongValuesIsMutable();
      longValues_.addLong(value);
    }
    /**
     * <code>repeated sint64 longValues = 5 [packed = true];</code>
     */
    private void addAllLongValues(
        java.lang.Iterable<? extends java.lang.Long> values) {
      ensureLongValuesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, longValues_);
    }
    /**
     * <code>repeated sint64 longValues = 5 [packed = true];</code>
     */
    private void clearLongValues() {
      longValues_ = emptyLongList();
    }

    public static final int FLOATVALUES_FIELD_NUMBER = 6;
    private com.google.protobuf.Internal.FloatList floatValues_;
    /**
     * <code>repeated float floatValues = 6;</code>
     */
    public java.util.List<java.lang.Float>
        getFloatValuesList() {
      return floatValues_;
    }
    /**
     * <code>repeated float floatValues = 6;</code>
     */
    public int getFloatValuesCount() {
      return floatValues_.size();
    }
    /**
     * <code>repeated float floatValues = 6;</code>
     */
    public float getFloatValues(int index) {
      return floatValues_.getFloat(index);
    }
    private void ensureFloatValuesIsMutable() {
      if (!floatValues_.isModifiable()) {
        floatValues_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(floatValues_);
       }
    }
    /**
     * <code>repeated float floatValues = 6;</code>
     */
    private void setFloatValues(
        int index, float value) {
      ensureFloatValuesIsMutable();
      floatValues_.setFloat(index, value);
    }
    /**
     * <code>repeated float floatValues = 6;</code>
     */
    private void addFloatValues(float value) {
      ensureFloatValuesIsMutable();
      floatValues_.addFloat(value);
    }
    /**
     * <code>repeated float floatValues = 6;</code>
     */
    private void addAllFloatValues(
        java.lang.Iterable<? extends java.lang.Float> values) {
      ensureFloatValuesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, floatValues_);
    }
    /**
     * <code>repeated float floatValues = 6;</code>
     */
    private void clearFloatValues() {
      floatValues_ = emptyFloatList();
    }

    public static final int DOUBLEVALUES_FIELD_NUMBER = 7;
    private com.google.protobuf.Internal.DoubleList doubleValues_;
    /**
     * <code>repeated double doubleValues = 7;</code>
     */
    public java.util.List<java.lang.Double>
        getDoubleValuesList() {
      return doubleValues_;
    }
    /**
     * <code>repeated double doubleValues = 7;</code>
     */
    public int getDoubleValuesCount() {
      return doubleValues_.size();
    }
    /**
     * <code>repeated double doubleValues = 7;</code>
     */
    public double getDoubleValues(int index) {
      return doubleValues_.getDouble(index);
    }
    private void ensureDoubleValuesIsMutable() {
      if (!doubleValues_.isModifiable()) {
        doubleValues_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(doubleValues_);
       }
    }
    /**
     * <code>repeated double doubleValues = 7;</code>
     */
    private void setDoubleValues(
        int index, double value) {
      ensureDoubleValuesIsMutable();
      doubleValues_.setDouble(index, value);
    }
    /**
     * <code>repeated double doubleValues = 7;</code>
     */
    private void addDoubleValues(double value) {
      ensureDoubleValuesIsMutable();
      doubleValues_.addDouble(value);
    }
    /**
     * <code>repeated double doubleValues = 7;</code>
     */
    private void addAllDoubleValues(
        java.lang.Iterable<? extends java.lang.Double> values) {
      ensureDoubleValuesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, doubleValues_);
    }
    /**
     * <code>repeated double doubleValues = 7;</code>
     */
    private void clearDoubleValues() {
      doubleValues_ = emptyDoubleList();
    }

    public static final int DOCVALUES_FIELD_NUMBER = 8;
    private com.google.protobuf.Internal.ProtobufList<se.lth.cs.docforia.io.protobuf3.Singlepart.Document> docValues_;
    /**
     * <code>repeated .Document docValues = 8;</code>
     */
    public java.util.List<se.lth.cs.docforia.io.protobuf3.Singlepart.Document> getDocValuesList() {
      return docValues_;
    }
    /**
     * <code>repeated .Document docValues = 8;</code>
     */
    public java.util.List<? extends se.lth.cs.docforia.io.protobuf3.Singlepart.DocumentOrBuilder> 
        getDocValuesOrBuilderList() {
      return docValues_;
    }
    /**
     * <code>repeated .Document docValues = 8;</code>
     */
    public int getDocValuesCount() {
      return docValues_.size();
    }
    /**
     * <code>repeated .Document docValues = 8;</code>
     */
    public se.lth.cs.docforia.io.protobuf3.Singlepart.Document getDocValues(int index) {
      return docValues_.get(index);
    }
    /**
     * <code>repeated .Document docValues = 8;</code>
     */
    public se.lth.cs.docforia.io.protobuf3.Singlepart.DocumentOrBuilder getDocValuesOrBuilder(
        int index) {
      return docValues_.get(index);
    }
    private void ensureDocValuesIsMutable() {
      if (!docValues_.isModifiable()) {
        docValues_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(docValues_);
       }
    }

    /**
     * <code>repeated .Document docValues = 8;</code>
     */
    private void setDocValues(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.Document value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureDocValuesIsMutable();
      docValues_.set(index, value);
    }
    /**
     * <code>repeated .Document docValues = 8;</code>
     */
    private void setDocValues(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.Document.Builder builderForValue) {
      ensureDocValuesIsMutable();
      docValues_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .Document docValues = 8;</code>
     */
    private void addDocValues(se.lth.cs.docforia.io.protobuf3.Singlepart.Document value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureDocValuesIsMutable();
      docValues_.add(value);
    }
    /**
     * <code>repeated .Document docValues = 8;</code>
     */
    private void addDocValues(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.Document value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureDocValuesIsMutable();
      docValues_.add(index, value);
    }
    /**
     * <code>repeated .Document docValues = 8;</code>
     */
    private void addDocValues(
        se.lth.cs.docforia.io.protobuf3.Singlepart.Document.Builder builderForValue) {
      ensureDocValuesIsMutable();
      docValues_.add(builderForValue.build());
    }
    /**
     * <code>repeated .Document docValues = 8;</code>
     */
    private void addDocValues(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.Document.Builder builderForValue) {
      ensureDocValuesIsMutable();
      docValues_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .Document docValues = 8;</code>
     */
    private void addAllDocValues(
        java.lang.Iterable<? extends se.lth.cs.docforia.io.protobuf3.Singlepart.Document> values) {
      ensureDocValuesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, docValues_);
    }
    /**
     * <code>repeated .Document docValues = 8;</code>
     */
    private void clearDocValues() {
      docValues_ = emptyProtobufList();
    }
    /**
     * <code>repeated .Document docValues = 8;</code>
     */
    private void removeDocValues(int index) {
      ensureDocValuesIsMutable();
      docValues_.remove(index);
    }

    public static final int PROPMAPVALUES_FIELD_NUMBER = 9;
    private com.google.protobuf.Internal.ProtobufList<se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap> propmapValues_;
    /**
     * <code>repeated .PropertyMap propmapValues = 9;</code>
     */
    public java.util.List<se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap> getPropmapValuesList() {
      return propmapValues_;
    }
    /**
     * <code>repeated .PropertyMap propmapValues = 9;</code>
     */
    public java.util.List<? extends se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMapOrBuilder> 
        getPropmapValuesOrBuilderList() {
      return propmapValues_;
    }
    /**
     * <code>repeated .PropertyMap propmapValues = 9;</code>
     */
    public int getPropmapValuesCount() {
      return propmapValues_.size();
    }
    /**
     * <code>repeated .PropertyMap propmapValues = 9;</code>
     */
    public se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap getPropmapValues(int index) {
      return propmapValues_.get(index);
    }
    /**
     * <code>repeated .PropertyMap propmapValues = 9;</code>
     */
    public se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMapOrBuilder getPropmapValuesOrBuilder(
        int index) {
      return propmapValues_.get(index);
    }
    private void ensurePropmapValuesIsMutable() {
      if (!propmapValues_.isModifiable()) {
        propmapValues_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(propmapValues_);
       }
    }

    /**
     * <code>repeated .PropertyMap propmapValues = 9;</code>
     */
    private void setPropmapValues(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePropmapValuesIsMutable();
      propmapValues_.set(index, value);
    }
    /**
     * <code>repeated .PropertyMap propmapValues = 9;</code>
     */
    private void setPropmapValues(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap.Builder builderForValue) {
      ensurePropmapValuesIsMutable();
      propmapValues_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .PropertyMap propmapValues = 9;</code>
     */
    private void addPropmapValues(se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePropmapValuesIsMutable();
      propmapValues_.add(value);
    }
    /**
     * <code>repeated .PropertyMap propmapValues = 9;</code>
     */
    private void addPropmapValues(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePropmapValuesIsMutable();
      propmapValues_.add(index, value);
    }
    /**
     * <code>repeated .PropertyMap propmapValues = 9;</code>
     */
    private void addPropmapValues(
        se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap.Builder builderForValue) {
      ensurePropmapValuesIsMutable();
      propmapValues_.add(builderForValue.build());
    }
    /**
     * <code>repeated .PropertyMap propmapValues = 9;</code>
     */
    private void addPropmapValues(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap.Builder builderForValue) {
      ensurePropmapValuesIsMutable();
      propmapValues_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .PropertyMap propmapValues = 9;</code>
     */
    private void addAllPropmapValues(
        java.lang.Iterable<? extends se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap> values) {
      ensurePropmapValuesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, propmapValues_);
    }
    /**
     * <code>repeated .PropertyMap propmapValues = 9;</code>
     */
    private void clearPropmapValues() {
      propmapValues_ = emptyProtobufList();
    }
    /**
     * <code>repeated .PropertyMap propmapValues = 9;</code>
     */
    private void removePropmapValues(int index) {
      ensurePropmapValuesIsMutable();
      propmapValues_.remove(index);
    }

    public static final int LENGTHINFO_FIELD_NUMBER = 10;
    private com.google.protobuf.Internal.IntList lengthInfo_;
    /**
     * <pre>
     *In case of array values.
     * </pre>
     *
     * <code>repeated uint32 lengthInfo = 10 [packed = true];</code>
     */
    public java.util.List<java.lang.Integer>
        getLengthInfoList() {
      return lengthInfo_;
    }
    /**
     * <pre>
     *In case of array values.
     * </pre>
     *
     * <code>repeated uint32 lengthInfo = 10 [packed = true];</code>
     */
    public int getLengthInfoCount() {
      return lengthInfo_.size();
    }
    /**
     * <pre>
     *In case of array values.
     * </pre>
     *
     * <code>repeated uint32 lengthInfo = 10 [packed = true];</code>
     */
    public int getLengthInfo(int index) {
      return lengthInfo_.getInt(index);
    }
    private int lengthInfoMemoizedSerializedSize = -1;
    private void ensureLengthInfoIsMutable() {
      if (!lengthInfo_.isModifiable()) {
        lengthInfo_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(lengthInfo_);
       }
    }
    /**
     * <pre>
     *In case of array values.
     * </pre>
     *
     * <code>repeated uint32 lengthInfo = 10 [packed = true];</code>
     */
    private void setLengthInfo(
        int index, int value) {
      ensureLengthInfoIsMutable();
      lengthInfo_.setInt(index, value);
    }
    /**
     * <pre>
     *In case of array values.
     * </pre>
     *
     * <code>repeated uint32 lengthInfo = 10 [packed = true];</code>
     */
    private void addLengthInfo(int value) {
      ensureLengthInfoIsMutable();
      lengthInfo_.addInt(value);
    }
    /**
     * <pre>
     *In case of array values.
     * </pre>
     *
     * <code>repeated uint32 lengthInfo = 10 [packed = true];</code>
     */
    private void addAllLengthInfo(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureLengthInfoIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, lengthInfo_);
    }
    /**
     * <pre>
     *In case of array values.
     * </pre>
     *
     * <code>repeated uint32 lengthInfo = 10 [packed = true];</code>
     */
    private void clearLengthInfo() {
      lengthInfo_ = emptyIntList();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < binaryValues_.size(); i++) {
        output.writeBytes(1, binaryValues_.get(i));
      }
      for (int i = 0; i < stringValues_.size(); i++) {
        output.writeString(2, stringValues_.get(i));
      }
      for (int i = 0; i < boolValues_.size(); i++) {
        output.writeBool(3, boolValues_.getBoolean(i));
      }
      if (getIntValuesList().size() > 0) {
        output.writeUInt32NoTag(34);
        output.writeUInt32NoTag(intValuesMemoizedSerializedSize);
      }
      for (int i = 0; i < intValues_.size(); i++) {
        output.writeSInt32NoTag(intValues_.getInt(i));
      }
      if (getLongValuesList().size() > 0) {
        output.writeUInt32NoTag(42);
        output.writeUInt32NoTag(longValuesMemoizedSerializedSize);
      }
      for (int i = 0; i < longValues_.size(); i++) {
        output.writeSInt64NoTag(longValues_.getLong(i));
      }
      for (int i = 0; i < floatValues_.size(); i++) {
        output.writeFloat(6, floatValues_.getFloat(i));
      }
      for (int i = 0; i < doubleValues_.size(); i++) {
        output.writeDouble(7, doubleValues_.getDouble(i));
      }
      for (int i = 0; i < docValues_.size(); i++) {
        output.writeMessage(8, docValues_.get(i));
      }
      for (int i = 0; i < propmapValues_.size(); i++) {
        output.writeMessage(9, propmapValues_.get(i));
      }
      if (getLengthInfoList().size() > 0) {
        output.writeUInt32NoTag(82);
        output.writeUInt32NoTag(lengthInfoMemoizedSerializedSize);
      }
      for (int i = 0; i < lengthInfo_.size(); i++) {
        output.writeUInt32NoTag(lengthInfo_.getInt(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < binaryValues_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(binaryValues_.get(i));
        }
        size += dataSize;
        size += 1 * getBinaryValuesList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < stringValues_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(stringValues_.get(i));
        }
        size += dataSize;
        size += 1 * getStringValuesList().size();
      }
      {
        int dataSize = 0;
        dataSize = 1 * getBoolValuesList().size();
        size += dataSize;
        size += 1 * getBoolValuesList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < intValues_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt32SizeNoTag(intValues_.getInt(i));
        }
        size += dataSize;
        if (!getIntValuesList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        intValuesMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < longValues_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt64SizeNoTag(longValues_.getLong(i));
        }
        size += dataSize;
        if (!getLongValuesList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        longValuesMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 4 * getFloatValuesList().size();
        size += dataSize;
        size += 1 * getFloatValuesList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getDoubleValuesList().size();
        size += dataSize;
        size += 1 * getDoubleValuesList().size();
      }
      for (int i = 0; i < docValues_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, docValues_.get(i));
      }
      for (int i = 0; i < propmapValues_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, propmapValues_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < lengthInfo_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(lengthInfo_.getInt(i));
        }
        size += dataSize;
        if (!getLengthInfoList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        lengthInfoMemoizedSerializedSize = dataSize;
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static se.lth.cs.docforia.io.protobuf3.Singlepart.Column parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.Column parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.Column parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.Column parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.Column parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.Column parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.Column parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.Column parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.Column parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.Column parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(se.lth.cs.docforia.io.protobuf3.Singlepart.Column prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code Column}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          se.lth.cs.docforia.io.protobuf3.Singlepart.Column, Builder> implements
        // @@protoc_insertion_point(builder_implements:Column)
        se.lth.cs.docforia.io.protobuf3.Singlepart.ColumnOrBuilder {
      // Construct using se.lth.cs.docforia.io.protobuf3.Singlepart.Column.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>repeated bytes binaryValues = 1;</code>
       */
      public java.util.List<com.google.protobuf.ByteString>
          getBinaryValuesList() {
        return java.util.Collections.unmodifiableList(
            instance.getBinaryValuesList());
      }
      /**
       * <code>repeated bytes binaryValues = 1;</code>
       */
      public int getBinaryValuesCount() {
        return instance.getBinaryValuesCount();
      }
      /**
       * <code>repeated bytes binaryValues = 1;</code>
       */
      public com.google.protobuf.ByteString getBinaryValues(int index) {
        return instance.getBinaryValues(index);
      }
      /**
       * <code>repeated bytes binaryValues = 1;</code>
       */
      public Builder setBinaryValues(
          int index, com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setBinaryValues(index, value);
        return this;
      }
      /**
       * <code>repeated bytes binaryValues = 1;</code>
       */
      public Builder addBinaryValues(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.addBinaryValues(value);
        return this;
      }
      /**
       * <code>repeated bytes binaryValues = 1;</code>
       */
      public Builder addAllBinaryValues(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        copyOnWrite();
        instance.addAllBinaryValues(values);
        return this;
      }
      /**
       * <code>repeated bytes binaryValues = 1;</code>
       */
      public Builder clearBinaryValues() {
        copyOnWrite();
        instance.clearBinaryValues();
        return this;
      }

      /**
       * <code>repeated string stringValues = 2;</code>
       */
      public java.util.List<String>
          getStringValuesList() {
        return java.util.Collections.unmodifiableList(
            instance.getStringValuesList());
      }
      /**
       * <code>repeated string stringValues = 2;</code>
       */
      public int getStringValuesCount() {
        return instance.getStringValuesCount();
      }
      /**
       * <code>repeated string stringValues = 2;</code>
       */
      public java.lang.String getStringValues(int index) {
        return instance.getStringValues(index);
      }
      /**
       * <code>repeated string stringValues = 2;</code>
       */
      public com.google.protobuf.ByteString
          getStringValuesBytes(int index) {
        return instance.getStringValuesBytes(index);
      }
      /**
       * <code>repeated string stringValues = 2;</code>
       */
      public Builder setStringValues(
          int index, java.lang.String value) {
        copyOnWrite();
        instance.setStringValues(index, value);
        return this;
      }
      /**
       * <code>repeated string stringValues = 2;</code>
       */
      public Builder addStringValues(
          java.lang.String value) {
        copyOnWrite();
        instance.addStringValues(value);
        return this;
      }
      /**
       * <code>repeated string stringValues = 2;</code>
       */
      public Builder addAllStringValues(
          java.lang.Iterable<java.lang.String> values) {
        copyOnWrite();
        instance.addAllStringValues(values);
        return this;
      }
      /**
       * <code>repeated string stringValues = 2;</code>
       */
      public Builder clearStringValues() {
        copyOnWrite();
        instance.clearStringValues();
        return this;
      }
      /**
       * <code>repeated string stringValues = 2;</code>
       */
      public Builder addStringValuesBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.addStringValuesBytes(value);
        return this;
      }

      /**
       * <code>repeated bool boolValues = 3;</code>
       */
      public java.util.List<java.lang.Boolean>
          getBoolValuesList() {
        return java.util.Collections.unmodifiableList(
            instance.getBoolValuesList());
      }
      /**
       * <code>repeated bool boolValues = 3;</code>
       */
      public int getBoolValuesCount() {
        return instance.getBoolValuesCount();
      }
      /**
       * <code>repeated bool boolValues = 3;</code>
       */
      public boolean getBoolValues(int index) {
        return instance.getBoolValues(index);
      }
      /**
       * <code>repeated bool boolValues = 3;</code>
       */
      public Builder setBoolValues(
          int index, boolean value) {
        copyOnWrite();
        instance.setBoolValues(index, value);
        return this;
      }
      /**
       * <code>repeated bool boolValues = 3;</code>
       */
      public Builder addBoolValues(boolean value) {
        copyOnWrite();
        instance.addBoolValues(value);
        return this;
      }
      /**
       * <code>repeated bool boolValues = 3;</code>
       */
      public Builder addAllBoolValues(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        copyOnWrite();
        instance.addAllBoolValues(values);
        return this;
      }
      /**
       * <code>repeated bool boolValues = 3;</code>
       */
      public Builder clearBoolValues() {
        copyOnWrite();
        instance.clearBoolValues();
        return this;
      }

      /**
       * <code>repeated sint32 intValues = 4 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getIntValuesList() {
        return java.util.Collections.unmodifiableList(
            instance.getIntValuesList());
      }
      /**
       * <code>repeated sint32 intValues = 4 [packed = true];</code>
       */
      public int getIntValuesCount() {
        return instance.getIntValuesCount();
      }
      /**
       * <code>repeated sint32 intValues = 4 [packed = true];</code>
       */
      public int getIntValues(int index) {
        return instance.getIntValues(index);
      }
      /**
       * <code>repeated sint32 intValues = 4 [packed = true];</code>
       */
      public Builder setIntValues(
          int index, int value) {
        copyOnWrite();
        instance.setIntValues(index, value);
        return this;
      }
      /**
       * <code>repeated sint32 intValues = 4 [packed = true];</code>
       */
      public Builder addIntValues(int value) {
        copyOnWrite();
        instance.addIntValues(value);
        return this;
      }
      /**
       * <code>repeated sint32 intValues = 4 [packed = true];</code>
       */
      public Builder addAllIntValues(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllIntValues(values);
        return this;
      }
      /**
       * <code>repeated sint32 intValues = 4 [packed = true];</code>
       */
      public Builder clearIntValues() {
        copyOnWrite();
        instance.clearIntValues();
        return this;
      }

      /**
       * <code>repeated sint64 longValues = 5 [packed = true];</code>
       */
      public java.util.List<java.lang.Long>
          getLongValuesList() {
        return java.util.Collections.unmodifiableList(
            instance.getLongValuesList());
      }
      /**
       * <code>repeated sint64 longValues = 5 [packed = true];</code>
       */
      public int getLongValuesCount() {
        return instance.getLongValuesCount();
      }
      /**
       * <code>repeated sint64 longValues = 5 [packed = true];</code>
       */
      public long getLongValues(int index) {
        return instance.getLongValues(index);
      }
      /**
       * <code>repeated sint64 longValues = 5 [packed = true];</code>
       */
      public Builder setLongValues(
          int index, long value) {
        copyOnWrite();
        instance.setLongValues(index, value);
        return this;
      }
      /**
       * <code>repeated sint64 longValues = 5 [packed = true];</code>
       */
      public Builder addLongValues(long value) {
        copyOnWrite();
        instance.addLongValues(value);
        return this;
      }
      /**
       * <code>repeated sint64 longValues = 5 [packed = true];</code>
       */
      public Builder addAllLongValues(
          java.lang.Iterable<? extends java.lang.Long> values) {
        copyOnWrite();
        instance.addAllLongValues(values);
        return this;
      }
      /**
       * <code>repeated sint64 longValues = 5 [packed = true];</code>
       */
      public Builder clearLongValues() {
        copyOnWrite();
        instance.clearLongValues();
        return this;
      }

      /**
       * <code>repeated float floatValues = 6;</code>
       */
      public java.util.List<java.lang.Float>
          getFloatValuesList() {
        return java.util.Collections.unmodifiableList(
            instance.getFloatValuesList());
      }
      /**
       * <code>repeated float floatValues = 6;</code>
       */
      public int getFloatValuesCount() {
        return instance.getFloatValuesCount();
      }
      /**
       * <code>repeated float floatValues = 6;</code>
       */
      public float getFloatValues(int index) {
        return instance.getFloatValues(index);
      }
      /**
       * <code>repeated float floatValues = 6;</code>
       */
      public Builder setFloatValues(
          int index, float value) {
        copyOnWrite();
        instance.setFloatValues(index, value);
        return this;
      }
      /**
       * <code>repeated float floatValues = 6;</code>
       */
      public Builder addFloatValues(float value) {
        copyOnWrite();
        instance.addFloatValues(value);
        return this;
      }
      /**
       * <code>repeated float floatValues = 6;</code>
       */
      public Builder addAllFloatValues(
          java.lang.Iterable<? extends java.lang.Float> values) {
        copyOnWrite();
        instance.addAllFloatValues(values);
        return this;
      }
      /**
       * <code>repeated float floatValues = 6;</code>
       */
      public Builder clearFloatValues() {
        copyOnWrite();
        instance.clearFloatValues();
        return this;
      }

      /**
       * <code>repeated double doubleValues = 7;</code>
       */
      public java.util.List<java.lang.Double>
          getDoubleValuesList() {
        return java.util.Collections.unmodifiableList(
            instance.getDoubleValuesList());
      }
      /**
       * <code>repeated double doubleValues = 7;</code>
       */
      public int getDoubleValuesCount() {
        return instance.getDoubleValuesCount();
      }
      /**
       * <code>repeated double doubleValues = 7;</code>
       */
      public double getDoubleValues(int index) {
        return instance.getDoubleValues(index);
      }
      /**
       * <code>repeated double doubleValues = 7;</code>
       */
      public Builder setDoubleValues(
          int index, double value) {
        copyOnWrite();
        instance.setDoubleValues(index, value);
        return this;
      }
      /**
       * <code>repeated double doubleValues = 7;</code>
       */
      public Builder addDoubleValues(double value) {
        copyOnWrite();
        instance.addDoubleValues(value);
        return this;
      }
      /**
       * <code>repeated double doubleValues = 7;</code>
       */
      public Builder addAllDoubleValues(
          java.lang.Iterable<? extends java.lang.Double> values) {
        copyOnWrite();
        instance.addAllDoubleValues(values);
        return this;
      }
      /**
       * <code>repeated double doubleValues = 7;</code>
       */
      public Builder clearDoubleValues() {
        copyOnWrite();
        instance.clearDoubleValues();
        return this;
      }

      /**
       * <code>repeated .Document docValues = 8;</code>
       */
      public java.util.List<se.lth.cs.docforia.io.protobuf3.Singlepart.Document> getDocValuesList() {
        return java.util.Collections.unmodifiableList(
            instance.getDocValuesList());
      }
      /**
       * <code>repeated .Document docValues = 8;</code>
       */
      public int getDocValuesCount() {
        return instance.getDocValuesCount();
      }/**
       * <code>repeated .Document docValues = 8;</code>
       */
      public se.lth.cs.docforia.io.protobuf3.Singlepart.Document getDocValues(int index) {
        return instance.getDocValues(index);
      }
      /**
       * <code>repeated .Document docValues = 8;</code>
       */
      public Builder setDocValues(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.Document value) {
        copyOnWrite();
        instance.setDocValues(index, value);
        return this;
      }
      /**
       * <code>repeated .Document docValues = 8;</code>
       */
      public Builder setDocValues(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.Document.Builder builderForValue) {
        copyOnWrite();
        instance.setDocValues(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .Document docValues = 8;</code>
       */
      public Builder addDocValues(se.lth.cs.docforia.io.protobuf3.Singlepart.Document value) {
        copyOnWrite();
        instance.addDocValues(value);
        return this;
      }
      /**
       * <code>repeated .Document docValues = 8;</code>
       */
      public Builder addDocValues(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.Document value) {
        copyOnWrite();
        instance.addDocValues(index, value);
        return this;
      }
      /**
       * <code>repeated .Document docValues = 8;</code>
       */
      public Builder addDocValues(
          se.lth.cs.docforia.io.protobuf3.Singlepart.Document.Builder builderForValue) {
        copyOnWrite();
        instance.addDocValues(builderForValue);
        return this;
      }
      /**
       * <code>repeated .Document docValues = 8;</code>
       */
      public Builder addDocValues(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.Document.Builder builderForValue) {
        copyOnWrite();
        instance.addDocValues(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .Document docValues = 8;</code>
       */
      public Builder addAllDocValues(
          java.lang.Iterable<? extends se.lth.cs.docforia.io.protobuf3.Singlepart.Document> values) {
        copyOnWrite();
        instance.addAllDocValues(values);
        return this;
      }
      /**
       * <code>repeated .Document docValues = 8;</code>
       */
      public Builder clearDocValues() {
        copyOnWrite();
        instance.clearDocValues();
        return this;
      }
      /**
       * <code>repeated .Document docValues = 8;</code>
       */
      public Builder removeDocValues(int index) {
        copyOnWrite();
        instance.removeDocValues(index);
        return this;
      }

      /**
       * <code>repeated .PropertyMap propmapValues = 9;</code>
       */
      public java.util.List<se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap> getPropmapValuesList() {
        return java.util.Collections.unmodifiableList(
            instance.getPropmapValuesList());
      }
      /**
       * <code>repeated .PropertyMap propmapValues = 9;</code>
       */
      public int getPropmapValuesCount() {
        return instance.getPropmapValuesCount();
      }/**
       * <code>repeated .PropertyMap propmapValues = 9;</code>
       */
      public se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap getPropmapValues(int index) {
        return instance.getPropmapValues(index);
      }
      /**
       * <code>repeated .PropertyMap propmapValues = 9;</code>
       */
      public Builder setPropmapValues(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap value) {
        copyOnWrite();
        instance.setPropmapValues(index, value);
        return this;
      }
      /**
       * <code>repeated .PropertyMap propmapValues = 9;</code>
       */
      public Builder setPropmapValues(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap.Builder builderForValue) {
        copyOnWrite();
        instance.setPropmapValues(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .PropertyMap propmapValues = 9;</code>
       */
      public Builder addPropmapValues(se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap value) {
        copyOnWrite();
        instance.addPropmapValues(value);
        return this;
      }
      /**
       * <code>repeated .PropertyMap propmapValues = 9;</code>
       */
      public Builder addPropmapValues(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap value) {
        copyOnWrite();
        instance.addPropmapValues(index, value);
        return this;
      }
      /**
       * <code>repeated .PropertyMap propmapValues = 9;</code>
       */
      public Builder addPropmapValues(
          se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap.Builder builderForValue) {
        copyOnWrite();
        instance.addPropmapValues(builderForValue);
        return this;
      }
      /**
       * <code>repeated .PropertyMap propmapValues = 9;</code>
       */
      public Builder addPropmapValues(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap.Builder builderForValue) {
        copyOnWrite();
        instance.addPropmapValues(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .PropertyMap propmapValues = 9;</code>
       */
      public Builder addAllPropmapValues(
          java.lang.Iterable<? extends se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap> values) {
        copyOnWrite();
        instance.addAllPropmapValues(values);
        return this;
      }
      /**
       * <code>repeated .PropertyMap propmapValues = 9;</code>
       */
      public Builder clearPropmapValues() {
        copyOnWrite();
        instance.clearPropmapValues();
        return this;
      }
      /**
       * <code>repeated .PropertyMap propmapValues = 9;</code>
       */
      public Builder removePropmapValues(int index) {
        copyOnWrite();
        instance.removePropmapValues(index);
        return this;
      }

      /**
       * <pre>
       *In case of array values.
       * </pre>
       *
       * <code>repeated uint32 lengthInfo = 10 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getLengthInfoList() {
        return java.util.Collections.unmodifiableList(
            instance.getLengthInfoList());
      }
      /**
       * <pre>
       *In case of array values.
       * </pre>
       *
       * <code>repeated uint32 lengthInfo = 10 [packed = true];</code>
       */
      public int getLengthInfoCount() {
        return instance.getLengthInfoCount();
      }
      /**
       * <pre>
       *In case of array values.
       * </pre>
       *
       * <code>repeated uint32 lengthInfo = 10 [packed = true];</code>
       */
      public int getLengthInfo(int index) {
        return instance.getLengthInfo(index);
      }
      /**
       * <pre>
       *In case of array values.
       * </pre>
       *
       * <code>repeated uint32 lengthInfo = 10 [packed = true];</code>
       */
      public Builder setLengthInfo(
          int index, int value) {
        copyOnWrite();
        instance.setLengthInfo(index, value);
        return this;
      }
      /**
       * <pre>
       *In case of array values.
       * </pre>
       *
       * <code>repeated uint32 lengthInfo = 10 [packed = true];</code>
       */
      public Builder addLengthInfo(int value) {
        copyOnWrite();
        instance.addLengthInfo(value);
        return this;
      }
      /**
       * <pre>
       *In case of array values.
       * </pre>
       *
       * <code>repeated uint32 lengthInfo = 10 [packed = true];</code>
       */
      public Builder addAllLengthInfo(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllLengthInfo(values);
        return this;
      }
      /**
       * <pre>
       *In case of array values.
       * </pre>
       *
       * <code>repeated uint32 lengthInfo = 10 [packed = true];</code>
       */
      public Builder clearLengthInfo() {
        copyOnWrite();
        instance.clearLengthInfo();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Column)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new se.lth.cs.docforia.io.protobuf3.Singlepart.Column();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          binaryValues_.makeImmutable();
          stringValues_.makeImmutable();
          boolValues_.makeImmutable();
          intValues_.makeImmutable();
          longValues_.makeImmutable();
          floatValues_.makeImmutable();
          doubleValues_.makeImmutable();
          docValues_.makeImmutable();
          propmapValues_.makeImmutable();
          lengthInfo_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          se.lth.cs.docforia.io.protobuf3.Singlepart.Column other = (se.lth.cs.docforia.io.protobuf3.Singlepart.Column) arg1;
          binaryValues_= visitor.visitList(binaryValues_, other.binaryValues_);
          stringValues_= visitor.visitList(stringValues_, other.stringValues_);
          boolValues_= visitor.visitBooleanList(boolValues_, other.boolValues_);
          intValues_= visitor.visitIntList(intValues_, other.intValues_);
          longValues_= visitor.visitLongList(longValues_, other.longValues_);
          floatValues_= visitor.visitFloatList(floatValues_, other.floatValues_);
          doubleValues_= visitor.visitDoubleList(doubleValues_, other.doubleValues_);
          docValues_= visitor.visitList(docValues_, other.docValues_);
          propmapValues_= visitor.visitList(propmapValues_, other.propmapValues_);
          lengthInfo_= visitor.visitIntList(lengthInfo_, other.lengthInfo_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  if (!binaryValues_.isModifiable()) {
                    binaryValues_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(binaryValues_);
                  }
                  binaryValues_.add(input.readBytes());
                  break;
                }
                case 18: {
                  String s = input.readStringRequireUtf8();
                  if (!stringValues_.isModifiable()) {
                    stringValues_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(stringValues_);
                  }
                  stringValues_.add(s);
                  break;
                }
                case 24: {
                  if (!boolValues_.isModifiable()) {
                    boolValues_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(boolValues_);
                  }
                  boolValues_.addBoolean(input.readBool());
                  break;
                }
                case 26: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!boolValues_.isModifiable() && input.getBytesUntilLimit() > 0) {
                    final int currentSize = boolValues_.size();
                    boolValues_ = boolValues_.mutableCopyWithCapacity(
                        currentSize + (length/1));
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    boolValues_.addBoolean(input.readBool());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 32: {
                  if (!intValues_.isModifiable()) {
                    intValues_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(intValues_);
                  }
                  intValues_.addInt(input.readSInt32());
                  break;
                }
                case 34: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!intValues_.isModifiable() && input.getBytesUntilLimit() > 0) {
                    intValues_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(intValues_);
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    intValues_.addInt(input.readSInt32());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 40: {
                  if (!longValues_.isModifiable()) {
                    longValues_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(longValues_);
                  }
                  longValues_.addLong(input.readSInt64());
                  break;
                }
                case 42: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!longValues_.isModifiable() && input.getBytesUntilLimit() > 0) {
                    longValues_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(longValues_);
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    longValues_.addLong(input.readSInt64());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 53: {
                  if (!floatValues_.isModifiable()) {
                    floatValues_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(floatValues_);
                  }
                  floatValues_.addFloat(input.readFloat());
                  break;
                }
                case 50: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!floatValues_.isModifiable() && input.getBytesUntilLimit() > 0) {
                    final int currentSize = floatValues_.size();
                    floatValues_ = floatValues_.mutableCopyWithCapacity(
                        currentSize + (length/4));
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    floatValues_.addFloat(input.readFloat());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 57: {
                  if (!doubleValues_.isModifiable()) {
                    doubleValues_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(doubleValues_);
                  }
                  doubleValues_.addDouble(input.readDouble());
                  break;
                }
                case 58: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!doubleValues_.isModifiable() && input.getBytesUntilLimit() > 0) {
                    final int currentSize = doubleValues_.size();
                    doubleValues_ = doubleValues_.mutableCopyWithCapacity(
                        currentSize + (length/8));
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    doubleValues_.addDouble(input.readDouble());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 66: {
                  if (!docValues_.isModifiable()) {
                    docValues_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(docValues_);
                  }
                  docValues_.add(
                      input.readMessage(se.lth.cs.docforia.io.protobuf3.Singlepart.Document.parser(), extensionRegistry));
                  break;
                }
                case 74: {
                  if (!propmapValues_.isModifiable()) {
                    propmapValues_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(propmapValues_);
                  }
                  propmapValues_.add(
                      input.readMessage(se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap.parser(), extensionRegistry));
                  break;
                }
                case 80: {
                  if (!lengthInfo_.isModifiable()) {
                    lengthInfo_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(lengthInfo_);
                  }
                  lengthInfo_.addInt(input.readUInt32());
                  break;
                }
                case 82: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!lengthInfo_.isModifiable() && input.getBytesUntilLimit() > 0) {
                    lengthInfo_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(lengthInfo_);
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    lengthInfo_.addInt(input.readUInt32());
                  }
                  input.popLimit(limit);
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (se.lth.cs.docforia.io.protobuf3.Singlepart.Column.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:Column)
    private static final se.lth.cs.docforia.io.protobuf3.Singlepart.Column DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Column();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static se.lth.cs.docforia.io.protobuf3.Singlepart.Column getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Column> PARSER;

    public static com.google.protobuf.Parser<Column> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface TypeStreamOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TypeStream)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * List of set indicies, determines which set to use when decoding a single node.
     * </pre>
     *
     * <code>repeated sint32 stream = 1 [packed = true];</code>
     */
    java.util.List<java.lang.Integer> getStreamList();
    /**
     * <pre>
     * List of set indicies, determines which set to use when decoding a single node.
     * </pre>
     *
     * <code>repeated sint32 stream = 1 [packed = true];</code>
     */
    int getStreamCount();
    /**
     * <pre>
     * List of set indicies, determines which set to use when decoding a single node.
     * </pre>
     *
     * <code>repeated sint32 stream = 1 [packed = true];</code>
     */
    int getStream(int index);
  }
  /**
   * Protobuf type {@code TypeStream}
   */
  public  static final class TypeStream extends
      com.google.protobuf.GeneratedMessageLite<
          TypeStream, TypeStream.Builder> implements
      // @@protoc_insertion_point(message_implements:TypeStream)
      TypeStreamOrBuilder {
    private TypeStream() {
      stream_ = emptyIntList();
    }
    public static final int STREAM_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.IntList stream_;
    /**
     * <pre>
     * List of set indicies, determines which set to use when decoding a single node.
     * </pre>
     *
     * <code>repeated sint32 stream = 1 [packed = true];</code>
     */
    public java.util.List<java.lang.Integer>
        getStreamList() {
      return stream_;
    }
    /**
     * <pre>
     * List of set indicies, determines which set to use when decoding a single node.
     * </pre>
     *
     * <code>repeated sint32 stream = 1 [packed = true];</code>
     */
    public int getStreamCount() {
      return stream_.size();
    }
    /**
     * <pre>
     * List of set indicies, determines which set to use when decoding a single node.
     * </pre>
     *
     * <code>repeated sint32 stream = 1 [packed = true];</code>
     */
    public int getStream(int index) {
      return stream_.getInt(index);
    }
    private int streamMemoizedSerializedSize = -1;
    private void ensureStreamIsMutable() {
      if (!stream_.isModifiable()) {
        stream_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(stream_);
       }
    }
    /**
     * <pre>
     * List of set indicies, determines which set to use when decoding a single node.
     * </pre>
     *
     * <code>repeated sint32 stream = 1 [packed = true];</code>
     */
    private void setStream(
        int index, int value) {
      ensureStreamIsMutable();
      stream_.setInt(index, value);
    }
    /**
     * <pre>
     * List of set indicies, determines which set to use when decoding a single node.
     * </pre>
     *
     * <code>repeated sint32 stream = 1 [packed = true];</code>
     */
    private void addStream(int value) {
      ensureStreamIsMutable();
      stream_.addInt(value);
    }
    /**
     * <pre>
     * List of set indicies, determines which set to use when decoding a single node.
     * </pre>
     *
     * <code>repeated sint32 stream = 1 [packed = true];</code>
     */
    private void addAllStream(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureStreamIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, stream_);
    }
    /**
     * <pre>
     * List of set indicies, determines which set to use when decoding a single node.
     * </pre>
     *
     * <code>repeated sint32 stream = 1 [packed = true];</code>
     */
    private void clearStream() {
      stream_ = emptyIntList();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getStreamList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(streamMemoizedSerializedSize);
      }
      for (int i = 0; i < stream_.size(); i++) {
        output.writeSInt32NoTag(stream_.getInt(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < stream_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt32SizeNoTag(stream_.getInt(i));
        }
        size += dataSize;
        if (!getStreamList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        streamMemoizedSerializedSize = dataSize;
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code TypeStream}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream, Builder> implements
        // @@protoc_insertion_point(builder_implements:TypeStream)
        se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStreamOrBuilder {
      // Construct using se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * List of set indicies, determines which set to use when decoding a single node.
       * </pre>
       *
       * <code>repeated sint32 stream = 1 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getStreamList() {
        return java.util.Collections.unmodifiableList(
            instance.getStreamList());
      }
      /**
       * <pre>
       * List of set indicies, determines which set to use when decoding a single node.
       * </pre>
       *
       * <code>repeated sint32 stream = 1 [packed = true];</code>
       */
      public int getStreamCount() {
        return instance.getStreamCount();
      }
      /**
       * <pre>
       * List of set indicies, determines which set to use when decoding a single node.
       * </pre>
       *
       * <code>repeated sint32 stream = 1 [packed = true];</code>
       */
      public int getStream(int index) {
        return instance.getStream(index);
      }
      /**
       * <pre>
       * List of set indicies, determines which set to use when decoding a single node.
       * </pre>
       *
       * <code>repeated sint32 stream = 1 [packed = true];</code>
       */
      public Builder setStream(
          int index, int value) {
        copyOnWrite();
        instance.setStream(index, value);
        return this;
      }
      /**
       * <pre>
       * List of set indicies, determines which set to use when decoding a single node.
       * </pre>
       *
       * <code>repeated sint32 stream = 1 [packed = true];</code>
       */
      public Builder addStream(int value) {
        copyOnWrite();
        instance.addStream(value);
        return this;
      }
      /**
       * <pre>
       * List of set indicies, determines which set to use when decoding a single node.
       * </pre>
       *
       * <code>repeated sint32 stream = 1 [packed = true];</code>
       */
      public Builder addAllStream(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllStream(values);
        return this;
      }
      /**
       * <pre>
       * List of set indicies, determines which set to use when decoding a single node.
       * </pre>
       *
       * <code>repeated sint32 stream = 1 [packed = true];</code>
       */
      public Builder clearStream() {
        copyOnWrite();
        instance.clearStream();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TypeStream)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          stream_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream other = (se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream) arg1;
          stream_= visitor.visitIntList(stream_, other.stream_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  if (!stream_.isModifiable()) {
                    stream_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(stream_);
                  }
                  stream_.addInt(input.readSInt32());
                  break;
                }
                case 10: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!stream_.isModifiable() && input.getBytesUntilLimit() > 0) {
                    stream_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(stream_);
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    stream_.addInt(input.readSInt32());
                  }
                  input.popLimit(limit);
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TypeStream)
    private static final se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new TypeStream();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<TypeStream> PARSER;

    public static com.google.protobuf.Parser<TypeStream> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface DocumentOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Document)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .PropertyMap propmap = 1;</code>
     */
    boolean hasPropmap();
    /**
     * <code>optional .PropertyMap propmap = 1;</code>
     */
    se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap getPropmap();

    /**
     * <code>repeated .TypeStream nodestreams = 2;</code>
     */
    java.util.List<se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream> 
        getNodestreamsList();
    /**
     * <code>repeated .TypeStream nodestreams = 2;</code>
     */
    se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream getNodestreams(int index);
    /**
     * <code>repeated .TypeStream nodestreams = 2;</code>
     */
    int getNodestreamsCount();

    /**
     * <code>repeated .TypeStream edgestreams = 3;</code>
     */
    java.util.List<se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream> 
        getEdgestreamsList();
    /**
     * <code>repeated .TypeStream edgestreams = 3;</code>
     */
    se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream getEdgestreams(int index);
    /**
     * <code>repeated .TypeStream edgestreams = 3;</code>
     */
    int getEdgestreamsCount();

    /**
     * <code>repeated .Nodes nodes = 4;</code>
     */
    java.util.List<se.lth.cs.docforia.io.protobuf3.Singlepart.Nodes> 
        getNodesList();
    /**
     * <code>repeated .Nodes nodes = 4;</code>
     */
    se.lth.cs.docforia.io.protobuf3.Singlepart.Nodes getNodes(int index);
    /**
     * <code>repeated .Nodes nodes = 4;</code>
     */
    int getNodesCount();

    /**
     * <code>repeated .Edges edges = 5;</code>
     */
    java.util.List<se.lth.cs.docforia.io.protobuf3.Singlepart.Edges> 
        getEdgesList();
    /**
     * <code>repeated .Edges edges = 5;</code>
     */
    se.lth.cs.docforia.io.protobuf3.Singlepart.Edges getEdges(int index);
    /**
     * <code>repeated .Edges edges = 5;</code>
     */
    int getEdgesCount();
  }
  /**
   * Protobuf type {@code Document}
   */
  public  static final class Document extends
      com.google.protobuf.GeneratedMessageLite<
          Document, Document.Builder> implements
      // @@protoc_insertion_point(message_implements:Document)
      DocumentOrBuilder {
    private Document() {
      nodestreams_ = emptyProtobufList();
      edgestreams_ = emptyProtobufList();
      nodes_ = emptyProtobufList();
      edges_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int PROPMAP_FIELD_NUMBER = 1;
    private se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap propmap_;
    /**
     * <code>optional .PropertyMap propmap = 1;</code>
     */
    public boolean hasPropmap() {
      return propmap_ != null;
    }
    /**
     * <code>optional .PropertyMap propmap = 1;</code>
     */
    public se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap getPropmap() {
      return propmap_ == null ? se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap.getDefaultInstance() : propmap_;
    }
    /**
     * <code>optional .PropertyMap propmap = 1;</code>
     */
    private void setPropmap(se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap value) {
      if (value == null) {
        throw new NullPointerException();
      }
      propmap_ = value;
      
      }
    /**
     * <code>optional .PropertyMap propmap = 1;</code>
     */
    private void setPropmap(
        se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap.Builder builderForValue) {
      propmap_ = builderForValue.build();
      
    }
    /**
     * <code>optional .PropertyMap propmap = 1;</code>
     */
    private void mergePropmap(se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap value) {
      if (propmap_ != null &&
          propmap_ != se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap.getDefaultInstance()) {
        propmap_ =
          se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap.newBuilder(propmap_).mergeFrom(value).buildPartial();
      } else {
        propmap_ = value;
      }
      
    }
    /**
     * <code>optional .PropertyMap propmap = 1;</code>
     */
    private void clearPropmap() {  propmap_ = null;
      
    }

    public static final int NODESTREAMS_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream> nodestreams_;
    /**
     * <code>repeated .TypeStream nodestreams = 2;</code>
     */
    public java.util.List<se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream> getNodestreamsList() {
      return nodestreams_;
    }
    /**
     * <code>repeated .TypeStream nodestreams = 2;</code>
     */
    public java.util.List<? extends se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStreamOrBuilder> 
        getNodestreamsOrBuilderList() {
      return nodestreams_;
    }
    /**
     * <code>repeated .TypeStream nodestreams = 2;</code>
     */
    public int getNodestreamsCount() {
      return nodestreams_.size();
    }
    /**
     * <code>repeated .TypeStream nodestreams = 2;</code>
     */
    public se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream getNodestreams(int index) {
      return nodestreams_.get(index);
    }
    /**
     * <code>repeated .TypeStream nodestreams = 2;</code>
     */
    public se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStreamOrBuilder getNodestreamsOrBuilder(
        int index) {
      return nodestreams_.get(index);
    }
    private void ensureNodestreamsIsMutable() {
      if (!nodestreams_.isModifiable()) {
        nodestreams_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(nodestreams_);
       }
    }

    /**
     * <code>repeated .TypeStream nodestreams = 2;</code>
     */
    private void setNodestreams(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureNodestreamsIsMutable();
      nodestreams_.set(index, value);
    }
    /**
     * <code>repeated .TypeStream nodestreams = 2;</code>
     */
    private void setNodestreams(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream.Builder builderForValue) {
      ensureNodestreamsIsMutable();
      nodestreams_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .TypeStream nodestreams = 2;</code>
     */
    private void addNodestreams(se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureNodestreamsIsMutable();
      nodestreams_.add(value);
    }
    /**
     * <code>repeated .TypeStream nodestreams = 2;</code>
     */
    private void addNodestreams(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureNodestreamsIsMutable();
      nodestreams_.add(index, value);
    }
    /**
     * <code>repeated .TypeStream nodestreams = 2;</code>
     */
    private void addNodestreams(
        se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream.Builder builderForValue) {
      ensureNodestreamsIsMutable();
      nodestreams_.add(builderForValue.build());
    }
    /**
     * <code>repeated .TypeStream nodestreams = 2;</code>
     */
    private void addNodestreams(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream.Builder builderForValue) {
      ensureNodestreamsIsMutable();
      nodestreams_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .TypeStream nodestreams = 2;</code>
     */
    private void addAllNodestreams(
        java.lang.Iterable<? extends se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream> values) {
      ensureNodestreamsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, nodestreams_);
    }
    /**
     * <code>repeated .TypeStream nodestreams = 2;</code>
     */
    private void clearNodestreams() {
      nodestreams_ = emptyProtobufList();
    }
    /**
     * <code>repeated .TypeStream nodestreams = 2;</code>
     */
    private void removeNodestreams(int index) {
      ensureNodestreamsIsMutable();
      nodestreams_.remove(index);
    }

    public static final int EDGESTREAMS_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.ProtobufList<se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream> edgestreams_;
    /**
     * <code>repeated .TypeStream edgestreams = 3;</code>
     */
    public java.util.List<se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream> getEdgestreamsList() {
      return edgestreams_;
    }
    /**
     * <code>repeated .TypeStream edgestreams = 3;</code>
     */
    public java.util.List<? extends se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStreamOrBuilder> 
        getEdgestreamsOrBuilderList() {
      return edgestreams_;
    }
    /**
     * <code>repeated .TypeStream edgestreams = 3;</code>
     */
    public int getEdgestreamsCount() {
      return edgestreams_.size();
    }
    /**
     * <code>repeated .TypeStream edgestreams = 3;</code>
     */
    public se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream getEdgestreams(int index) {
      return edgestreams_.get(index);
    }
    /**
     * <code>repeated .TypeStream edgestreams = 3;</code>
     */
    public se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStreamOrBuilder getEdgestreamsOrBuilder(
        int index) {
      return edgestreams_.get(index);
    }
    private void ensureEdgestreamsIsMutable() {
      if (!edgestreams_.isModifiable()) {
        edgestreams_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(edgestreams_);
       }
    }

    /**
     * <code>repeated .TypeStream edgestreams = 3;</code>
     */
    private void setEdgestreams(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureEdgestreamsIsMutable();
      edgestreams_.set(index, value);
    }
    /**
     * <code>repeated .TypeStream edgestreams = 3;</code>
     */
    private void setEdgestreams(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream.Builder builderForValue) {
      ensureEdgestreamsIsMutable();
      edgestreams_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .TypeStream edgestreams = 3;</code>
     */
    private void addEdgestreams(se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureEdgestreamsIsMutable();
      edgestreams_.add(value);
    }
    /**
     * <code>repeated .TypeStream edgestreams = 3;</code>
     */
    private void addEdgestreams(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureEdgestreamsIsMutable();
      edgestreams_.add(index, value);
    }
    /**
     * <code>repeated .TypeStream edgestreams = 3;</code>
     */
    private void addEdgestreams(
        se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream.Builder builderForValue) {
      ensureEdgestreamsIsMutable();
      edgestreams_.add(builderForValue.build());
    }
    /**
     * <code>repeated .TypeStream edgestreams = 3;</code>
     */
    private void addEdgestreams(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream.Builder builderForValue) {
      ensureEdgestreamsIsMutable();
      edgestreams_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .TypeStream edgestreams = 3;</code>
     */
    private void addAllEdgestreams(
        java.lang.Iterable<? extends se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream> values) {
      ensureEdgestreamsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, edgestreams_);
    }
    /**
     * <code>repeated .TypeStream edgestreams = 3;</code>
     */
    private void clearEdgestreams() {
      edgestreams_ = emptyProtobufList();
    }
    /**
     * <code>repeated .TypeStream edgestreams = 3;</code>
     */
    private void removeEdgestreams(int index) {
      ensureEdgestreamsIsMutable();
      edgestreams_.remove(index);
    }

    public static final int NODES_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.ProtobufList<se.lth.cs.docforia.io.protobuf3.Singlepart.Nodes> nodes_;
    /**
     * <code>repeated .Nodes nodes = 4;</code>
     */
    public java.util.List<se.lth.cs.docforia.io.protobuf3.Singlepart.Nodes> getNodesList() {
      return nodes_;
    }
    /**
     * <code>repeated .Nodes nodes = 4;</code>
     */
    public java.util.List<? extends se.lth.cs.docforia.io.protobuf3.Singlepart.NodesOrBuilder> 
        getNodesOrBuilderList() {
      return nodes_;
    }
    /**
     * <code>repeated .Nodes nodes = 4;</code>
     */
    public int getNodesCount() {
      return nodes_.size();
    }
    /**
     * <code>repeated .Nodes nodes = 4;</code>
     */
    public se.lth.cs.docforia.io.protobuf3.Singlepart.Nodes getNodes(int index) {
      return nodes_.get(index);
    }
    /**
     * <code>repeated .Nodes nodes = 4;</code>
     */
    public se.lth.cs.docforia.io.protobuf3.Singlepart.NodesOrBuilder getNodesOrBuilder(
        int index) {
      return nodes_.get(index);
    }
    private void ensureNodesIsMutable() {
      if (!nodes_.isModifiable()) {
        nodes_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(nodes_);
       }
    }

    /**
     * <code>repeated .Nodes nodes = 4;</code>
     */
    private void setNodes(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.Nodes value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureNodesIsMutable();
      nodes_.set(index, value);
    }
    /**
     * <code>repeated .Nodes nodes = 4;</code>
     */
    private void setNodes(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.Nodes.Builder builderForValue) {
      ensureNodesIsMutable();
      nodes_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .Nodes nodes = 4;</code>
     */
    private void addNodes(se.lth.cs.docforia.io.protobuf3.Singlepart.Nodes value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureNodesIsMutable();
      nodes_.add(value);
    }
    /**
     * <code>repeated .Nodes nodes = 4;</code>
     */
    private void addNodes(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.Nodes value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureNodesIsMutable();
      nodes_.add(index, value);
    }
    /**
     * <code>repeated .Nodes nodes = 4;</code>
     */
    private void addNodes(
        se.lth.cs.docforia.io.protobuf3.Singlepart.Nodes.Builder builderForValue) {
      ensureNodesIsMutable();
      nodes_.add(builderForValue.build());
    }
    /**
     * <code>repeated .Nodes nodes = 4;</code>
     */
    private void addNodes(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.Nodes.Builder builderForValue) {
      ensureNodesIsMutable();
      nodes_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .Nodes nodes = 4;</code>
     */
    private void addAllNodes(
        java.lang.Iterable<? extends se.lth.cs.docforia.io.protobuf3.Singlepart.Nodes> values) {
      ensureNodesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, nodes_);
    }
    /**
     * <code>repeated .Nodes nodes = 4;</code>
     */
    private void clearNodes() {
      nodes_ = emptyProtobufList();
    }
    /**
     * <code>repeated .Nodes nodes = 4;</code>
     */
    private void removeNodes(int index) {
      ensureNodesIsMutable();
      nodes_.remove(index);
    }

    public static final int EDGES_FIELD_NUMBER = 5;
    private com.google.protobuf.Internal.ProtobufList<se.lth.cs.docforia.io.protobuf3.Singlepart.Edges> edges_;
    /**
     * <code>repeated .Edges edges = 5;</code>
     */
    public java.util.List<se.lth.cs.docforia.io.protobuf3.Singlepart.Edges> getEdgesList() {
      return edges_;
    }
    /**
     * <code>repeated .Edges edges = 5;</code>
     */
    public java.util.List<? extends se.lth.cs.docforia.io.protobuf3.Singlepart.EdgesOrBuilder> 
        getEdgesOrBuilderList() {
      return edges_;
    }
    /**
     * <code>repeated .Edges edges = 5;</code>
     */
    public int getEdgesCount() {
      return edges_.size();
    }
    /**
     * <code>repeated .Edges edges = 5;</code>
     */
    public se.lth.cs.docforia.io.protobuf3.Singlepart.Edges getEdges(int index) {
      return edges_.get(index);
    }
    /**
     * <code>repeated .Edges edges = 5;</code>
     */
    public se.lth.cs.docforia.io.protobuf3.Singlepart.EdgesOrBuilder getEdgesOrBuilder(
        int index) {
      return edges_.get(index);
    }
    private void ensureEdgesIsMutable() {
      if (!edges_.isModifiable()) {
        edges_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(edges_);
       }
    }

    /**
     * <code>repeated .Edges edges = 5;</code>
     */
    private void setEdges(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.Edges value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureEdgesIsMutable();
      edges_.set(index, value);
    }
    /**
     * <code>repeated .Edges edges = 5;</code>
     */
    private void setEdges(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.Edges.Builder builderForValue) {
      ensureEdgesIsMutable();
      edges_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .Edges edges = 5;</code>
     */
    private void addEdges(se.lth.cs.docforia.io.protobuf3.Singlepart.Edges value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureEdgesIsMutable();
      edges_.add(value);
    }
    /**
     * <code>repeated .Edges edges = 5;</code>
     */
    private void addEdges(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.Edges value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureEdgesIsMutable();
      edges_.add(index, value);
    }
    /**
     * <code>repeated .Edges edges = 5;</code>
     */
    private void addEdges(
        se.lth.cs.docforia.io.protobuf3.Singlepart.Edges.Builder builderForValue) {
      ensureEdgesIsMutable();
      edges_.add(builderForValue.build());
    }
    /**
     * <code>repeated .Edges edges = 5;</code>
     */
    private void addEdges(
        int index, se.lth.cs.docforia.io.protobuf3.Singlepart.Edges.Builder builderForValue) {
      ensureEdgesIsMutable();
      edges_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .Edges edges = 5;</code>
     */
    private void addAllEdges(
        java.lang.Iterable<? extends se.lth.cs.docforia.io.protobuf3.Singlepart.Edges> values) {
      ensureEdgesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, edges_);
    }
    /**
     * <code>repeated .Edges edges = 5;</code>
     */
    private void clearEdges() {
      edges_ = emptyProtobufList();
    }
    /**
     * <code>repeated .Edges edges = 5;</code>
     */
    private void removeEdges(int index) {
      ensureEdgesIsMutable();
      edges_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (propmap_ != null) {
        output.writeMessage(1, getPropmap());
      }
      for (int i = 0; i < nodestreams_.size(); i++) {
        output.writeMessage(2, nodestreams_.get(i));
      }
      for (int i = 0; i < edgestreams_.size(); i++) {
        output.writeMessage(3, edgestreams_.get(i));
      }
      for (int i = 0; i < nodes_.size(); i++) {
        output.writeMessage(4, nodes_.get(i));
      }
      for (int i = 0; i < edges_.size(); i++) {
        output.writeMessage(5, edges_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (propmap_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPropmap());
      }
      for (int i = 0; i < nodestreams_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, nodestreams_.get(i));
      }
      for (int i = 0; i < edgestreams_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, edgestreams_.get(i));
      }
      for (int i = 0; i < nodes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, nodes_.get(i));
      }
      for (int i = 0; i < edges_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, edges_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static se.lth.cs.docforia.io.protobuf3.Singlepart.Document parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.Document parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.Document parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.Document parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.Document parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.Document parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.Document parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.Document parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.Document parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static se.lth.cs.docforia.io.protobuf3.Singlepart.Document parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(se.lth.cs.docforia.io.protobuf3.Singlepart.Document prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code Document}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          se.lth.cs.docforia.io.protobuf3.Singlepart.Document, Builder> implements
        // @@protoc_insertion_point(builder_implements:Document)
        se.lth.cs.docforia.io.protobuf3.Singlepart.DocumentOrBuilder {
      // Construct using se.lth.cs.docforia.io.protobuf3.Singlepart.Document.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional .PropertyMap propmap = 1;</code>
       */
      public boolean hasPropmap() {
        return instance.hasPropmap();
      }
      /**
       * <code>optional .PropertyMap propmap = 1;</code>
       */
      public se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap getPropmap() {
        return instance.getPropmap();
      }
      /**
       * <code>optional .PropertyMap propmap = 1;</code>
       */
      public Builder setPropmap(se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap value) {
        copyOnWrite();
        instance.setPropmap(value);
        return this;
        }
      /**
       * <code>optional .PropertyMap propmap = 1;</code>
       */
      public Builder setPropmap(
          se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap.Builder builderForValue) {
        copyOnWrite();
        instance.setPropmap(builderForValue);
        return this;
      }
      /**
       * <code>optional .PropertyMap propmap = 1;</code>
       */
      public Builder mergePropmap(se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap value) {
        copyOnWrite();
        instance.mergePropmap(value);
        return this;
      }
      /**
       * <code>optional .PropertyMap propmap = 1;</code>
       */
      public Builder clearPropmap() {  copyOnWrite();
        instance.clearPropmap();
        return this;
      }

      /**
       * <code>repeated .TypeStream nodestreams = 2;</code>
       */
      public java.util.List<se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream> getNodestreamsList() {
        return java.util.Collections.unmodifiableList(
            instance.getNodestreamsList());
      }
      /**
       * <code>repeated .TypeStream nodestreams = 2;</code>
       */
      public int getNodestreamsCount() {
        return instance.getNodestreamsCount();
      }/**
       * <code>repeated .TypeStream nodestreams = 2;</code>
       */
      public se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream getNodestreams(int index) {
        return instance.getNodestreams(index);
      }
      /**
       * <code>repeated .TypeStream nodestreams = 2;</code>
       */
      public Builder setNodestreams(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream value) {
        copyOnWrite();
        instance.setNodestreams(index, value);
        return this;
      }
      /**
       * <code>repeated .TypeStream nodestreams = 2;</code>
       */
      public Builder setNodestreams(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream.Builder builderForValue) {
        copyOnWrite();
        instance.setNodestreams(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .TypeStream nodestreams = 2;</code>
       */
      public Builder addNodestreams(se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream value) {
        copyOnWrite();
        instance.addNodestreams(value);
        return this;
      }
      /**
       * <code>repeated .TypeStream nodestreams = 2;</code>
       */
      public Builder addNodestreams(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream value) {
        copyOnWrite();
        instance.addNodestreams(index, value);
        return this;
      }
      /**
       * <code>repeated .TypeStream nodestreams = 2;</code>
       */
      public Builder addNodestreams(
          se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream.Builder builderForValue) {
        copyOnWrite();
        instance.addNodestreams(builderForValue);
        return this;
      }
      /**
       * <code>repeated .TypeStream nodestreams = 2;</code>
       */
      public Builder addNodestreams(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream.Builder builderForValue) {
        copyOnWrite();
        instance.addNodestreams(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .TypeStream nodestreams = 2;</code>
       */
      public Builder addAllNodestreams(
          java.lang.Iterable<? extends se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream> values) {
        copyOnWrite();
        instance.addAllNodestreams(values);
        return this;
      }
      /**
       * <code>repeated .TypeStream nodestreams = 2;</code>
       */
      public Builder clearNodestreams() {
        copyOnWrite();
        instance.clearNodestreams();
        return this;
      }
      /**
       * <code>repeated .TypeStream nodestreams = 2;</code>
       */
      public Builder removeNodestreams(int index) {
        copyOnWrite();
        instance.removeNodestreams(index);
        return this;
      }

      /**
       * <code>repeated .TypeStream edgestreams = 3;</code>
       */
      public java.util.List<se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream> getEdgestreamsList() {
        return java.util.Collections.unmodifiableList(
            instance.getEdgestreamsList());
      }
      /**
       * <code>repeated .TypeStream edgestreams = 3;</code>
       */
      public int getEdgestreamsCount() {
        return instance.getEdgestreamsCount();
      }/**
       * <code>repeated .TypeStream edgestreams = 3;</code>
       */
      public se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream getEdgestreams(int index) {
        return instance.getEdgestreams(index);
      }
      /**
       * <code>repeated .TypeStream edgestreams = 3;</code>
       */
      public Builder setEdgestreams(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream value) {
        copyOnWrite();
        instance.setEdgestreams(index, value);
        return this;
      }
      /**
       * <code>repeated .TypeStream edgestreams = 3;</code>
       */
      public Builder setEdgestreams(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream.Builder builderForValue) {
        copyOnWrite();
        instance.setEdgestreams(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .TypeStream edgestreams = 3;</code>
       */
      public Builder addEdgestreams(se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream value) {
        copyOnWrite();
        instance.addEdgestreams(value);
        return this;
      }
      /**
       * <code>repeated .TypeStream edgestreams = 3;</code>
       */
      public Builder addEdgestreams(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream value) {
        copyOnWrite();
        instance.addEdgestreams(index, value);
        return this;
      }
      /**
       * <code>repeated .TypeStream edgestreams = 3;</code>
       */
      public Builder addEdgestreams(
          se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream.Builder builderForValue) {
        copyOnWrite();
        instance.addEdgestreams(builderForValue);
        return this;
      }
      /**
       * <code>repeated .TypeStream edgestreams = 3;</code>
       */
      public Builder addEdgestreams(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream.Builder builderForValue) {
        copyOnWrite();
        instance.addEdgestreams(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .TypeStream edgestreams = 3;</code>
       */
      public Builder addAllEdgestreams(
          java.lang.Iterable<? extends se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream> values) {
        copyOnWrite();
        instance.addAllEdgestreams(values);
        return this;
      }
      /**
       * <code>repeated .TypeStream edgestreams = 3;</code>
       */
      public Builder clearEdgestreams() {
        copyOnWrite();
        instance.clearEdgestreams();
        return this;
      }
      /**
       * <code>repeated .TypeStream edgestreams = 3;</code>
       */
      public Builder removeEdgestreams(int index) {
        copyOnWrite();
        instance.removeEdgestreams(index);
        return this;
      }

      /**
       * <code>repeated .Nodes nodes = 4;</code>
       */
      public java.util.List<se.lth.cs.docforia.io.protobuf3.Singlepart.Nodes> getNodesList() {
        return java.util.Collections.unmodifiableList(
            instance.getNodesList());
      }
      /**
       * <code>repeated .Nodes nodes = 4;</code>
       */
      public int getNodesCount() {
        return instance.getNodesCount();
      }/**
       * <code>repeated .Nodes nodes = 4;</code>
       */
      public se.lth.cs.docforia.io.protobuf3.Singlepart.Nodes getNodes(int index) {
        return instance.getNodes(index);
      }
      /**
       * <code>repeated .Nodes nodes = 4;</code>
       */
      public Builder setNodes(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.Nodes value) {
        copyOnWrite();
        instance.setNodes(index, value);
        return this;
      }
      /**
       * <code>repeated .Nodes nodes = 4;</code>
       */
      public Builder setNodes(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.Nodes.Builder builderForValue) {
        copyOnWrite();
        instance.setNodes(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .Nodes nodes = 4;</code>
       */
      public Builder addNodes(se.lth.cs.docforia.io.protobuf3.Singlepart.Nodes value) {
        copyOnWrite();
        instance.addNodes(value);
        return this;
      }
      /**
       * <code>repeated .Nodes nodes = 4;</code>
       */
      public Builder addNodes(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.Nodes value) {
        copyOnWrite();
        instance.addNodes(index, value);
        return this;
      }
      /**
       * <code>repeated .Nodes nodes = 4;</code>
       */
      public Builder addNodes(
          se.lth.cs.docforia.io.protobuf3.Singlepart.Nodes.Builder builderForValue) {
        copyOnWrite();
        instance.addNodes(builderForValue);
        return this;
      }
      /**
       * <code>repeated .Nodes nodes = 4;</code>
       */
      public Builder addNodes(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.Nodes.Builder builderForValue) {
        copyOnWrite();
        instance.addNodes(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .Nodes nodes = 4;</code>
       */
      public Builder addAllNodes(
          java.lang.Iterable<? extends se.lth.cs.docforia.io.protobuf3.Singlepart.Nodes> values) {
        copyOnWrite();
        instance.addAllNodes(values);
        return this;
      }
      /**
       * <code>repeated .Nodes nodes = 4;</code>
       */
      public Builder clearNodes() {
        copyOnWrite();
        instance.clearNodes();
        return this;
      }
      /**
       * <code>repeated .Nodes nodes = 4;</code>
       */
      public Builder removeNodes(int index) {
        copyOnWrite();
        instance.removeNodes(index);
        return this;
      }

      /**
       * <code>repeated .Edges edges = 5;</code>
       */
      public java.util.List<se.lth.cs.docforia.io.protobuf3.Singlepart.Edges> getEdgesList() {
        return java.util.Collections.unmodifiableList(
            instance.getEdgesList());
      }
      /**
       * <code>repeated .Edges edges = 5;</code>
       */
      public int getEdgesCount() {
        return instance.getEdgesCount();
      }/**
       * <code>repeated .Edges edges = 5;</code>
       */
      public se.lth.cs.docforia.io.protobuf3.Singlepart.Edges getEdges(int index) {
        return instance.getEdges(index);
      }
      /**
       * <code>repeated .Edges edges = 5;</code>
       */
      public Builder setEdges(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.Edges value) {
        copyOnWrite();
        instance.setEdges(index, value);
        return this;
      }
      /**
       * <code>repeated .Edges edges = 5;</code>
       */
      public Builder setEdges(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.Edges.Builder builderForValue) {
        copyOnWrite();
        instance.setEdges(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .Edges edges = 5;</code>
       */
      public Builder addEdges(se.lth.cs.docforia.io.protobuf3.Singlepart.Edges value) {
        copyOnWrite();
        instance.addEdges(value);
        return this;
      }
      /**
       * <code>repeated .Edges edges = 5;</code>
       */
      public Builder addEdges(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.Edges value) {
        copyOnWrite();
        instance.addEdges(index, value);
        return this;
      }
      /**
       * <code>repeated .Edges edges = 5;</code>
       */
      public Builder addEdges(
          se.lth.cs.docforia.io.protobuf3.Singlepart.Edges.Builder builderForValue) {
        copyOnWrite();
        instance.addEdges(builderForValue);
        return this;
      }
      /**
       * <code>repeated .Edges edges = 5;</code>
       */
      public Builder addEdges(
          int index, se.lth.cs.docforia.io.protobuf3.Singlepart.Edges.Builder builderForValue) {
        copyOnWrite();
        instance.addEdges(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .Edges edges = 5;</code>
       */
      public Builder addAllEdges(
          java.lang.Iterable<? extends se.lth.cs.docforia.io.protobuf3.Singlepart.Edges> values) {
        copyOnWrite();
        instance.addAllEdges(values);
        return this;
      }
      /**
       * <code>repeated .Edges edges = 5;</code>
       */
      public Builder clearEdges() {
        copyOnWrite();
        instance.clearEdges();
        return this;
      }
      /**
       * <code>repeated .Edges edges = 5;</code>
       */
      public Builder removeEdges(int index) {
        copyOnWrite();
        instance.removeEdges(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Document)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new se.lth.cs.docforia.io.protobuf3.Singlepart.Document();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          nodestreams_.makeImmutable();
          edgestreams_.makeImmutable();
          nodes_.makeImmutable();
          edges_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          se.lth.cs.docforia.io.protobuf3.Singlepart.Document other = (se.lth.cs.docforia.io.protobuf3.Singlepart.Document) arg1;
          propmap_ = visitor.visitMessage(propmap_, other.propmap_);
          nodestreams_= visitor.visitList(nodestreams_, other.nodestreams_);
          edgestreams_= visitor.visitList(edgestreams_, other.edgestreams_);
          nodes_= visitor.visitList(nodes_, other.nodes_);
          edges_= visitor.visitList(edges_, other.edges_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap.Builder subBuilder = null;
                  if (propmap_ != null) {
                    subBuilder = propmap_.toBuilder();
                  }
                  propmap_ = input.readMessage(se.lth.cs.docforia.io.protobuf3.Singlepart.PropertyMap.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(propmap_);
                    propmap_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 18: {
                  if (!nodestreams_.isModifiable()) {
                    nodestreams_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(nodestreams_);
                  }
                  nodestreams_.add(
                      input.readMessage(se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream.parser(), extensionRegistry));
                  break;
                }
                case 26: {
                  if (!edgestreams_.isModifiable()) {
                    edgestreams_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(edgestreams_);
                  }
                  edgestreams_.add(
                      input.readMessage(se.lth.cs.docforia.io.protobuf3.Singlepart.TypeStream.parser(), extensionRegistry));
                  break;
                }
                case 34: {
                  if (!nodes_.isModifiable()) {
                    nodes_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(nodes_);
                  }
                  nodes_.add(
                      input.readMessage(se.lth.cs.docforia.io.protobuf3.Singlepart.Nodes.parser(), extensionRegistry));
                  break;
                }
                case 42: {
                  if (!edges_.isModifiable()) {
                    edges_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(edges_);
                  }
                  edges_.add(
                      input.readMessage(se.lth.cs.docforia.io.protobuf3.Singlepart.Edges.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (se.lth.cs.docforia.io.protobuf3.Singlepart.Document.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:Document)
    private static final se.lth.cs.docforia.io.protobuf3.Singlepart.Document DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Document();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static se.lth.cs.docforia.io.protobuf3.Singlepart.Document getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Document> PARSER;

    public static com.google.protobuf.Parser<Document> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
